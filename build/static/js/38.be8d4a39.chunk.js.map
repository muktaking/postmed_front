{"version":3,"sources":["container/category/categoryForm.js","container/category/category.jsx"],"names":["CategoryForm","props","submitHandler","handleChange","formErrors","categories","name","selectOptionValueRef","category","showEditCategoryAccordionStateHandler","Accordion","className","defaultActiveKey","Toggle","as","Card","Header","eventKey","Collapse","Form","onSubmit","enctype","Group","controlId","Label","Control","type","placeholder","value","onChange","length","ref","map","categorySlug","slug","replace","id","selected","parentId","order","description","image","Button","variant","onClick","formValid","rest","valid","error","Object","values","forEach","v","Category","resetState","setState","isEditCategory","popover","Popover","Title","Content","deleteCategory","hideResponse","response","e","preventDefault","state","current","data","FormData","keys","key","append","setAuthorizationToken","auth","token","loading","axios","request","baseURL","process","url","method","then","res","responseClass","onFetchCategoryLoader","setTimeout","catch","errorHandler","toUpperCase","editCategorysubmitHandler","target","files","validator","isLength","min","max","contains","isInt","isMongoId","isNumeric","isEmpty","showEditCategoryComponent","React","createRef","this","delete","RoutesConfig","metaInfo","Spinner","animation","role","Alert","OverlayTrigger","trigger","placement","rootClose","overlay","disabled","Component","connect","dispatch","fetchCategory","onCreateCategoryloader","createCategory"],"mappings":"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","file":"static/js/38.be8d4a39.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Accordion, Button, Card, Form } from 'react-bootstrap'\r\n\r\nconst CategoryForm = (props) => {\r\n  const {\r\n    submitHandler,\r\n    handleChange,\r\n    formErrors,\r\n    categories,\r\n    name,\r\n    //slug,\r\n    selectOptionValueRef,\r\n    category,\r\n    showEditCategoryAccordionStateHandler\r\n  } = props\r\n  return (\r\n    <Accordion className='mt-3' defaultActiveKey={name && '0'}>\r\n      <Accordion.Toggle as={Card.Header} eventKey='0'>\r\n        <h3> {name ? 'Edit ' + name : 'Create A New'} Category</h3>\r\n      </Accordion.Toggle>\r\n      <Accordion.Collapse eventKey='0'>\r\n        <Form\r\n          className='mt-2'\r\n          onSubmit={submitHandler}\r\n          enctype='multipart/form-data'\r\n        >\r\n          <Form.Group controlId='formGroupCategoryName'>\r\n            <Form.Label>Category Name</Form.Label>\r\n            <Form.Control\r\n              type='text'\r\n              placeholder='Category Name'\r\n              name='name'\r\n              value={category ? category.name : null}\r\n              onChange={handleChange}\r\n            />\r\n            {formErrors.name.length > 0 && (\r\n              <span className='errorMessage'>{formErrors.name}</span>\r\n            )}\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId='formGridParent'>\r\n            <Form.Label>Parent Category</Form.Label>\r\n            <Form.Control\r\n              as='select'\r\n              name='parentId'\r\n              onChange={handleChange}\r\n              ref={selectOptionValueRef}\r\n            >\r\n              <option value='Top'>Top</option>\r\n              {categories.map((value) => {\r\n                let categorySlug = value.slug.replace(/_/g, ' / ')\r\n                return (\r\n                  <option\r\n                    value={value.id}\r\n                    selected={category && value.id === category.parentId}\r\n                  >\r\n                    {categorySlug}\r\n                  </option>\r\n                )\r\n              })}\r\n            </Form.Control>\r\n            {formErrors.parentId.length > 0 && (\r\n              <span className='errorMessage'>{formErrors.parentId}</span>\r\n            )}\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId='formGroupCategoryOrder'>\r\n            <Form.Label>Category Order</Form.Label>\r\n            <Form.Control\r\n              type='text'\r\n              name='order'\r\n              value={category && category.order}\r\n              placeholder='e.g. 5 <..Order makes priority. Lower value higher order..>'\r\n              onChange={handleChange}\r\n            />\r\n            {formErrors.order.length > 0 && (\r\n              <span className='errorMessage'>{formErrors.order}</span>\r\n            )}\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId='formGroupCategoryDes'>\r\n            <Form.Label>Description</Form.Label>\r\n            <Form.Control\r\n              type='textarea'\r\n              placeholder='Enter short description'\r\n              name='description'\r\n              value={category && category.description}\r\n              onChange={handleChange}\r\n            />\r\n            {formErrors.description.length > 0 && (\r\n              <span className='errorMessage'>{formErrors.description}</span>\r\n            )}\r\n          </Form.Group>\r\n\r\n          <Form.Group>\r\n            <Form.Label>Upload Image</Form.Label>\r\n            <input\r\n              type='file'\r\n              name='image'\r\n              className={'form-control-file'}\r\n              onChange={handleChange}\r\n            />\r\n            {formErrors.image.length > 0 && (\r\n              <span className='errorMessage'>{formErrors.image}</span>\r\n            )}\r\n          </Form.Group>\r\n\r\n          <Button type='submit' className='btn-submit'>\r\n            Submit\r\n          </Button>\r\n          {name && (\r\n            <Button\r\n              variant='success'\r\n              className='ml-3'\r\n              onClick={showEditCategoryAccordionStateHandler}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          )}\r\n        </Form>\r\n      </Accordion.Collapse>\r\n    </Accordion>\r\n  )\r\n}\r\n\r\nexport default CategoryForm\r\n","import axios from 'axios'\r\nimport React, { Component } from 'react'\r\nimport { OverlayTrigger, Popover } from 'react-bootstrap'\r\nimport Accordion from 'react-bootstrap/Accordion'\r\nimport Alert from 'react-bootstrap/Alert'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Card from 'react-bootstrap/Card'\r\nimport Spinner from 'react-bootstrap/Spinner'\r\nimport { connect } from 'react-redux'\r\nimport validator from 'validator'\r\nimport MetaInfo from '../../components/seo/metainfo'\r\nimport { RoutesConfig } from '../../config/routes.config'\r\nimport { createCategory, fetchCategory } from '../../store/category'\r\nimport errorHandler from '../../utils/errorHandler'\r\nimport setAuthorizationToken from '../../utils/setAuthorizationToken'\r\nimport CategoryForm from './categoryForm'\r\n\r\nconst formValid = ({ formErrors, rest }) => {\r\n  //to check if form fields are null or contain error\r\n  let valid = true\r\n  let error = ''\r\n  Object.values(formErrors).forEach((v) => {\r\n    v.length > 0 && (valid = false) && (error = v)\r\n    v.length > 0 && (error = v)\r\n  })\r\n\r\n  Object.values(rest).forEach((v) => {\r\n    v === null && (valid = false)\r\n  })\r\n  return { valid, error } // valid: is it valid ; error: what is the error message\r\n}\r\n\r\nclass Category extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      loading: false, // controlls spinner state\r\n      //isEditCategory: false,\r\n      id: null, // need to pass id in edit or delete category section\r\n      name: null, // used in editCategory component to display the category name in heading\r\n      slug: null,\r\n      parentId: 'Top',\r\n      description: null,\r\n      order: null,\r\n      image: null, // required in create, optional in edit and no need delete section\r\n      response: null, // to display response message\r\n      responseClass: 'success', // depends on response type\r\n      showEditCategoryComponent: false, // show or hide editCategory component\r\n      formErrors: {\r\n        // for storing form feilds error on handle change\r\n        name: '',\r\n        parentId: '',\r\n        description: '',\r\n        order: '',\r\n        image: ''\r\n      }\r\n    }\r\n    this.selectOptionValueRef = React.createRef()\r\n  }\r\n  resetState = () => {\r\n    this.setState({\r\n      id: null,\r\n      name: null,\r\n      slug: null,\r\n      parentId: 'Top',\r\n      description: null,\r\n      order: null,\r\n      image: null,\r\n      isEditCategory: false\r\n    })\r\n  }\r\n  popover = (\r\n    category // function to deliver popover\r\n  ) => (\r\n    <Popover id='popover-basic'>\r\n      <Popover.Title as='h3' className='bg-warning text-white'>\r\n        Warning Message\r\n      </Popover.Title>\r\n      <Popover.Content>\r\n        Are you sure You want to delete category.\r\n        <Button\r\n          variant='danger ml-3'\r\n          onClick={() => {\r\n            this.deleteCategory(category)\r\n          }}\r\n        >\r\n          Yes\r\n        </Button>\r\n      </Popover.Content>\r\n    </Popover>\r\n  )\r\n\r\n  hideResponse = () => {\r\n    // hide the response message\r\n    this.setState({ response: null })\r\n  }\r\n\r\n  submitHandler = (e) => {\r\n    e.preventDefault()\r\n\r\n    const { formErrors, name, order, description, image } = this.state\r\n\r\n    const parentId =\r\n      this.state.parentId || this.selectOptionValueRef.current.value\r\n\r\n    const rest = { name, parentId, order, description, image }\r\n\r\n    const { valid, error } = formValid({ rest, formErrors })\r\n\r\n    if (valid) {\r\n      //this.resetState();\r\n      const data = new FormData()\r\n      Object.keys(rest).forEach((key) => {\r\n        rest[key] && data.append(key, rest[key])\r\n      })\r\n      setAuthorizationToken(this.props.auth.token)\r\n      this.setState({ loading: true })\r\n\r\n      axios\r\n        .request({\r\n          baseURL: process.env.REACT_APP_SITE_URL,\r\n          url: '/categories',\r\n          method: 'post',\r\n          data\r\n        })\r\n        .then((res) => {\r\n          this.setState({\r\n            loading: false,\r\n            response: 'Successfully created Category',\r\n            responseClass: 'success'\r\n          })\r\n          this.props.onFetchCategoryLoader() // update the category upon creating or updating of category\r\n          setTimeout(this.hideResponse, 2000) // after 2s respones message will disaper\r\n        })\r\n        .catch((e) => {\r\n          const response = errorHandler(e)\r\n          this.setState({ loading: false, response, responseClass: 'danger' })\r\n          setTimeout(this.hideResponse, 2000)\r\n        })\r\n    } else {\r\n      this.setState({\r\n        response:\r\n          'Please fill form corectly' +\r\n          (error ? ' __ ' + error.toUpperCase() + ' __' : ''),\r\n        responseClass: 'danger'\r\n      })\r\n      setTimeout(this.hideResponse, 2000)\r\n    }\r\n  }\r\n\r\n  editCategorysubmitHandler = (e) => {\r\n    e.preventDefault()\r\n\r\n    const { formErrors, id, name, order, description, image, slug } = this.state\r\n    const parentId =\r\n      this.state.parentId || this.selectOptionValueRef.current.value\r\n\r\n    const rest = image\r\n      ? { id, name, slug, parentId, order, description, image }\r\n      : { id, name, slug, parentId, order, description }\r\n\r\n    const { valid, error } = formValid({ rest, formErrors })\r\n\r\n    if (valid) {\r\n      this.resetState()\r\n      const data = new FormData()\r\n      Object.keys(rest).forEach((key) => {\r\n        rest[key] && data.append(key, rest[key])\r\n      })\r\n\r\n      setAuthorizationToken(this.props.auth.token)\r\n      this.setState({ loading: true })\r\n\r\n      axios\r\n        .request({\r\n          baseURL: process.env.REACT_APP_SITE_URL,\r\n          url: '/categories',\r\n          method: 'patch',\r\n          data\r\n        })\r\n        .then((res) => {\r\n          this.setState({\r\n            loading: false,\r\n            response: 'Successfully Updated Category',\r\n            responseClass: 'success'\r\n          })\r\n          this.props.onFetchCategoryLoader() // update the category upon creating or updating of category\r\n          setTimeout(this.hideResponse, 2000) // after 2s respones message will disaper\r\n        })\r\n        .catch((e) => {\r\n          const response = errorHandler(e)\r\n          this.setState({ loading: false, response, responseClass: 'danger' })\r\n          setTimeout(this.hideResponse, 2000)\r\n        })\r\n      this.resetState()\r\n    } else {\r\n      this.setState({\r\n        response:\r\n          'Please fill form corectly' +\r\n          (error ? ' __ ' + error.toUpperCase() + ' __' : ''),\r\n        responseClass: 'danger'\r\n      })\r\n      setTimeout(this.hideResponse, 2000)\r\n    }\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    const { name, value, files } = e.target\r\n    let formErrors = this.state.formErrors\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        formErrors.name =\r\n          validator.isLength(value, { min: 1, max: 25 }) &&\r\n          !validator.contains(value, '_') &&\r\n          !validator.contains(value, '/')\r\n            ? ''\r\n            : \"Category Name should not be emty, more than 25 charecter and contain '_,/'\"\r\n        break\r\n      case 'description':\r\n        formErrors.description = validator.isLength(value, {\r\n          min: 30,\r\n          max: 300\r\n        })\r\n          ? ''\r\n          : 'Description should be minimum 30 or maximum 300 characters'\r\n        break\r\n      case 'parentId':\r\n        formErrors.parentId =\r\n          value === 'Top' ||\r\n          validator.isInt(value) ||\r\n          validator.isMongoId(value)\r\n            ? ''\r\n            : 'ParentId is not valid'\r\n        break\r\n      case 'order':\r\n        formErrors.order = validator.isNumeric(value)\r\n          ? ''\r\n          : 'Order should be only number'\r\n        break\r\n      case 'image':\r\n        formErrors.image = !validator.isEmpty(value)\r\n          ? ''\r\n          : 'Choose a valid image'\r\n        break\r\n      default:\r\n        break\r\n    }\r\n\r\n    this.setState({\r\n      formErrors: formErrors,\r\n      [name]: files ? files[0] : value\r\n    })\r\n  }\r\n\r\n  deleteCategory(category) {\r\n    setAuthorizationToken(this.props.auth.token)\r\n    this.setState({ loading: true })\r\n\r\n    axios\r\n      .delete(process.env.REACT_APP_SITE_URL + '/categories', {\r\n        data: { id: category.id }\r\n      })\r\n      .then((res) => {\r\n        this.setState({\r\n          loading: false,\r\n          response: category.name + ' deleted successfully',\r\n          responseClass: 'success'\r\n        })\r\n        this.props.onFetchCategoryLoader()\r\n        setTimeout(this.hideResponse, 2000)\r\n      })\r\n      .catch((e) => {\r\n        const response = errorHandler(e)\r\n        this.setState({\r\n          loading: false,\r\n          response,\r\n          responseClass: 'danger'\r\n        })\r\n        setTimeout(this.hideResponse, 2000)\r\n      })\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.onFetchCategoryLoader()\r\n  }\r\n\r\n  render() {\r\n    const { categories } = this.props.category\r\n    return (\r\n      <>\r\n        <MetaInfo {...RoutesConfig.Category.metaInfo} />\r\n        {this.state.loading && (\r\n          <Spinner\r\n            animation='border'\r\n            role='status'\r\n            variant='dark'\r\n            className='content-center'\r\n          ></Spinner>\r\n        )}\r\n\r\n        {this.state.response && (\r\n          <Alert\r\n            variant={this.state.responseClass}\r\n            className='text-center content-center'\r\n          >\r\n            {this.state.response}\r\n          </Alert>\r\n        )}\r\n\r\n        <CategoryForm\r\n          submitHandler={this.submitHandler}\r\n          handleChange={this.handleChange}\r\n          formErrors={this.state.formErrors}\r\n          categories={categories}\r\n          category={{\r\n            name: this.state.name,\r\n            parentId: this.state.parentId,\r\n            order: this.state.order,\r\n            description: this.state.description\r\n          }}\r\n        />\r\n\r\n        <div className='mt-3'>\r\n          <Accordion>\r\n            <Accordion.Toggle as={Card.Header} eventKey='1'>\r\n              <h3>Edit Category</h3>\r\n            </Accordion.Toggle>\r\n            <Accordion.Collapse eventKey='1'>\r\n              <div className='mt-2 p-2'>\r\n                {categories.map((e) => {\r\n                  return (\r\n                    <Alert variant='primary'>\r\n                      {e.slug}\r\n                      <Button\r\n                        className='ml-2'\r\n                        onClick={() => {\r\n                          this.setState({\r\n                            id: e.id,\r\n                            slug: e.slug,\r\n                            name: e.name,\r\n                            parentId: e.parentId,\r\n                            order: e.order,\r\n                            description: e.description,\r\n                            showEditCategoryComponent: e.slug\r\n                          })\r\n                        }}\r\n                      >\r\n                        Edit\r\n                      </Button>\r\n                      <OverlayTrigger\r\n                        trigger={['click']}\r\n                        placement='right'\r\n                        rootClose\r\n                        overlay={this.popover(e)}\r\n                      >\r\n                        <Button\r\n                          className='ml-2'\r\n                          variant='danger'\r\n                          disabled={this.state.showEditCategoryComponent}\r\n                        >\r\n                          Delete\r\n                        </Button>\r\n                      </OverlayTrigger>\r\n                      <div>\r\n                        {this.state.showEditCategoryComponent === e.slug && (\r\n                          <CategoryForm\r\n                            submitHandler={this.editCategorysubmitHandler}\r\n                            handleChange={this.handleChange}\r\n                            loading={this.state.loading}\r\n                            formErrors={this.state.formErrors}\r\n                            categories={categories}\r\n                            name={e.name}\r\n                            //slug={e.slug}\r\n                            selectOptionValueRef={this.selectOptionValueRef}\r\n                            category={{\r\n                              name: this.state.name,\r\n                              parentId: this.state.parentId,\r\n                              order: this.state.order,\r\n                              description: this.state.description\r\n                            }}\r\n                            showEditCategoryAccordionStateHandler={() => {\r\n                              this.setState({\r\n                                showEditCategoryComponent: false\r\n                              })\r\n                            }}\r\n                          />\r\n                        )}\r\n                      </div>\r\n                    </Alert>\r\n                  )\r\n                })}\r\n              </div>\r\n            </Accordion.Collapse>\r\n          </Accordion>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onFetchCategoryLoader: () => dispatch(fetchCategory()),\r\n    onCreateCategoryloader: (data) => dispatch(createCategory(data))\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.auth,\r\n    category: state.category\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Category)\r\n"],"sourceRoot":""}