{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","components/shared/spinner/spinner.js","container/exams/examListsByCat.js"],"names":["_objectWithoutProperties","source","excluded","key","i","target","Object","getOwnPropertySymbols","sourceSymbolKeys","length","indexOf","prototype","propertyIsEnumerable","call","contentCenter","position","top","left","zIndex","SpinnerCustom","animation","role","variant","style","ExamListsByCat","dispatch","useDispatch","catHierarchy","useSelector","state","category","useEffect","fetchCategory","className","catExtractor","map","cat","child","CatCard","id","props","useState","show","setShow","fontSize","to","name","size","onClick"],"mappings":"6GAAA,8CACe,SAASA,EAAyBC,EAAQC,GACvD,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IACIE,EAAKC,EADLC,EAAS,YAA6BJ,EAAQC,GAGlD,GAAII,OAAOC,sBAAuB,CAChC,IAAIC,EAAmBF,OAAOC,sBAAsBN,GAEpD,IAAKG,EAAI,EAAGA,EAAII,EAAiBC,OAAQL,IACvCD,EAAMK,EAAiBJ,GACnBF,EAASQ,QAAQP,IAAQ,GACxBG,OAAOK,UAAUC,qBAAqBC,KAAKZ,EAAQE,KACxDE,EAAOF,GAAOF,EAAOE,IAIzB,OAAOE,I,iCCjBT,+DAGMS,EAAgB,CAEpBC,SAAU,QACVC,IAAK,OACLC,KAAM,MACNC,OAAQ,eAGK,SAASC,IACtB,OACE,kBAAC,IAAD,CACEC,UAAU,OACVC,KAAK,SACLC,QAAQ,OACRC,MAAOT,M,iLCTE,SAASU,IACtB,IAAMC,EAAWC,cACXC,EAAeC,aAAY,SAACC,GAAD,OAAWA,EAAMC,SAASH,gBAM3D,OAJAI,qBAAU,WACRN,EAASO,iBACR,CAACP,IAGF,yBAAKQ,UAAU,IACZN,EAAalB,OAAS,GAAK,kBAAC,IAAD,MAC5B,wBAAIwB,UAAU,eAAd,mBACA,6BAKN,SAASC,EAAaP,GACpB,OAAOA,EAAaQ,KAAI,SAACC,GACvB,IAAIC,EAAQ,KAIZ,OAHID,EAAIC,QACNA,EAAQH,EAAaE,EAAIC,QAEpB,kBAACC,EAAD,CAASnC,IAAKiC,EAAIG,GAAIH,IAAKA,EAAKC,MAAOA,OAXtCH,CAAaP,KAezB,SAASW,EAAT,GAA4C,IAAzBF,EAAwB,EAAxBA,IAAKC,EAAmB,EAAnBA,MAAUG,EAAS,iCACjBC,oBAAS,GADQ,mBAClCC,EADkC,KAC5BC,EAD4B,KAGzC,OACE,yBACEV,UAAU,iDACVO,MAAK,eAAOA,IAGZ,yBACEP,UAAU,mCACVV,MAAO,CAAEqB,SAAU,WAEnB,kBAAC,IAAD,CAAOtB,QAAQ,QAAQW,UAAU,OAC/B,kBAAC,OAAD,CAAMY,GAAI,mBAAqBT,EAAIU,KAAO,IAAMV,EAAIG,IACjDH,EAAIU,OAGRT,IACEK,EACC,kBAAC,IAAD,CACEK,KAAM,SACNC,QAAS,WACPL,GAASD,MAIb,kBAAC,IAAD,CACEK,KAAM,SACNC,QAAS,WACPL,GAASD,QAKnB,6BAAMA,GAAQL","file":"static/js/54.50fe8925.chunk.js","sourcesContent":["import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nconst contentCenter = {\r\n  //styling to display server response in middle of screen\r\n  position: 'fixed',\r\n  top: '45vh',\r\n  left: '50%',\r\n  zIndex: '10000000000'\r\n}\r\n\r\nexport default function SpinnerCustom() {\r\n  return (\r\n    <Spinner\r\n      animation='grow'\r\n      role='status'\r\n      variant='dark'\r\n      style={contentCenter}\r\n    ></Spinner>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Badge } from 'react-bootstrap'\r\nimport { BsFillDashCircleFill, BsPlusCircleFill } from 'react-icons/bs'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport Spinner from '../../components/shared/spinner/spinner'\r\nimport { fetchCategory } from '../../store/category'\r\n\r\nexport default function ExamListsByCat() {\r\n  const dispatch = useDispatch()\r\n  const catHierarchy = useSelector((state) => state.category.catHierarchy)\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchCategory())\r\n  }, [dispatch])\r\n\r\n  return (\r\n    <div className=''>\r\n      {catHierarchy.length < 1 && <Spinner />}\r\n      <h2 className='text-center'>Exam Categories</h2>\r\n      <div>{catExtractor(catHierarchy)}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction catExtractor(catHierarchy) {\r\n  return catHierarchy.map((cat) => {\r\n    let child = null\r\n    if (cat.child) {\r\n      child = catExtractor(cat.child)\r\n    }\r\n    return <CatCard key={cat.id} cat={cat} child={child} />\r\n  })\r\n}\r\n\r\nfunction CatCard({ cat, child, ...props }) {\r\n  const [show, setShow] = useState(false)\r\n\r\n  return (\r\n    <div\r\n      className='cat-card mt-1 ml-3 border-top-0 border-warning'\r\n      props={{ ...props }}\r\n    >\r\n      {/* <Image width={80}  src={process.env.REACT_APP_SITE_URL + \"/\" + cat.imageUrl} thumbnail /> */}\r\n      <div\r\n        className='p-3 bg-warning text-white parent'\r\n        style={{ fontSize: '1.2rem' }}\r\n      >\r\n        <Badge variant='light' className='p-2'>\r\n          <Link to={'/exams/category/' + cat.name + '-' + cat.id}>\r\n            {cat.name}\r\n          </Link>\r\n        </Badge>\r\n        {child &&\r\n          (show ? (\r\n            <BsFillDashCircleFill\r\n              size={'1.5rem'}\r\n              onClick={() => {\r\n                setShow(!show)\r\n              }}\r\n            />\r\n          ) : (\r\n            <BsPlusCircleFill\r\n              size={'1.5rem'}\r\n              onClick={() => {\r\n                setShow(!show)\r\n              }}\r\n            />\r\n          ))}\r\n      </div>\r\n      <div>{show && child}</div>\r\n    </div>\r\n  )\r\n}\r\n"],"sourceRoot":""}