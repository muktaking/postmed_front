{"version":3,"sources":["../node_modules/react-bootstrap/esm/ListGroupItem.js","../node_modules/react-bootstrap/esm/ListGroup.js","container/notification/notification.js"],"names":["ListGroupItem","React","forwardRef","_ref","ref","bsPrefix","active","disabled","className","variant","action","as","eventKey","onClick","props","_objectWithoutPropertiesLoose","useBootstrapPrefix","handleClick","useCallback","event","preventDefault","stopPropagation","createElement","AbstractNavItem","_extends","makeEventKey","href","classNames","defaultProps","displayName","ListGroup","horizontalVariant","_useUncontrolled","useUncontrolled","activeKey","horizontal","_useUncontrolled$as","controlledProps","AbstractNav","Item","relativeTime","require","Notification","dispatch","useDispatch","noti","useSelector","state","notification","freshNoti","length","map","n","priority","NotiItem","i","description","moment","startDate","fromNow","styles","fontSize","color","icon","style","notiStore","JSON","parse","localStorage","getItem","now","Date","getTime","expiry","setItem","stringify","value","id","fetchFreshNotification","cursor"],"mappings":"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","file":"static/js/47.449f7f09.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useCallback } from 'react';\nimport AbstractNavItem from './AbstractNavItem';\nimport { makeEventKey } from './SelectableContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  variant: null,\n  active: false,\n  disabled: false\n};\nvar ListGroupItem = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      active = _ref.active,\n      disabled = _ref.disabled,\n      className = _ref.className,\n      variant = _ref.variant,\n      action = _ref.action,\n      as = _ref.as,\n      eventKey = _ref.eventKey,\n      onClick = _ref.onClick,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"active\", \"disabled\", \"className\", \"variant\", \"action\", \"as\", \"eventKey\", \"onClick\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'list-group-item');\n  var handleClick = useCallback(function (event) {\n    if (disabled) {\n      event.preventDefault();\n      event.stopPropagation();\n      return;\n    }\n\n    if (onClick) onClick(event);\n  }, [disabled, onClick]);\n  return React.createElement(AbstractNavItem, _extends({\n    ref: ref\n  }, props, {\n    eventKey: makeEventKey(eventKey, props.href) // eslint-disable-next-line\n    ,\n    as: as || (action ? props.href ? 'a' : 'button' : 'div'),\n    onClick: handleClick,\n    className: classNames(className, bsPrefix, active && 'active', disabled && 'disabled', variant && bsPrefix + \"-\" + variant, action && bsPrefix + \"-action\")\n  }));\n});\nListGroupItem.defaultProps = defaultProps;\nListGroupItem.displayName = 'ListGroupItem';\nexport default ListGroupItem;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport warning from 'warning';\nimport { useUncontrolled } from 'uncontrollable';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractNav from './AbstractNav';\nimport ListGroupItem from './ListGroupItem';\nvar defaultProps = {\n  variant: null,\n  horizontal: null\n};\nvar ListGroup = React.forwardRef(function (props, ref) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      className = _useUncontrolled.className,\n      bsPrefix = _useUncontrolled.bsPrefix,\n      variant = _useUncontrolled.variant,\n      horizontal = _useUncontrolled.horizontal,\n      _useUncontrolled$as = _useUncontrolled.as,\n      as = _useUncontrolled$as === void 0 ? 'div' : _useUncontrolled$as,\n      controlledProps = _objectWithoutPropertiesLoose(_useUncontrolled, [\"className\", \"bsPrefix\", \"variant\", \"horizontal\", \"as\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'list-group');\n  var horizontalVariant;\n\n  if (horizontal) {\n    horizontalVariant = horizontal === true ? 'horizontal' : \"horizontal-\" + horizontal;\n  } else {\n    horizontalVariant = null;\n  }\n\n  process.env.NODE_ENV !== \"production\" ? warning(!(horizontal && variant === 'flush'), '`variant=\"flush\"` and `horizontal` should not be used together.') : void 0;\n  return React.createElement(AbstractNav, _extends({\n    ref: ref\n  }, controlledProps, {\n    as: as,\n    className: classNames(className, bsPrefix, variant && bsPrefix + \"-\" + variant, horizontalVariant && bsPrefix + \"-\" + horizontalVariant)\n  }));\n});\nListGroup.defaultProps = defaultProps;\nListGroup.displayName = 'ListGroup';\nListGroup.Item = ListGroupItem;\nexport default ListGroup;","import * as moment from 'dayjs'\r\nimport React from 'react'\r\nimport { ListGroup, ListGroupItem } from 'react-bootstrap'\r\nimport {\r\n  FaExclamation,\r\n  FaExclamationCircle,\r\n  FaExclamationTriangle,\r\n  FaTimes\r\n} from 'react-icons/fa'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { fetchFreshNotification } from '../../store/notification'\r\nconst relativeTime = require('dayjs/plugin/relativeTime')\r\nmoment.extend(relativeTime)\r\n\r\nexport default function Notification() {\r\n  const dispatch = useDispatch()\r\n  const noti = useSelector((state) => state.notification)\r\n\r\n  return (\r\n    <div>\r\n      <h4>New Notification</h4>\r\n      <div className='pl-2'>\r\n        {noti.freshNoti.length < 1\r\n          ? 'No New Notification'\r\n          : noti.freshNoti.map((n) => {\r\n              switch (n.priority) {\r\n                case 1:\r\n                  return NotiItem(\r\n                    'danger',\r\n                    <FaExclamationTriangle />,\r\n                    n,\r\n                    dispatch\r\n                  )\r\n                case 2:\r\n                  return NotiItem(\r\n                    'warning',\r\n                    <FaExclamationCircle />,\r\n                    n,\r\n                    dispatch\r\n                  )\r\n\r\n                default:\r\n                  return NotiItem('', <FaExclamation />, n, dispatch)\r\n              }\r\n            })}\r\n      </div>\r\n      <h4 className='text-muted mt-5'>All Notification</h4>\r\n      {noti.notification.map((n, i) => (\r\n        <p className='text-muted mb-2 pl-2'>\r\n          <span>{`${i + 1}. ${n.description} `}</span>\r\n          <span>({moment(n.startDate).fromNow()})</span>\r\n        </p>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst styles = {\r\n  fontSize: '.8rem'\r\n}\r\n\r\nfunction NotiItem(color, icon, n, dispatch) {\r\n  return (\r\n    <div className={'mb-2'}>\r\n      <ListGroup horizontal>\r\n        <ListGroup.Item className={'text-' + color}>\r\n          <span>{icon}</span>\r\n        </ListGroup.Item>\r\n        <ListGroup.Item variant={color}>\r\n          <span>{n.description + ' '}</span>\r\n          <span className='text-muted' style={styles}>\r\n            ({moment(n.startDate).fromNow()})\r\n          </span>\r\n        </ListGroup.Item>\r\n\r\n        <ListGroupItem\r\n          onClick={() => {\r\n            const notiStore = JSON.parse(localStorage.getItem('noti'))\r\n            const now = new Date()\r\n            const ttl = 1000 * 60 * 60 * 24 * 30\r\n            if (notiStore) {\r\n              if (now.getTime() > notiStore.expiry) {\r\n                localStorage.setItem(\r\n                  'noti',\r\n                  JSON.stringify({\r\n                    value: [n.id],\r\n                    expiry: now.getTime() + ttl\r\n                  })\r\n                )\r\n              } else {\r\n                localStorage.setItem(\r\n                  'noti',\r\n                  JSON.stringify({\r\n                    value: [n.id, ...notiStore.value],\r\n                    expiry: notiStore.expiry\r\n                  })\r\n                )\r\n              }\r\n            } else {\r\n              localStorage.setItem(\r\n                'noti',\r\n                JSON.stringify({\r\n                  value: [n.id],\r\n                  expiry: now.getTime() + ttl\r\n                })\r\n              )\r\n            }\r\n            dispatch(fetchFreshNotification())\r\n          }}\r\n          style={{ cursor: 'pointer' }}\r\n        >\r\n          <FaTimes />\r\n        </ListGroupItem>\r\n      </ListGroup>\r\n    </div>\r\n  )\r\n}\r\n"],"sourceRoot":""}