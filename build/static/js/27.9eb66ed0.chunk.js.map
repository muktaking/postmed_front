{"version":3,"sources":["components/exams/gallary/examCard.js","components/exams/gallary/gallaryCard.js","container/exams/examLists.js","container/dashboard/component/exams.js","container/dashboard/component/users.js","container/dashboard/admin.jsx","components/dashboard/bigCards/bigCard/bigCard.jsx","components/dashboard/bigCards/mainContentCards/examsFeaturedCard.jsx","components/dashboard/bigCards/mainContentCards/reportCard.jsx","components/dashboard/bigCards/sideCards/recentActivityCard.jsx","components/dashboard/bigCards/bigCards.jsx","components/dashboard/miniCards/miniInfoBlock/miniBlock/icon.js","components/dashboard/miniCards/miniInfoBlock/miniBlock/footer.js","components/dashboard/miniCards/miniInfoBlock/miniBlock/header.js","components/dashboard/miniCards/miniInfoBlock/miniBlock/index.js","components/dashboard/miniCards/miniInfoBlock/rank.js","components/dashboard/miniCards/miniInfoBlock/result.js","components/dashboard/miniCards/miniInfoBlock/totalExam.js","components/dashboard/miniCards/miniInfoBlock/upcomingExam.js","components/dashboard/miniCards/miniCards.jsx","container/dashboard/dashboard.jsx","container/dashboard/index.js"],"names":["iconStyle","SocialShare","title","description","url","props","process","className","variant","style","fontSize","quote","hashtag","size","round","body","source","categoryTypeVariant","name","ExamCard","width","height","examId","imgSrc","categoryType","createdAt","free","examLoader","dispatch","useDispatch","token","useSelector","state","auth","intl","useIntl","useState","res","setRes","key","canActivate","rolePermitted","admin","Img","src","Body","Title","fontWeight","Subtitle","map","category","formatMessage","id","defaultMessage","moment","calendar","to","onClick","resetExamResultLoader","disabled","trigger","placement","overlay","PopoverWrapper","React","forwardRef","ref","as","Content","axios","baseURL","method","then","response","catch","error","JSON","stringify","getRndInteger","min","max","Math","floor","random","ListCard","exams","landing","authToken","show","setShow","handleClose","onHide","Header","closeButton","toUpperCase","slice","exam","length","imageUrl","filter","cat","Footer","marginTop","position","top","left","i","examType","contentCenter","zIndex","ExamLists","this","onGetAllExamsLoader","RoutesConfig","Exams","metaInfo","animation","role","Object","keys","Component","injectIntl","connect","getAllExamsLoader","Table","striped","bordered","hover","responsive","ind","type","join","format","Users","users","user","Image","avatar","roundedCircle","firstName","lastName","userName","email","roleToString","Admin","setUsers","setExams","useEffect","get","console","log","data","_","Row","Col","md","Badge","BigCard","startDate","Date","endDate","startHandleChange","date","setState","endHandleChange","reportHandler","Accordion","defaultActiveKey","Card","header","Toggle","Button","eventKey","icon","Collapse","showDatePicker","selected","onChange","children","ExamsFeaturedCard","featuredExams","dashboard","headerColor","index","ReportCard","userExamStat","labels","examTitles","datasets","label","stat","value","averageScore","totalMark","toFixed","fill","borderColor","backgroundColor","borderWidth","maxBarThickness","barPercentage","options","scales","yAxes","ticks","beginAtZero","SideCard","ListGroup","Item","color","attemptNumbers","lastAttemptTime","startOf","fromNow","BigCards","xl","lg","classes","footer","heading","cardHeader","Text","miniBlock","faIcon","footerHeading","footerValue","faFooterIcon","sm","Rank","Result","TotalExam","UpcomingExam","MiniCards","userExamInfo","totalExam","rank","upcomingExam","result","Dashboard","loading","setLoading","getUserLoader","status","dashboardStudent","payload","e","Spinner","mentor"],"mappings":"qXAoBMA,EACE,GADFA,GAEG,EAGHC,EAAc,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,MAAOC,EAAiC,EAAjCA,YAAaC,EAAoB,EAApBA,IAAQC,EAAY,6CAG7D,OAFAD,EAAME,6BAAiCF,EAGrC,uCAAKG,UAAU,QAAWF,GACxB,6BAEA,kBAAC,IAAD,CACEG,QAAQ,UACRD,UAAU,WACVE,MAAO,CAAEC,SAAU,UAHrB,YAQA,kBAAC,IAAD,CACEN,IAAKA,EACLO,MAAOR,EACPS,QAASV,EACTK,UAAU,QAEV,kBAAC,IAAD,CAAcM,KAAMb,EAAgBc,MAAOd,KAG7C,kBAAC,IAAD,CACEI,IAAKA,EACLF,MAAOC,EACPS,QAASV,EACTK,UAAU,QAEV,kBAAC,IAAD,CAAaM,KAAMb,EAAgBc,MAAOd,KAG5C,kBAAC,IAAD,CACEI,IAAKA,EACLW,KAAMZ,EACND,MAAOA,EACPK,UAAU,QAEV,kBAAC,IAAD,CAAWM,KAAMb,EAAgBc,MAAOd,KAG1C,kBAAC,IAAD,CACEI,IAAKA,EACLY,OAAQZ,EACRW,KAAMZ,EACND,MAAOA,EACPK,UAAU,QAEV,kBAAC,IAAD,CAAcM,KAAMb,EAAgBc,MAAOd,OAM7CiB,EAAsB,SAACC,GAC3B,IAAIV,EAAU,UACd,OAAQU,GACN,IAAK,WACHV,EAAU,UACV,MACF,IAAK,OACHA,EAAU,YAMd,OAAOA,GAGM,SAASW,EAAT,GAWX,IAAD,IAVDC,aAUC,MAVO,MAUP,MATDC,cASC,MATQ,MASR,EARDC,EAQC,EARDA,OACAC,EAOC,EAPDA,OACArB,EAMC,EANDA,MACAsB,EAKC,EALDA,aACArB,EAIC,EAJDA,YACAsB,EAGC,EAHDA,UACAC,EAEC,EAFDA,KACAC,EACC,EADDA,WAEMC,EAAWC,cACXC,EAAQC,aAAY,SAACC,GAAD,OAAWA,EAAMC,KAAKH,SAC1CI,EAAOC,cAHZ,EAIqBC,mBAAS,MAJ9B,mBAIMC,EAJN,KAIWC,EAJX,KAMD,OACE,oCACE,kBAAC,IAAD,CAAMC,IAAKjB,EAAQf,UAAU,YAAYE,MAAO,CAAEW,MAAOA,EAAQ,QAC7DoB,YAAYC,IAAcC,MAAOZ,IACjC,kBAAC,IAAKa,IAAN,CAAUnC,QAAQ,MAAMoC,IAAKrB,EAAQH,MAAOA,EAAOC,OAAQA,IAE7D,kBAAC,IAAKwB,KAAN,KACE,6BACE,kBAAC,IAAKC,MAAN,CAAYrC,MAAO,CAAEC,SAAU,SAAUqC,WAAY,QAClD7C,GAGH,kBAAC,IAAK8C,SAAN,KACGxB,GACCA,EAAayB,KAAI,SAACC,GAAD,OACf,kBAAC,IAAD,CACEX,IAAKW,EAAShC,KACdV,QAASS,EAAoBiC,EAAShC,MACtCX,UAAU,QAET2C,EAAShC,WAMpB,yBAAKX,UAAU,aACb,uBAAGA,UAAU,IAAIJ,EAAjB,KAEA,uBAAGI,UAAU,yBACV2B,EAAKiB,cAAc,CAAEC,GAAI,QAASC,eAAgB,aAAe,IADpE,KAEKC,IAAO7B,GAAW8B,cAIvBf,YAAYC,IAAcC,MAAOZ,IACjC,oCACE,yBAAKvB,UAAU,iCACb,kBAAC,OAAD,CACEA,UAAU,aACViD,IAAK9B,EAAO,eAAiB,WAAaJ,GAE1C,kBAAC,IAAD,CACEd,QAAQ,kBACRiD,QAAS,WACP7B,EAAS8B,iBAGX,kBAAC,IAAD,CACEN,GAAG,YACHC,eAAe,iBAIrB,kBAAC,OAAD,CAAM9C,UAAU,aAAaiD,GAAI,gBAAkBlC,GACjD,kBAAC,IAAD,CACEmC,QAAS,WACP7B,EAAS8B,gBAEXlD,QAAQ,gBAER,kBAAC,IAAD,CAAkB4C,GAAG,WAAWC,eAAe,YAIrD,kBAACpD,EAAD,CACEG,IAAK,UAAYkB,EACjBpB,MAAOA,EACPC,YAAaA,KAKlBqC,YAAYC,IAAcC,MAAOZ,IAChC,6BACE,kBAAC,IAAD,CAAQ6B,UAAU,EAAMnD,QAAQ,UAAUD,UAAU,QAApD,QAGA,kBAAC,IAAD,CACEqD,QAAQ,QACRC,UAAU,MACVC,QACE,kBAACC,EAAD,CACEX,GAAI9B,EACJe,IAAKA,EACLC,OAAQA,EACRR,MAAOA,EACPH,WAAYA,KAIhB,kBAAC,IAAD,CACE8B,QAAS,WACP7B,EAAS8B,gBAEXlD,QAAQ,UAJV,eAiBhB,IAAMuD,EAAiBC,IAAMC,YAC3B,WAAmDC,GAAnD,IAAGd,EAAH,EAAGA,GAAIf,EAAP,EAAOA,IAAKC,EAAZ,EAAYA,OAAeX,GAA3B,EAAoBG,MAApB,EAA2BH,YAAetB,EAA1C,iEACE,kBAAC,IAAD,eAAS+C,GAAG,gBAAgBc,IAAKA,GAAS7D,GACxC,kBAAC,IAAQyC,MAAT,CAAeqB,GAAG,MAAlB,mCACA,kBAAC,IAAQC,QAAT,KACE,2BAAI/B,GACJ,kBAAC,IAAD,CACE7B,QAAQ,SACRiD,QAAS,WAEPY,IAAM,CACJC,QAAShE,qCACTF,IAAK,UAAYgD,EACjBmB,OAAQ,WAEPC,MAAK,SAACC,GACL9C,IACAW,EAAO,2BAERoC,OAAM,SAACC,GACNrC,EAAO,0BAA4BsC,KAAKC,UAAUF,SAd1D,a,uKC7NR,SAASG,EAAcC,EAAKC,GAC1B,OAAOC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,IAAQA,EAGpC,SAASK,EAAT,GAA0D,IAAtClF,EAAqC,EAArCA,MAAOmF,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,QAAS3D,EAAc,EAAdA,WAClD4D,EAAYxD,aAAY,SAACC,GAAD,QAAYA,EAAMC,KAAKH,SAC/CI,EAAOC,cAFyD,EAI9CC,oBAAS,GAJqC,mBAI/DoD,EAJ+D,KAIzDC,EAJyD,KAKhEC,EAAc,kBAAMD,GAAQ,IAGlC,OACE,oCACE,kBAAC,IAAD,CAAOD,KAAMA,EAAMG,OAAQD,EAAa7E,KAAM,MAC5C,kBAAC,IAAM+E,OAAP,CAAcC,aAAW,GACvB,kBAAC,IAAM/C,MAAP,KACGZ,EAAKiB,cAAc,CAAEC,GAAI,WAAYC,eAAgB,SACtD,kBAAC,IAAD,CAAO7C,QAAQ,WAAW,IAAMN,EAAM4F,cAAgB,KACrD5D,EAAKiB,cAAc,CAAEC,GAAI,YAAaC,eAAgB,YAG3D,kBAAC,IAAMR,KAAP,KAEI,kBAAC,IAAD,CAAKtC,UAAU,aACb,kBAAC,IAAD,CAAKA,UAAU,2CACZ8E,EAAMU,MAAM,GAAG9C,KAAI,SAAC+C,GAAD,OAClB,kBAAC,IAAD,CACEzD,IAAKyD,EAAK5C,GACV9B,OAAQ0E,EAAK5C,GACb7B,OACEyE,EAAKxE,aAAayE,OAAS,EACvB3F,sCAEA0F,EAAKxE,aACHsD,EAAc,EAAGkB,EAAKxE,aAAayE,SACnCC,SACF,0BAENhG,MAAO8F,EAAK9F,MACZsB,aACEwE,EAAKxE,aAAayE,OAAS,EACvBD,EAAKxE,aACL,CAAC,CAAEN,KAAM,kBAEff,YAAa6F,EAAK7F,YAClBsB,UAAWuE,EAAKvE,UAChBC,MACG6D,GACDS,EAAKxE,aAAa2E,QAAO,SAACC,GAAD,MAAsB,SAAbA,EAAIlF,QACnC+E,OAAS,EAEdtE,WAAYA,UAOxB,kBAAC,IAAM0E,OAAP,KACE,kBAAC,IAAD,CAAQ7F,QAAQ,YAAYiD,QAASiC,GAArC,WAKJ,yBACEnF,UAAU,gCACVE,MAAO,CAAE6F,UAAW,UAEpB,wBACE/F,UAAU,8CACVE,MAAO,CAAE8F,SAAU,WAAYC,IAAK,QAASC,KAAM,SAElDvG,EAAM4F,cAAgB,IAAK,KAC1BR,GACA,kBAAC,IAAD,CAAO9E,QAAQ,QAAQD,UAAU,QAC9B,IACA8E,EAAMY,QAER,KAEL,yBAAK1F,UAAU,QACb,yBAAKA,UAAU,2CACZ8E,EAAMY,OAAS,GACd,uBAAG1F,UAAU,oBACV,IACAL,EACC,IACAgC,EAAKiB,cAAc,CACjBC,GAAI,gBACJC,eAAgB,yBACd,KAGTgC,EAAMpC,KAAI,SAAC+C,EAAMU,GAAP,OACTA,EAAI,EACF,kBAAC,IAAD,CACEnE,IAAKyD,EAAK5C,GACV9B,OAAQ0E,EAAK5C,GACb7B,OACEyE,EAAKxE,aAAayE,OAAS,EACvB3F,sCAEA0F,EAAKxE,aACHsD,EAAc,EAAGkB,EAAKxE,aAAayE,SACnCC,SACF,0BAENhG,MAAO8F,EAAK9F,MACZsB,aACEwE,EAAKxE,aAAayE,OAAS,EACvBD,EAAKxE,aACL,CAAC,CAAEN,KAAM,kBAEff,YAAa6F,EAAK7F,YAClBsB,UAAWuE,EAAKvE,UAChBC,MACG6D,GACDS,EAAKxE,aAAa2E,QAAO,SAACC,GAAD,MAAsB,SAAbA,EAAIlF,QACnC+E,OAAS,EAEdtE,WAAYA,IAGd,QAIJ2D,GACA,yBAAK/E,UAAU,sCACZ8E,EAAMY,OAAS,EACd,kBAAC,IAAD,CACExF,MAAO,CAAEY,OAAQ,OAAQD,MAAO,SAChCqC,QAAS,WA3HAgC,GAAQ,KA+HhBvD,EAAKiB,cAAc,CAClBC,GAAI,WACJC,eAAgB,YARpB,KAaA,S,yMC7IHsD,EAAW,CACtB,aACA,SACA,UACA,YACA,OACA,OACA,SAGIC,EAAgB,CAEpBL,SAAU,QACVC,IAAK,OACLC,KAAM,MACNI,OAAQ,eAGJC,E,4LAEFC,KAAK1G,MAAM2G,wB,+BAGH,IAAD,OACP,OACE,oCACE,kBAAC,IAAaC,IAAaC,MAAMC,UAChCJ,KAAK1G,MAAMgF,MAAMA,MAAMY,OAAS,GAC/B,kBAAC,IAAD,CACEmB,UAAU,OACVC,KAAK,SACL7G,QAAQ,OACRC,MAAOmG,IAWVU,OAAOC,KAAKR,KAAK1G,MAAMgF,MAAMA,OAAOpC,KACnC,SAACV,GAAD,OACE,EAAKlC,MAAMgF,MAAMA,MAAM9C,IACrB,kBAAC,IAAD,CACEA,IAAKA,EACLrC,MAAO,EAAKG,MAAM6B,KAAKiB,cAAc,CACnCC,GAAIb,EACJc,eAAgBd,IAElB8C,MAAO,EAAKhF,MAAMgF,MAAMA,MAAM9C,GAC9BZ,WAAY,EAAKtB,MAAM2G,8B,GAnCfQ,aAuDTC,sBACbC,aAPsB,SAAC1F,GACvB,MAAO,CACLqD,MAAOrD,EAAMqD,UAPU,SAACzD,GAC1B,MAAO,CACLoF,oBAAqB,kBAAMpF,EAAS+F,mBAUtCD,CAA6CZ,K,uLC9EhC,SAASI,EAAT,GAA2B,IAAV7B,EAAS,EAATA,MAC9B,OACE,6BACE,kBAACuC,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,YAAU,GACtC,+BACE,4BACE,iCACA,qCACA,oCACA,2CACA,wCACA,4CAGJ,+BACG3C,EAAMpC,KAAI,SAAC+C,EAAMiC,GAAP,OACT,wBAAI1F,IAAK0F,GACP,4BAAKA,EAAM,GACX,4BAAKjC,EAAK9F,OACV,4BAAKyG,WAASX,EAAKkC,OACnB,4BAAKlC,EAAK7F,aACV,4BAAK6F,EAAKxE,aAAayB,KAAI,SAACmD,GAAD,OAASA,EAAIlF,QAAMiH,KAAK,OACnD,4BAAK7E,IAAO0C,EAAKvE,WAAW2G,OAAO,+B,aCtBlC,SAASC,EAAT,GAA2B,IAAVC,EAAS,EAATA,MAC9B,OACE,6BACE,kBAACV,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,YAAU,GACtC,+BACE,4BACE,iCACA,sCACA,0CACA,yCACA,wCACA,qCACA,oCACA,2CAGJ,+BACGM,EAAMrF,KAAI,SAACsF,EAAMN,GAAP,OACT,wBAAI1F,IAAK0F,GACP,4BAAKA,EAAM,GACX,wBAAI1H,UAAU,IACZ,kBAACiI,EAAA,EAAD,CACEnH,OAAO,KACPD,MAAM,KACNwB,IAAK,wBAA0B2F,EAAKE,OAAS,OAC7CC,eAAa,KAGjB,4BAAKH,EAAKI,WACV,4BAAKJ,EAAKK,UACV,4BAAKL,EAAKM,UACV,4BAAKN,EAAKO,OACV,4BAAKC,YAAaR,EAAKlB,OACvB,4BAAK/D,IAAOiF,EAAK9G,WAAW2G,OAAO,sBC9BlC,SAASY,IAAS,IAAD,EACJ5G,mBAAS,IADL,mBACvBkG,EADuB,KAChBW,EADgB,OAEJ7G,mBAAS,IAFL,mBAEvBiD,EAFuB,KAEhB6D,EAFgB,KAe9B,OAXAC,qBAAU,WACR9E,IACG+E,IAAI9I,sDACJkE,MAAK,SAACC,GACL4E,QAAQC,IAAI7E,GACZwE,EAASxE,EAAS8E,KAAKjB,OACvBY,EAASM,UAAU/E,EAAS8E,KAAKlE,WAElCX,OAAM,SAACC,GAAD,OAAW0E,QAAQC,IAAI3E,QAC/B,IAGD,6BACE,kBAAC8E,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAI,GACP,yBAAKpJ,UAAU,UACb,yBAAKL,MAAM,QAAQK,UAAU,WAC3B,kBAAC,IAAD,CAASA,UAAU,OAAOM,KAAM,WAChC,kBAAC+I,EAAA,EAAD,CAAOnJ,MAAO,CAAEC,SAAU,WAAa4H,EAAMrC,SAE/C,yBAAK/F,MAAM,QAAQK,UAAU,WAC3B,kBAAC,IAAD,CAAaA,UAAU,OAAOM,KAAM,WACpC,kBAAC+I,EAAA,EAAD,CAAOnJ,MAAO,CAAEC,SAAU,WAAa2E,EAAMY,UAGjD,kBAACoC,EAAD,CAAOC,MAAOA,IACd,6BACA,kBAACpB,EAAD,CAAO7B,MAAOA,KAEhB,kBAACqE,EAAA,EAAD,CAAKC,GAAI,M,sICiDFE,E,2MA9Eb7H,MAAQ,CACN8H,UAAW,IAAIC,KACfC,QAAS,IAAID,M,EAGfE,kBAAoB,SAACC,GACnB,EAAKC,SAAS,CACZL,UAAWI,K,EAGfE,gBAAkB,SAACF,GACjB,EAAKC,SAAS,CACZH,QAASE,K,EAGbG,cAAgB,a,wEAKd,OACE,kBAACC,EAAA,EAAD,CAAWC,iBAAiB,IAAIhK,UAAU,QACxC,kBAACiK,EAAA,EAAD,CAAMjK,UAAU,gBACd,kBAACiK,EAAA,EAAK5E,OAAN,CAAarF,UAAW,sBACtB,yBAAKA,UAAU,kCACZwG,KAAK1G,MAAMoK,OACZ,kBAACH,EAAA,EAAUI,OAAX,CAAkBvG,GAAIwG,IAAQnK,QAAQ,OAAOoK,SAAS,KACpD,kBAAC,IAAD,CACEC,KAAM,OACNhK,KAAK,KACLN,UAAU,kBAMlB,kBAAC+J,EAAA,EAAUQ,SAAX,CAAoBF,SAAS,KAC3B,kBAACJ,EAAA,EAAK3H,KAAN,KACGkE,KAAK1G,MAAM0K,gBACV,yBAAKxK,UAAU,iDACb,6BACE,6CACA,kBAAC,IAAD,CACEsK,KAAM,eACNhK,KAAK,KACLN,UAAU,SAEZ,kBAAC,IAAD,CACEyK,SAAUjE,KAAK/E,MAAM8H,UACrBmB,SAAUlE,KAAKkD,qBAGnB,6BACE,0BAAM1J,UAAU,IAAhB,aACA,kBAAC,IAAD,CACEsK,KAAM,eACNhK,KAAK,KACLN,UAAU,SAEZ,kBAAC,IAAD,CACEyK,SAAUjE,KAAK/E,MAAMgI,QACrBiB,SAAUlE,KAAKqD,mBAInB,kBAACO,EAAA,EAAD,CAAQlH,QAASsD,KAAKsD,eAAtB,SAGJ,6BACCtD,KAAK1G,MAAM6K,iB,GAtEJ1D,aCDtB,IAyCe2D,EAzCW,WACxB,IAAMC,EAAgBrJ,aAAY,SAACC,GAAD,OAAWA,EAAMqJ,UAAUD,iBACvDlJ,EAAOC,cAEb,OACE,kBAAC,EAAD,CACEsI,OAAQvI,EAAKiB,cAAc,CACzBC,GAAI,QACJC,eAAgB,mBAElBiI,YAAa,UACbP,gBAAgB,GAEhB,yBAAKxK,UAAU,2CACZ6K,EAAcnI,KAAI,SAAC+C,EAAMuF,GAAP,OACjB,kBAAC,IAAD,CACEhJ,IAAKyD,EAAK5C,GACV9B,OAAQ0E,EAAK5C,GACb7B,OACEyE,EAAKxE,aAAayE,OAAS,EACvB3F,sCAEA0F,EAAKxE,cA1BAuD,EA0B2B,EA1BtBC,EA0ByBgB,EAAKxE,aAAayE,OAzB9DhB,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,IAAQA,IA0B9BmB,SACH,0BAENhG,MAAO8F,EAAK9F,MACZsB,aACEwE,EAAKxE,aAAayE,OAAS,EACvBD,EAAKxE,aACL,CAAC,CAAEN,KAAM,kBAEff,YAAa6F,EAAK7F,YAClBsB,UAAWuE,EAAKvE,YArC5B,IAAuBsD,EAAKC,Q,SC0DbwG,EAzDI,SAACnL,GAClB,IAAMoL,EAAe1J,aAAY,SAACC,GAAD,OAAWA,EAAMqJ,UAAUI,gBACtDvJ,EAAOC,cAyBPoH,EAAO,CACXmC,OAxBiBD,EAAejC,MAAMiC,EAAaE,WAAY,SAAW,GAyB1EC,SAAU,CACR,CACEC,MAAO,sBACPtC,KA3BOkC,EACTjC,MACEiC,EAAaK,MACb,SAACC,GAAD,QAAcA,EAAMC,aAAeD,EAAME,UAAa,KAAKC,QAAQ,MAErE,GAuBEC,MAAM,EACNC,YAAa,UACbC,gBAAiB,UACjBC,YAAa,EACbC,gBAAiB,GACjBC,cAAe,MAKrB,OACE,kBAAC,EAAD,CACE/B,OAAQvI,EAAKiB,cAAc,CACzBC,GAAI,QACJC,eAAgB,iBAElBiI,YAAa,OACbP,gBAAgB,GAEhB,kBAAC,IAAD,CAAKxB,KAAMA,EAAMkD,QAvCL,CACdzE,YAAY,EACZ0E,OAAQ,CACNC,MAAO,CACL,CACEC,MAAO,CACLC,aAAa,EACb9H,IAAK,EACLC,IAAK,a,kBCuBF8H,EA1CE,SAACzM,GAChB,IAAMoL,EAAe1J,aAAY,SAACC,GAAD,OAAWA,EAAMqJ,UAAUI,gBACtDvJ,EAAOC,cAEPwJ,EAAaF,EAAeA,EAAaE,WAAa,GACtDG,EAAOL,EAAeA,EAAaK,KAAO,GAEhD,OACE,kBAAC,EAAD,CACErB,OAAQvI,EAAKiB,cAAc,CACzBC,GAAI,QACJC,eAAgB,oBAElBiI,YAAa,UACbP,gBAAgB,GAEhB,kBAACgC,EAAA,EAAD,CAAW5I,GAAG,KAAK3D,QAAQ,SACxBmL,GACCA,EAAW1I,KAAI,SAAC+C,EAAMuF,GACpB,GAAIA,EAAQ,EACV,OACE,kBAACwB,EAAA,EAAUC,KAAX,CAAgBzK,IAAKgJ,EAAOpH,GAAG,KAAK5D,UAAU,IAE5C,kBAAC,IAAD,CAAQM,KAAK,QAAQoM,MAAM,YAE3B,kBAACrD,EAAA,EAAD,CAAOpJ,QAAQ,SAASwF,EAAK9F,OAJ/B,iBAI4D,IAC1D,kBAAC0J,EAAA,EAAD,CAAOpJ,QAAQ,UAAUsL,EAAKP,GAAO2B,gBAAwB,IAL/D,SAOE,uBAAG3M,UAAU,kBAAkBE,MAAO,CAAEC,SAAU,QAAlD,eACe,IACZ4C,IAAOwI,EAAKP,GAAO4B,iBACjBC,QAAQ,OACRC,kBCdRC,EAnBE,SAACjN,GAChB,OACE,oCACE,kBAACoJ,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAK6D,GAAI,EAAGC,GAAI,IACd,kBAAC,EAAD,MACA,6BACA,kBAAC,EAAD,MACA,8BAEF,kBAAC9D,EAAA,EAAD,CAAK6D,GAAI,GACP,kBAAC,EAAD,MACA,iCCbK1C,EAHF,gBAAGA,EAAH,EAAGA,KAAMhK,EAAT,EAASA,KAAM4M,EAAf,EAAeA,QAAf,OACX,kBAAC,IAAD,CAAiB5C,KAAMA,EAAMhK,KAAMA,EAAMN,UAAWkN,KCSvCC,EAVA,SAAC,GAAoC,EAAlCT,MAAmC,IAA5BU,EAA2B,EAA3BA,QAAS5B,EAAkB,EAAlBA,MAAOlB,EAAW,EAAXA,KACvC,OACE,kBAACL,EAAA,EAAKnE,OAAN,CAAa9F,UAAU,iCACrB,0BAAMA,UAAU,QAAQoN,GACxB,0BAAMpN,UAAU,QAAQwL,GACxB,kBAAC,EAAD,CAAMlB,KAAMA,EAAMhK,KAAK,KAAKN,UAAU,W,QCI7BqN,EATI,SAAC,GAAD,IAAGD,EAAH,EAAGA,QAASV,EAAZ,EAAYA,MAAOlB,EAAnB,EAAmBA,MAAO3I,EAA1B,EAA0BA,GAA1B,OACjB,kBAACoH,EAAA,EAAKqD,KAAN,CAAWtN,UAAU,6BACnB,4BAAKoN,GACL,wBAAIpN,UAAW,QAAU0M,GACtB7J,EAAK,kBAAC,OAAD,CAAMI,GAAI,SAAWJ,GAArB,IAA2B2I,EAA3B,KAA4CA,KCkCzC+B,EAlCG,SAAC,GASZ,IARLH,EAQI,EARJA,QACAV,EAOI,EAPJA,MACAlB,EAMI,EANJA,MACA3I,EAKI,EALJA,GACA2K,EAII,EAJJA,OACAC,EAGI,EAHJA,cACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEA,OACE,kBAAC1D,EAAA,EAAD,CAAMjK,UAAU,oBACd,kBAACiK,EAAA,EAAK3H,KAAN,KACE,kBAAC4G,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKyE,GAAI,GACP,kBAAC,EAAD,CAAQR,QAASA,EAASV,MAAOA,EAAOlB,MAAOA,EAAO3I,GAAIA,KAE5D,kBAACsG,EAAA,EAAD,CAAKyE,GAAI,GACP,yBAAK5N,UAAU,wDACb,kBAAC,EAAD,CAAMsK,KAAMkD,EAAQlN,KAAM,KAAM4M,QAAS,QAAUR,QAK3D,kBAAC,EAAD,CACEA,MAAOA,EACPU,QAASK,EACTjC,MAAOkC,EACPpD,KAAMqD,MCZCE,EApBF,SAAC,GAA4B,IAA1BrC,EAAyB,EAAzBA,MAAOkC,EAAkB,EAAlBA,YACf/L,EAAOC,cACb,OACE,kBAAC,EAAD,CACEwL,QAASzL,EAAKiB,cAAc,CAAEC,GAAI,QAASC,eAAgB,cAE3D0I,MAAOA,EAEPgC,OAAQ,QACRC,cAAe9L,EAAKiB,cAAc,CAChCC,GAAI,QACJC,eAAgB,kBAElB4K,YAAaA,EACbhB,MAAO,UACPiB,aAAc,WCQLG,EAvBA,SAAC,GAA4B,IAA1BtC,EAAyB,EAAzBA,MAAOkC,EAAkB,EAAlBA,YACjB/L,EAAOC,cACb,OACE,kBAAC,EAAD,CACEwL,QAASzL,EAAKiB,cAAc,CAC1BC,GAAI,QACJC,eAAgB,kBAGlB0I,MAAOA,EAEPgC,OAAQ,OACRC,cAAe9L,EAAKiB,cAAc,CAChCC,GAAI,QACJC,eAAgB,WAElB4K,YAAaA,EACbhB,MAAO,OACPiB,aAAc,mBCILI,EAtBG,SAAC,GAA4B,IAA1BvC,EAAyB,EAAzBA,MAAOkC,EAAkB,EAAlBA,YACpB/L,EAAOC,cAEb,OACE,kBAAC,EAAD,CACEwL,QAASzL,EAAKiB,cAAc,CAC1BC,GAAI,QACJC,eAAgB,gBAElB0I,MAAOA,EACPgC,OAAQ,WACRC,cAAe9L,EAAKiB,cAAc,CAChCC,GAAI,QACJC,eAAgB,eAElB4K,YAAaA,EACbhB,MAAO,OACPiB,aAAc,iBCOLK,EAxBM,SAAC,GAAgC,IAA9BxC,EAA6B,EAA7BA,MAAOkC,EAAsB,EAAtBA,YAAa7K,EAAS,EAATA,GACpClB,EAAOC,cACb,OACE,kBAAC,EAAD,CACEwL,QAASzL,EAAKiB,cAAc,CAC1BC,GAAI,QACJC,eAAgB,gBAGlB0I,MAAOA,EAEP3I,GAAIA,EACJ2K,OAAQ,OACRC,cAAe9L,EAAKiB,cAAc,CAChCC,GAAI,QACJC,eAAgB,aAElB4K,YAAaA,EACbhB,MAAO,UACPiB,aAAc,WCfdM,G,8NAGM,IAAD,EAC2CzH,KAAK1G,MAAMoO,aAArDC,EADD,EACCA,UAAWC,EADZ,EACYA,KAAMC,EADlB,EACkBA,aAAcC,EADhC,EACgCA,OACvC,OACE,yBAAKtO,UAAU,8CACb,kBAAC,EAAD,CAAWwL,MAAO2C,EAAU,GAAIT,YAAaS,EAAU,KACvD,kBAAC,EAAD,CAAM3C,MAAO4C,EAAK,GAAIV,YAAaU,EAAK,KACxC,kBAAC,EAAD,CACE5C,MAAO6C,EAAa,GACpBxL,GAAIwL,EAAa,GACjBX,YAAa3K,IAAOsL,EAAa,IAAIxG,OAAO,gBAE9C,kBAAC,EAAD,CAAQ2D,MAAO8C,EAAO,GAAIZ,YAAaY,EAAO,U,GAd9BrH,aA8BTE,gBANS,SAAC1F,GACvB,MAAO,CACLyM,aAAczM,EAAMqJ,UAAUoD,iBANP,SAAC7M,GAC1B,MAAO,KASM8F,CAA6C8G,I,+CC1BtD5H,GAAgB,CAEpBL,SAAU,QACVC,IAAK,OACLC,KAAM,MACNI,OAAQ,eA2CKiI,GAxCG,SAACzO,GAAW,IAAD,EACG+B,oBAAS,GADZ,mBACpB2M,EADoB,KACXC,EADW,KAErBpN,EAAWC,cAmBjB,OAlBAsH,qBAAU,WACRvH,EAAS8B,gBACT9B,EAASqN,gBACTD,GAAW,GACX3K,IACG+E,IAAI9I,gDACJkE,MAAK,SAACC,GACLuK,GAAW,GACa,MAApBvK,EAASyK,QACXtN,EAAS,CAAEsG,KAAMiH,KAAiBjH,KAAMkH,QAAS3K,EAAS8E,UAG7D7E,OAAM,SAAC2K,GACNL,GAAW,GACX3F,QAAQC,IAAI+F,QAEf,CAACzN,IAGF,yBAAKrB,UAAU,IACZwO,GACC,kBAACO,EAAA,EAAD,CACElI,UAAU,OACVC,KAAK,SACL7G,QAAQ,OACRC,MAAOmG,KAGX,kBAAC,KAAaK,KAAa6H,UAAU3H,UAErC,kBAAC,GAAD,MACA,wBAAI5G,UAAU,SACd,kBAAC,EAAD,QCjDS,SAASuO,KACtB,IAAMhN,EAAQC,aAAY,SAACC,GAAD,OAAWA,EAAMC,KAAKH,SAChD,OACE,6BACGU,YAAYC,IAAc8M,OAAQzN,GAAS,kBAACkH,EAAD,MAAY,kBAAC,GAAD,OAV9D","file":"static/js/27.9eb66ed0.chunk.js","sourcesContent":["import axios from 'axios'\r\nimport moment from 'moment'\r\nimport React, { useState } from 'react'\r\nimport { Badge, Button, Card, OverlayTrigger, Popover } from 'react-bootstrap'\r\nimport { FormattedMessage, useIntl } from 'react-intl'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport {\r\n  EmailIcon,\r\n  EmailShareButton,\r\n  FacebookIcon,\r\n  FacebookShareButton,\r\n  LinkedinIcon,\r\n  LinkedinShareButton,\r\n  TwitterIcon,\r\n  TwitterShareButton\r\n} from 'react-share'\r\nimport { resetExamResultLoader } from '../../../store/exams'\r\nimport { canActivate, rolePermitted } from '../../../utils/canActivate'\r\n\r\nconst iconStyle = {\r\n  size: 35,\r\n  round: true\r\n}\r\n\r\nconst SocialShare = ({ title, description, url, ...props }) => {\r\n  url = process.env.REACT_APP_BASE_URL + url\r\n\r\n  return (\r\n    <div className='mt-3' {...props}>\r\n      <hr />\r\n\r\n      <Badge\r\n        variant='success'\r\n        className='mr-1 p-1'\r\n        style={{ fontSize: '.8rem' }}\r\n      >\r\n        Share on\r\n      </Badge>\r\n\r\n      <FacebookShareButton\r\n        url={url}\r\n        quote={description}\r\n        hashtag={title}\r\n        className='mr-1'\r\n      >\r\n        <FacebookIcon size={iconStyle.size} round={iconStyle.round} />\r\n      </FacebookShareButton>\r\n\r\n      <TwitterShareButton\r\n        url={url}\r\n        title={description}\r\n        hashtag={title}\r\n        className='mr-1'\r\n      >\r\n        <TwitterIcon size={iconStyle.size} round={iconStyle.round} />\r\n      </TwitterShareButton>\r\n\r\n      <EmailShareButton\r\n        url={url}\r\n        body={description}\r\n        title={title}\r\n        className='mr-1'\r\n      >\r\n        <EmailIcon size={iconStyle.size} round={iconStyle.round} />\r\n      </EmailShareButton>\r\n\r\n      <LinkedinShareButton\r\n        url={url}\r\n        source={url}\r\n        body={description}\r\n        title={title}\r\n        className='mr-1'\r\n      >\r\n        <LinkedinIcon size={iconStyle.size} round={iconStyle.round} />\r\n      </LinkedinShareButton>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst categoryTypeVariant = (name) => {\r\n  let variant = 'primary'\r\n  switch (name) {\r\n    case 'Featured':\r\n      variant = 'warning'\r\n      break\r\n    case 'Free':\r\n      variant = 'secondary'\r\n      break\r\n\r\n    default:\r\n      break\r\n  }\r\n  return variant\r\n}\r\n\r\nexport default function ExamCard({\r\n  width = '350',\r\n  height = '180',\r\n  examId,\r\n  imgSrc,\r\n  title,\r\n  categoryType,\r\n  description,\r\n  createdAt,\r\n  free,\r\n  examLoader\r\n}) {\r\n  const dispatch = useDispatch()\r\n  const token = useSelector((state) => state.auth.token)\r\n  const intl = useIntl()\r\n  const [res, setRes] = useState(null)\r\n\r\n  return (\r\n    <>\r\n      <Card key={examId} className='mr-2 mb-2' style={{ width: width + 'px' }}>\r\n        {!canActivate(rolePermitted.admin, token) && (\r\n          <Card.Img variant='top' src={imgSrc} width={width} height={height} />\r\n        )}\r\n        <Card.Body>\r\n          <div>\r\n            <Card.Title style={{ fontSize: '1.4rem', fontWeight: '900' }}>\r\n              {title}\r\n            </Card.Title>\r\n\r\n            <Card.Subtitle>\r\n              {categoryType &&\r\n                categoryType.map((category) => (\r\n                  <Badge\r\n                    key={category.name}\r\n                    variant={categoryTypeVariant(category.name)}\r\n                    className='mr-1'\r\n                  >\r\n                    {category.name}\r\n                  </Badge>\r\n                ))}\r\n            </Card.Subtitle>\r\n          </div>\r\n\r\n          <div className='mt-1 pt-2'>\r\n            <p className=''>{description} </p>\r\n\r\n            <p className='text-muted text-right'>\r\n              {intl.formatMessage({ id: 'db.so', defaultMessage: 'Start on' })}{' '}\r\n              : {moment(createdAt).calendar()}\r\n            </p>\r\n          </div>\r\n\r\n          {!canActivate(rolePermitted.admin, token) && (\r\n            <>\r\n              <div className='d-flex justify-content-around'>\r\n                <Link\r\n                  className='text-white'\r\n                  to={(free ? '/exams/free/' : '/exams/') + examId}\r\n                >\r\n                  <Button\r\n                    variant='outline-primary'\r\n                    onClick={() => {\r\n                      dispatch(resetExamResultLoader())\r\n                    }}\r\n                  >\r\n                    <FormattedMessage\r\n                      id='btn.start'\r\n                      defaultMessage='Start Exam'\r\n                    />\r\n                  </Button>\r\n                </Link>\r\n                <Link className='text-white' to={'/result/rank/' + examId}>\r\n                  <Button\r\n                    onClick={() => {\r\n                      dispatch(resetExamResultLoader())\r\n                    }}\r\n                    variant='outline-dark'\r\n                  >\r\n                    <FormattedMessage id='btn.rank' defaultMessage='Rank' />\r\n                  </Button>\r\n                </Link>\r\n              </div>\r\n              <SocialShare\r\n                url={'/exams/' + examId}\r\n                title={title}\r\n                description={description}\r\n              />\r\n            </>\r\n          )}\r\n\r\n          {canActivate(rolePermitted.admin, token) && (\r\n            <div>\r\n              <Button disabled={true} variant='primary' className='mr-3'>\r\n                Edit\r\n              </Button>\r\n              <OverlayTrigger\r\n                trigger='click'\r\n                placement='top'\r\n                overlay={\r\n                  <PopoverWrapper\r\n                    id={examId}\r\n                    res={res}\r\n                    setRes={setRes}\r\n                    token={token}\r\n                    examLoader={examLoader}\r\n                  />\r\n                }\r\n              >\r\n                <Button\r\n                  onClick={() => {\r\n                    dispatch(resetExamResultLoader())\r\n                  }}\r\n                  variant='danger'\r\n                >\r\n                  Delete\r\n                </Button>\r\n              </OverlayTrigger>\r\n            </div>\r\n          )}\r\n        </Card.Body>\r\n      </Card>\r\n    </>\r\n  )\r\n}\r\n\r\nconst PopoverWrapper = React.forwardRef(\r\n  ({ id, res, setRes, token, examLoader, ...props }, ref) => (\r\n    <Popover id='popover-basic' ref={ref} {...props}>\r\n      <Popover.Title as='h3'>Are You Sure To delete The Exam</Popover.Title>\r\n      <Popover.Content>\r\n        <p>{res}</p>\r\n        <Button\r\n          variant='danger'\r\n          onClick={() => {\r\n            //setAuthorizationToken(token);\r\n            axios({\r\n              baseURL: process.env.REACT_APP_SITE_URL,\r\n              url: '/exams/' + id,\r\n              method: 'delete'\r\n            })\r\n              .then((response) => {\r\n                examLoader()\r\n                setRes('Successfully Deleted')\r\n              })\r\n              .catch((error) => {\r\n                setRes('Can not delete the exam' + JSON.stringify(error))\r\n              })\r\n          }}\r\n        >\r\n          Yes\r\n        </Button>\r\n      </Popover.Content>\r\n    </Popover>\r\n  )\r\n)\r\n","import React, { useState } from 'react'\r\nimport { Badge, Button, Col, Modal, Row } from 'react-bootstrap'\r\nimport { useIntl } from 'react-intl'\r\nimport { useSelector } from 'react-redux'\r\nimport ExamCard from './examCard'\r\n\r\nfunction getRndInteger(min, max) {\r\n  return Math.floor(Math.random() * (max - min)) + min\r\n}\r\n\r\nexport default function ListCard({ title, exams, landing, examLoader }) {\r\n  const authToken = useSelector((state) => (state.auth.token ? true : false))\r\n  const intl = useIntl()\r\n\r\n  const [show, setShow] = useState(false)\r\n  const handleClose = () => setShow(false)\r\n  const handleShow = () => setShow(true)\r\n\r\n  return (\r\n    <>\r\n      <Modal show={show} onHide={handleClose} size={'xl'}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n            {intl.formatMessage({ id: 'btn.more', defaultMessage: 'More' })}\r\n            <Badge variant='warning'>{' ' + title.toUpperCase() + ' '}</Badge>\r\n            {intl.formatMessage({ id: 'btn.exams', defaultMessage: 'Exams' })}\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {\r\n            <Row className='mt-3 ml-3'>\r\n              <Col className='d-flex justify-content-center flex-wrap'>\r\n                {exams.slice(2).map((exam) => (\r\n                  <ExamCard\r\n                    key={exam.id}\r\n                    examId={exam.id}\r\n                    imgSrc={\r\n                      exam.categoryType.length > 0\r\n                        ? process.env.REACT_APP_SITE_URL +\r\n                          '/' +\r\n                          exam.categoryType[\r\n                            getRndInteger(0, exam.categoryType.length)\r\n                          ].imageUrl\r\n                        : '/assets/image/uncat.jpg'\r\n                    }\r\n                    title={exam.title}\r\n                    categoryType={\r\n                      exam.categoryType.length > 0\r\n                        ? exam.categoryType\r\n                        : [{ name: 'Uncategorized' }]\r\n                    }\r\n                    description={exam.description}\r\n                    createdAt={exam.createdAt}\r\n                    free={\r\n                      !authToken &&\r\n                      exam.categoryType.filter((cat) => cat.name === 'Free')\r\n                        .length > 0\r\n                    }\r\n                    examLoader={examLoader}\r\n                  />\r\n                ))}\r\n              </Col>\r\n            </Row>\r\n          }\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant='secondary' onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n      <div\r\n        className='mb-2 border position-relative'\r\n        style={{ marginTop: '100px' }}\r\n      >\r\n        <h3\r\n          className='text-center bg-warning text-light px-2 py-1'\r\n          style={{ position: 'absolute', top: '-30px', left: '50px' }}\r\n        >\r\n          {title.toUpperCase() + ' '}{' '}\r\n          {!landing && (\r\n            <Badge variant='light' className='ml-2'>\r\n              {' '}\r\n              {exams.length}\r\n            </Badge>\r\n          )}{' '}\r\n        </h3>\r\n        <div className='mt-4'>\r\n          <div className='d-flex justify-content-around flex-wrap'>\r\n            {exams.length < 1 && (\r\n              <p className='lead text-danger'>\r\n                {' '}\r\n                {title +\r\n                  ' ' +\r\n                  intl.formatMessage({\r\n                    id: 'noExamCreated',\r\n                    defaultMessage: 'Exams is not created'\r\n                  })}{' '}\r\n              </p>\r\n            )}\r\n            {exams.map((exam, i) =>\r\n              i < 3 ? (\r\n                <ExamCard\r\n                  key={exam.id}\r\n                  examId={exam.id}\r\n                  imgSrc={\r\n                    exam.categoryType.length > 0\r\n                      ? process.env.REACT_APP_SITE_URL +\r\n                        '/' +\r\n                        exam.categoryType[\r\n                          getRndInteger(0, exam.categoryType.length)\r\n                        ].imageUrl\r\n                      : '/assets/image/uncat.jpg'\r\n                  }\r\n                  title={exam.title}\r\n                  categoryType={\r\n                    exam.categoryType.length > 0\r\n                      ? exam.categoryType\r\n                      : [{ name: 'Uncategorized' }]\r\n                  }\r\n                  description={exam.description}\r\n                  createdAt={exam.createdAt}\r\n                  free={\r\n                    !authToken &&\r\n                    exam.categoryType.filter((cat) => cat.name === 'Free')\r\n                      .length > 0\r\n                  }\r\n                  examLoader={examLoader}\r\n                />\r\n              ) : (\r\n                ''\r\n              )\r\n            )}\r\n          </div>\r\n          {!landing && (\r\n            <div className='my-2 d-flex justify-content-center'>\r\n              {exams.length > 2 ? (\r\n                <Button\r\n                  style={{ height: '50px', width: '150px' }}\r\n                  onClick={() => {\r\n                    handleShow()\r\n                  }}\r\n                >\r\n                  {intl.formatMessage({\r\n                    id: 'btn.more',\r\n                    defaultMessage: 'More...'\r\n                  })}\r\n                  .\r\n                </Button>\r\n              ) : (\r\n                ''\r\n              )}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\nimport { injectIntl } from 'react-intl'\r\nimport { connect } from 'react-redux'\r\nimport GallaryCard from '../../components/exams/gallary/gallaryCard'\r\nimport MetaInfo from '../../components/seo/metainfo'\r\nimport { RoutesConfig } from '../../config/routes.config'\r\nimport { getAllExamsLoader } from '../../store/exams'\r\n\r\nexport const examType = [\r\n  'Assignment',\r\n  'Weekly',\r\n  'Monthly',\r\n  'Assesment',\r\n  'Term',\r\n  'Test',\r\n  'Final'\r\n]\r\n\r\nconst contentCenter = {\r\n  //styling to display server response in middle of screen\r\n  position: 'fixed',\r\n  top: '45vh',\r\n  left: '50%',\r\n  zIndex: '10000000000'\r\n}\r\n\r\nclass ExamLists extends Component {\r\n  componentDidMount() {\r\n    this.props.onGetAllExamsLoader()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <MetaInfo {...RoutesConfig.Exams.metaInfo} />\r\n        {this.props.exams.exams.length < 1 && (\r\n          <Spinner\r\n            animation='grow'\r\n            role='status'\r\n            variant='dark'\r\n            style={contentCenter}\r\n          ></Spinner>\r\n        )}\r\n        {/* {this.props.exams.exams.length < 1 && (\r\n          <Spinner\r\n            animation=\"border\"\r\n            role=\"status\"\r\n            variant=\"dark\"\r\n            className=\"content-center\"\r\n          ></Spinner>\r\n        )} */}\r\n        {Object.keys(this.props.exams.exams).map(\r\n          (key) =>\r\n            this.props.exams.exams[key] && (\r\n              <GallaryCard\r\n                key={key}\r\n                title={this.props.intl.formatMessage({\r\n                  id: key,\r\n                  defaultMessage: key\r\n                })}\r\n                exams={this.props.exams.exams[key]}\r\n                examLoader={this.props.onGetAllExamsLoader}\r\n              />\r\n            )\r\n        )}\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onGetAllExamsLoader: () => dispatch(getAllExamsLoader())\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    exams: state.exams\r\n  }\r\n}\r\n\r\nexport default injectIntl(\r\n  connect(mapStateToProps, mapDispatchToProps)(ExamLists)\r\n)\r\n","import moment from 'moment'\r\nimport React from 'react'\r\nimport { Table } from 'react-bootstrap'\r\nimport { examType } from '../../exams/examLists'\r\n\r\nexport default function Exams({ exams }) {\r\n  return (\r\n    <div>\r\n      <Table striped bordered hover responsive>\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Title</th>\r\n            <th>Type</th>\r\n            <th>Description</th>\r\n            <th>Category</th>\r\n            <th>Start From</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {exams.map((exam, ind) => (\r\n            <tr key={ind}>\r\n              <td>{ind + 1}</td>\r\n              <td>{exam.title}</td>\r\n              <td>{examType[exam.type]}</td>\r\n              <td>{exam.description}</td>\r\n              <td>{exam.categoryType.map((cat) => cat.name).join(', ')}</td>\r\n              <td>{moment(exam.createdAt).format('YYYY-MM-DD, hh:mm a')}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n    </div>\r\n  )\r\n}\r\n","import moment from 'moment'\r\nimport React from 'react'\r\nimport { Image, Table } from 'react-bootstrap'\r\nimport { roleToString } from '../../../utils/canActivate'\r\n\r\nexport default function Users({ users }) {\r\n  return (\r\n    <div>\r\n      <Table striped bordered hover responsive>\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Avatar</th>\r\n            <th>First Name</th>\r\n            <th>Last Name</th>\r\n            <th>Username</th>\r\n            <th>Email</th>\r\n            <th>Role</th>\r\n            <th>User From</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {users.map((user, ind) => (\r\n            <tr key={ind}>\r\n              <td>{ind + 1}</td>\r\n              <td className=''>\r\n                <Image\r\n                  height='35'\r\n                  width='35'\r\n                  src={'/assets/image/avatar/' + user.avatar + '.png'}\r\n                  roundedCircle\r\n                />\r\n              </td>\r\n              <td>{user.firstName}</td>\r\n              <td>{user.lastName}</td>\r\n              <td>{user.userName}</td>\r\n              <td>{user.email}</td>\r\n              <td>{roleToString(user.role)}</td>\r\n              <td>{moment(user.createdAt).format('YYYY-MM-DD')}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n    </div>\r\n  )\r\n}\r\n","import axios from 'axios'\r\nimport * as _ from 'lodash'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Badge, Col, Row } from 'react-bootstrap'\r\nimport { FaPaperclip, FaUsers } from 'react-icons/fa'\r\nimport Exams from './component/exams'\r\nimport Users from './component/users'\r\n\r\nexport default function Admin() {\r\n  const [users, setUsers] = useState([])\r\n  const [exams, setExams] = useState([])\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(process.env.REACT_APP_SITE_URL + '/dashboard/admin')\r\n      .then((response) => {\r\n        console.log(response)\r\n        setUsers(response.data.users)\r\n        setExams(_.flatMap(response.data.exams))\r\n      })\r\n      .catch((error) => console.log(error))\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      <Row>\r\n        <Col md={8}>\r\n          <div className='d-flex'>\r\n            <div title='Users' className='p-2 m-2'>\r\n              <FaUsers className='mt-3' size={'2.4rem'} />\r\n              <Badge style={{ fontSize: '1.1rem' }}>{users.length}</Badge>\r\n            </div>\r\n            <div title='Exams' className='p-2 m-2'>\r\n              <FaPaperclip className='mt-3' size={'2.4rem'} />\r\n              <Badge style={{ fontSize: '1.1rem' }}>{exams.length}</Badge>\r\n            </div>\r\n          </div>\r\n          <Users users={users} />\r\n          <hr />\r\n          <Exams exams={exams} />\r\n        </Col>\r\n        <Col md={4}></Col>\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport React, { Component } from 'react'\r\nimport Accordion from 'react-bootstrap/Accordion'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Card from 'react-bootstrap/Card'\r\nimport DatePicker from 'react-datepicker'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\n\r\n// CSS Modules, react-datepicker-cssmodules.css\r\n// import 'react-datepicker/dist/react-datepicker-cssmodules.css';\r\n\r\nclass BigCard extends Component {\r\n  state = {\r\n    startDate: new Date(),\r\n    endDate: new Date()\r\n  }\r\n\r\n  startHandleChange = (date) => {\r\n    this.setState({\r\n      startDate: date\r\n    })\r\n  }\r\n  endHandleChange = (date) => {\r\n    this.setState({\r\n      endDate: date\r\n    })\r\n  }\r\n  reportHandler = () => {\r\n    //console.log(this.state.startDate, this.state.endDate);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Accordion defaultActiveKey='0' className='mb-3'>\r\n        <Card className='border-top-0'>\r\n          <Card.Header className={'bg-dark text-light'}>\r\n            <div className='d-flex justify-content-between'>\r\n              {this.props.header}\r\n              <Accordion.Toggle as={Button} variant='link' eventKey='0'>\r\n                <FontAwesomeIcon\r\n                  icon={'bars'}\r\n                  size='lg'\r\n                  className='text-light'\r\n                />\r\n              </Accordion.Toggle>\r\n              {/* <span className=\"\">More..</span> */}\r\n            </div>\r\n          </Card.Header>\r\n          <Accordion.Collapse eventKey='0'>\r\n            <Card.Body>\r\n              {this.props.showDatePicker && (\r\n                <div className='d-flex flex-wrap justify-content-between mb-3'>\r\n                  <div>\r\n                    <span>Start Date:</span>\r\n                    <FontAwesomeIcon\r\n                      icon={'calendar-alt'}\r\n                      size='2x'\r\n                      className='mx-2'\r\n                    />\r\n                    <DatePicker\r\n                      selected={this.state.startDate}\r\n                      onChange={this.startHandleChange}\r\n                    />\r\n                  </div>\r\n                  <div>\r\n                    <span className=''>End Date:</span>\r\n                    <FontAwesomeIcon\r\n                      icon={'calendar-alt'}\r\n                      size='2x'\r\n                      className='mx-2'\r\n                    />\r\n                    <DatePicker\r\n                      selected={this.state.endDate}\r\n                      onChange={this.endHandleChange}\r\n                    />\r\n                  </div>\r\n\r\n                  <Button onClick={this.reportHandler}>Show</Button>\r\n                </div>\r\n              )}\r\n              <hr />\r\n              {this.props.children}\r\n            </Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n      </Accordion>\r\n    )\r\n  }\r\n}\r\n\r\nexport default BigCard\r\n","import React from 'react'\r\nimport { useIntl } from 'react-intl'\r\nimport { useSelector } from 'react-redux'\r\nimport ExamCard from '../../../exams/gallary/examCard'\r\nimport BigCard from '../bigCard/bigCard'\r\n\r\nfunction getRndInteger(min, max) {\r\n  return Math.floor(Math.random() * (max - min)) + min\r\n}\r\n\r\nconst ExamsFeaturedCard = () => {\r\n  const featuredExams = useSelector((state) => state.dashboard.featuredExams)\r\n  const intl = useIntl()\r\n\r\n  return (\r\n    <BigCard\r\n      header={intl.formatMessage({\r\n        id: 'db.fe',\r\n        defaultMessage: 'Featured Exams'\r\n      })}\r\n      headerColor={'primary'}\r\n      showDatePicker={false}\r\n    >\r\n      <div className='d-flex justify-content-around flex-wrap'>\r\n        {featuredExams.map((exam, index) => (\r\n          <ExamCard\r\n            key={exam.id}\r\n            examId={exam.id}\r\n            imgSrc={\r\n              exam.categoryType.length > 0\r\n                ? process.env.REACT_APP_SITE_URL +\r\n                  '/' +\r\n                  exam.categoryType[getRndInteger(0, exam.categoryType.length)]\r\n                    .imageUrl\r\n                : '/assets/image/uncat.jpg'\r\n            }\r\n            title={exam.title}\r\n            categoryType={\r\n              exam.categoryType.length > 0\r\n                ? exam.categoryType\r\n                : [{ name: 'Uncategorized' }]\r\n            }\r\n            description={exam.description}\r\n            createdAt={exam.createdAt}\r\n          />\r\n        ))}\r\n      </div>\r\n    </BigCard>\r\n  )\r\n}\r\n\r\nexport default ExamsFeaturedCard\r\n","import * as _ from 'lodash'\r\nimport React from 'react'\r\nimport { Bar } from 'react-chartjs-2'\r\nimport { useIntl } from 'react-intl'\r\nimport { useSelector } from 'react-redux'\r\nimport BigCard from '../bigCard/bigCard'\r\n\r\nconst ReportCard = (props) => {\r\n  const userExamStat = useSelector((state) => state.dashboard.userExamStat)\r\n  const intl = useIntl()\r\n\r\n  const examTitles = userExamStat ? _.map(userExamStat.examTitles, 'title') : []\r\n  const mark = userExamStat\r\n    ? _.map(\r\n        userExamStat.stat,\r\n        (value) => +((value.averageScore / value.totalMark) * 100).toFixed(2)\r\n      )\r\n    : []\r\n  //const stat = userExamStat ? _.map(userExamStat.stat, \"averageScore\") : [];\r\n\r\n  const options = {\r\n    responsive: true, // Instruct chart js to respond nicely.\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            beginAtZero: true,\r\n            min: 0,\r\n            max: 100\r\n          }\r\n        }\r\n      ]\r\n    }\r\n  }\r\n  const data = {\r\n    labels: examTitles,\r\n    datasets: [\r\n      {\r\n        label: 'Marks in Percentage', // Name the series\r\n        data: mark, // Specify the data values array\r\n        fill: false,\r\n        borderColor: '#2196f3', // Add custom color border (Line)\r\n        backgroundColor: '#2196f3', // Add custom color background (Points and Fill)\r\n        borderWidth: 1, // Specify bar border width\r\n        maxBarThickness: 35,\r\n        barPercentage: 0.5\r\n      }\r\n    ]\r\n  }\r\n\r\n  return (\r\n    <BigCard\r\n      header={intl.formatMessage({\r\n        id: 'db.ur',\r\n        defaultMessage: 'User Reports'\r\n      })}\r\n      headerColor={'info'}\r\n      showDatePicker={false}\r\n    >\r\n      <Bar data={data} options={options} />\r\n    </BigCard>\r\n  )\r\n}\r\n\r\nexport default ReportCard\r\n","import moment from 'moment'\r\nimport React from 'react'\r\nimport { Badge } from 'react-bootstrap'\r\nimport ListGroup from 'react-bootstrap/ListGroup'\r\nimport { MdInfo } from 'react-icons/md'\r\nimport { useIntl } from 'react-intl'\r\nimport { useSelector } from 'react-redux'\r\nimport BigCard from '../bigCard/bigCard'\r\n\r\nconst SideCard = (props) => {\r\n  const userExamStat = useSelector((state) => state.dashboard.userExamStat)\r\n  const intl = useIntl()\r\n\r\n  const examTitles = userExamStat ? userExamStat.examTitles : []\r\n  const stat = userExamStat ? userExamStat.stat : []\r\n\r\n  return (\r\n    <BigCard\r\n      header={intl.formatMessage({\r\n        id: 'db.ra',\r\n        defaultMessage: 'Recent Activity'\r\n      })}\r\n      headerColor={'warning'}\r\n      showDatePicker={false}\r\n    >\r\n      <ListGroup as='ul' variant='flush'>\r\n        {examTitles &&\r\n          examTitles.map((exam, index) => {\r\n            if (index < 6)\r\n              return (\r\n                <ListGroup.Item key={index} as='li' className=''>\r\n                  {/* <Badge variant=\"info\" className=\"rounded p-1\"> */}\r\n                  <MdInfo size='1.5em' color='magenta' />\r\n                  {/* </Badge> */}\r\n                  <Badge variant='light'>{exam.title}</Badge>Exam attempted{' '}\r\n                  <Badge variant='danger'>{stat[index].attemptNumbers}</Badge>{' '}\r\n                  times.\r\n                  <p className='text-muted pl-3' style={{ fontSize: '80%' }}>\r\n                    last attempt{' '}\r\n                    {moment(stat[index].lastAttemptTime)\r\n                      .startOf('day')\r\n                      .fromNow()}\r\n                  </p>\r\n                </ListGroup.Item>\r\n              )\r\n          })}\r\n      </ListGroup>\r\n    </BigCard>\r\n  )\r\n}\r\n\r\nexport default SideCard\r\n","import React from 'react'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Row from 'react-bootstrap/Row'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport ExamFeaturedCard from './mainContentCards/examsFeaturedCard'\r\nimport ReportCard from './mainContentCards/reportCard'\r\nimport RecentActivityCard from './sideCards/recentActivityCard'\r\n\r\nconst BigCards = (props) => {\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col xl={8} lg={12}>\r\n          <ReportCard />\r\n          <hr />\r\n          <ExamFeaturedCard />\r\n          <hr />\r\n        </Col>\r\n        <Col xl={4}>\r\n          <RecentActivityCard />\r\n          <hr />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default BigCards\r\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport React from 'react'\r\n//import { icon } from \"@fortawesome/fontawesome-svg-core\";\r\n\r\nconst icon = ({ icon, size, classes }) => (\r\n  <FontAwesomeIcon icon={icon} size={size} className={classes} />\r\n)\r\nexport default icon\r\n","import React from 'react'\r\nimport Card from 'react-bootstrap/Card'\r\nimport Icon from './icon'\r\n\r\nconst footer = ({ color, heading, value, icon }) => {\r\n  return (\r\n    <Card.Footer className='bg-dark text-light text-right'>\r\n      <span className='mr-2'>{heading}</span>\r\n      <span className='mr-5'>{value}</span>\r\n      <Icon icon={icon} size='md' className='mr-2' />\r\n    </Card.Footer>\r\n  )\r\n}\r\n\r\nexport default footer\r\n","import React from 'react'\r\nimport Card from 'react-bootstrap/Card'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst cardHeader = ({ heading, color, value, id }) => (\r\n  <Card.Text className='text-right text-secondary'>\r\n    <h5>{heading}</h5>\r\n    <h3 className={'text-' + color}>\r\n      {id ? <Link to={'exams/' + id}> {value} </Link> : value}\r\n    </h3>\r\n  </Card.Text>\r\n)\r\n\r\nexport default cardHeader\r\n","import React from 'react'\r\nimport Card from 'react-bootstrap/Card'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Footer from './footer'\r\nimport Header from './header'\r\nimport Icon from './icon'\r\n\r\nconst miniBlock = ({\r\n  heading,\r\n  color,\r\n  value,\r\n  id,\r\n  faIcon,\r\n  footerHeading,\r\n  footerValue,\r\n  faFooterIcon\r\n}) => {\r\n  return (\r\n    <Card className='card-common mt-2'>\r\n      <Card.Body>\r\n        <Row>\r\n          <Col sm={8}>\r\n            <Header heading={heading} color={color} value={value} id={id} />\r\n          </Col>\r\n          <Col sm={4}>\r\n            <div className='d-flex  align-items-center justify-content-end h-100'>\r\n              <Icon icon={faIcon} size={'3x'} classes={'text-' + color} />\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Card.Body>\r\n      <Footer\r\n        color={color}\r\n        heading={footerHeading}\r\n        value={footerValue}\r\n        icon={faFooterIcon}\r\n      />\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default miniBlock\r\n","import React from 'react'\r\nimport { useIntl } from 'react-intl'\r\nimport MiniBlock from './miniBlock'\r\n\r\nconst Rank = ({ value, footerValue }) => {\r\n  const intl = useIntl()\r\n  return (\r\n    <MiniBlock\r\n      heading={intl.formatMessage({ id: 'db.er', defaultMessage: 'Your Rank' })}\r\n      //\r\n      value={value}\r\n      //\r\n      faIcon={'medal'}\r\n      footerHeading={intl.formatMessage({\r\n        id: 'db.ts',\r\n        defaultMessage: 'Total Student'\r\n      })}\r\n      footerValue={footerValue}\r\n      color={'warning'}\r\n      faFooterIcon={'users'}\r\n    />\r\n  )\r\n}\r\n\r\nexport default Rank\r\n","import React from 'react'\r\nimport { useIntl } from 'react-intl'\r\nimport MiniBlock from './miniBlock'\r\n\r\nconst Result = ({ value, footerValue }) => {\r\n  const intl = useIntl()\r\n  return (\r\n    <MiniBlock\r\n      heading={intl.formatMessage({\r\n        id: 'db.os',\r\n        defaultMessage: 'Overall Score'\r\n      })}\r\n      //\r\n      value={value}\r\n      //\r\n      faIcon={'poll'}\r\n      footerHeading={intl.formatMessage({\r\n        id: 'db.of',\r\n        defaultMessage: 'Out of'\r\n      })}\r\n      footerValue={footerValue}\r\n      color={'dark'}\r\n      faFooterIcon={'balance-scale'}\r\n    />\r\n  )\r\n}\r\n\r\nexport default Result\r\n","import React from 'react'\r\nimport { useIntl } from 'react-intl'\r\nimport MiniBlock from './miniBlock'\r\n\r\nconst TotalExam = ({ value, footerValue }) => {\r\n  const intl = useIntl()\r\n\r\n  return (\r\n    <MiniBlock\r\n      heading={intl.formatMessage({\r\n        id: 'db.te',\r\n        defaultMessage: 'Total Exams'\r\n      })}\r\n      value={value}\r\n      faIcon={'file-alt'}\r\n      footerHeading={intl.formatMessage({\r\n        id: 'db.et',\r\n        defaultMessage: 'Exam Taken'\r\n      })}\r\n      footerValue={footerValue}\r\n      color={'info'}\r\n      faFooterIcon={'file-import'}\r\n    />\r\n  )\r\n}\r\n\r\nexport default TotalExam\r\n","import React from 'react'\r\nimport { useIntl } from 'react-intl'\r\nimport MiniBlock from './miniBlock'\r\n\r\nconst UpcomingExam = ({ value, footerValue, id }) => {\r\n  const intl = useIntl()\r\n  return (\r\n    <MiniBlock\r\n      heading={intl.formatMessage({\r\n        id: 'db.le',\r\n        defaultMessage: 'Latest Exam'\r\n      })}\r\n      //\r\n      value={value}\r\n      //\r\n      id={id}\r\n      faIcon={'file'}\r\n      footerHeading={intl.formatMessage({\r\n        id: 'db.so',\r\n        defaultMessage: 'Start On'\r\n      })}\r\n      footerValue={footerValue}\r\n      color={'success'}\r\n      faFooterIcon={'clock'}\r\n    />\r\n  )\r\n}\r\n\r\nexport default UpcomingExam\r\n","import moment from 'moment'\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Rank from './miniInfoBlock/rank'\r\nimport Result from './miniInfoBlock/result'\r\nimport TotalExam from './miniInfoBlock/totalExam'\r\nimport UpcomingExam from './miniInfoBlock/upcomingExam'\r\n\r\nclass MiniCards extends Component {\r\n  componentDidMount() {}\r\n\r\n  render() {\r\n    const { totalExam, rank, upcomingExam, result } = this.props.userExamInfo\r\n    return (\r\n      <div className='d-md-flex justify-content-around flex-wrap'>\r\n        <TotalExam value={totalExam[0]} footerValue={totalExam[1]} />\r\n        <Rank value={rank[0]} footerValue={rank[1]} />\r\n        <UpcomingExam\r\n          value={upcomingExam[0]}\r\n          id={upcomingExam[2]}\r\n          footerValue={moment(upcomingExam[1]).format('DD-MM-YYYY')}\r\n        />\r\n        <Result value={result[0]} footerValue={result[1]} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {}\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userExamInfo: state.dashboard.userExamInfo\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MiniCards)\r\n","import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\nimport { useDispatch } from 'react-redux'\r\nimport BigCards from '../../components/dashboard/bigCards/bigCards'\r\nimport MiniCards from '../../components/dashboard/miniCards/miniCards'\r\nimport MetaInfo from '../../components/seo/metainfo'\r\nimport { RoutesConfig } from '../../config/routes.config'\r\nimport { dashboardStudent } from '../../store/dashboard'\r\nimport { resetExamResultLoader } from '../../store/exams'\r\nimport { getUserLoader } from '../../store/user'\r\n\r\nconst contentCenter = {\r\n  //styling to display server response in middle of screen\r\n  position: 'fixed',\r\n  top: '45vh',\r\n  left: '50%',\r\n  zIndex: '10000000000'\r\n}\r\n\r\nconst Dashboard = (props) => {\r\n  const [loading, setLoading] = useState(false)\r\n  const dispatch = useDispatch()\r\n  useEffect(() => {\r\n    dispatch(resetExamResultLoader())\r\n    dispatch(getUserLoader())\r\n    setLoading(true)\r\n    axios\r\n      .get(process.env.REACT_APP_SITE_URL + '/dashboard')\r\n      .then((response) => {\r\n        setLoading(false)\r\n        if (response.status === 200) {\r\n          dispatch({ type: dashboardStudent.type, payload: response.data })\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        setLoading(false)\r\n        console.log(e)\r\n      })\r\n  }, [dispatch])\r\n\r\n  return (\r\n    <div className=''>\r\n      {loading && (\r\n        <Spinner\r\n          animation='grow'\r\n          role='status'\r\n          variant='dark'\r\n          style={contentCenter}\r\n        ></Spinner>\r\n      )}\r\n      <MetaInfo {...RoutesConfig.Dashboard.metaInfo} />\r\n\r\n      <MiniCards />\r\n      <hr className='my-3' />\r\n      <BigCards />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dashboard\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { canActivate, rolePermitted } from '../../utils/canActivate'\r\nimport Admin from './admin'\r\nimport General from './dashboard'\r\n\r\nexport default function Dashboard() {\r\n  const token = useSelector((state) => state.auth.token)\r\n  return (\r\n    <div>\r\n      {canActivate(rolePermitted.mentor, token) ? <Admin /> : <General />}\r\n    </div>\r\n  )\r\n}\r\n"],"sourceRoot":""}