{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","components/shared/spinner/spinner.js","container/exams/component/examByCat.js","container/exams/component/examFilter.js","container/exams/examListsByCourseShower.js"],"names":["_objectWithoutProperties","source","excluded","key","i","target","Object","getOwnPropertySymbols","sourceSymbolKeys","length","indexOf","prototype","propertyIsEnumerable","call","contentCenter","position","top","left","zIndex","SpinnerCustom","animation","role","variant","style","ExamByCat","exam","courseId","dispatch","useDispatch","authToken","useSelector","state","auth","token","sm","className","title","moment","startDate","format","size","description","endDate","to","categoryType","filter","cat","name","id","onClick","resetExamResultLoader","defaultMessage","examTypeToString","type","ExamFilter","setExams","examTypes","value","initialValues","text","onSubmit","values","setSubmitting","rest","examType","map","e","axios","post","process","then","response","data","catch","console","log","handleChange","errors","touched","handleBlur","handleSubmit","isSubmitting","Form","Group","controlId","Label","Control","placeholder","onChange","onBlur","ind","Check","label","Button","ExamListsByCatShower","useParams","useState","exams","loading","setLoading","useEffect","Row","Col","lg","width"],"mappings":"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","file":"static/js/35.60c42d27.chunk.js","sourcesContent":["import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nconst contentCenter = {\r\n  //styling to display server response in middle of screen\r\n  position: 'fixed',\r\n  top: '45vh',\r\n  left: '50%',\r\n  zIndex: '10000000000'\r\n}\r\n\r\nexport default function SpinnerCustom() {\r\n  return (\r\n    <Spinner\r\n      animation='grow'\r\n      role='status'\r\n      variant='dark'\r\n      style={contentCenter}\r\n    ></Spinner>\r\n  )\r\n}\r\n","import moment from 'moment'\r\nimport React from 'react'\r\nimport { Badge, Button, Col } from 'react-bootstrap'\r\nimport { BsFileText } from 'react-icons/bs'\r\nimport { FormattedMessage } from 'react-intl'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { resetExamResultLoader } from '../../../store/exams'\r\nimport { examTypeToString } from '../../../utils/faculty'\r\n\r\nexport default function ExamByCat({ exam, courseId = null }) {\r\n  const dispatch = useDispatch()\r\n  const authToken = useSelector((state) => (state.auth.token ? true : false))\r\n  return (\r\n    <>\r\n      <Col sm={12}>\r\n        <h4 className=''>\r\n          {/* <BsLayersFill size='1.5rem' /> */}\r\n          <span className=''>{exam.title}</span>\r\n        </h4>\r\n        <div className=''>\r\n          {/* <BsClock size='1.5rem' /> */}\r\n          <span>Start on: </span>\r\n          <Badge className='' variant='light'>\r\n            {moment(exam.startDate).format('YYYY-MMM-DD hh:mm A')}\r\n          </Badge>\r\n        </div>\r\n      </Col>\r\n      <Col sm={12} className='mt-1'>\r\n        <p className=''>\r\n          <BsFileText size='1.5rem' className='m-1' />\r\n          <span className='ml-2'>{exam.description}</span>\r\n        </p>\r\n        <p className='text-right'>\r\n          Ends on:{' '}\r\n          <Badge className='ml-2' variant='danger'>\r\n            {moment(exam.endDate).format('YYYY-MMM-DD hh:mm A')}\r\n          </Badge>\r\n        </p>\r\n        {/* <Badge variant='light' className='mt-3'>\r\n          {!authToken &&\r\n            exam.categoryType.filter((cat) => cat.name === 'Free').length > 0 &&\r\n            'Free'}\r\n        </Badge> */}\r\n        <hr />\r\n        <div>\r\n          <Link\r\n            className='text-white'\r\n            to={\r\n              (!authToken &&\r\n              exam.categoryType.filter((cat) => cat.name === 'Free').length > 0\r\n                ? '/exams/free/'\r\n                : '/exams/') + (courseId ? exam.id + '_' + courseId : exam.id)\r\n            }\r\n          >\r\n            <Button\r\n              variant='outline-primary'\r\n              onClick={() => {\r\n                dispatch(resetExamResultLoader())\r\n              }}\r\n            >\r\n              <FormattedMessage id='btn.start' defaultMessage='Start Exam' />\r\n            </Button>\r\n          </Link>\r\n          <Link\r\n            className='text-white'\r\n            to={\r\n              '/result/rank/' + (courseId ? courseId + '_' + exam.id : exam.id)\r\n            }\r\n          >\r\n            <Button\r\n              onClick={() => {\r\n                dispatch(resetExamResultLoader())\r\n              }}\r\n              variant='outline-primary'\r\n              className='ml-2'\r\n            >\r\n              <FormattedMessage id='btn.rank' defaultMessage='Rank' />\r\n            </Button>\r\n          </Link>\r\n          <span className='bg-warning text-white p-2 ml-5'>\r\n            {examTypeToString(exam.type)}\r\n          </span>\r\n        </div>\r\n      </Col>\r\n    </>\r\n  )\r\n}\r\n","import axios from 'axios'\r\nimport { Formik } from 'formik'\r\nimport React from 'react'\r\nimport { Button, Form } from 'react-bootstrap'\r\n\r\nexport default function ExamFilter({ setExams, id }) {\r\n  const examTypes = [\r\n    { name: 'Assignment', value: 0 },\r\n    { name: 'Weekly', value: 1 },\r\n    { name: 'Monthly', value: 2 },\r\n    { name: 'Assesment', value: 3 },\r\n    { name: 'Term', value: 4 },\r\n    { name: 'Test', value: 5 },\r\n    { name: 'Final', value: 6 }\r\n  ]\r\n  return (\r\n    <div className='mt-5'>\r\n      <Formik\r\n        initialValues={{ text: '' }}\r\n        onSubmit={(values, { setSubmitting }) => {\r\n          const { text, ...rest } = values\r\n          let examType = Object.values(rest).map((e) => e[0])\r\n          if (examType.length < 1) {\r\n            examType = ['0', '1', '2', '3', '4', '5', '6']\r\n          }\r\n\r\n          axios\r\n            .post(process.env.REACT_APP_SITE_URL + '/exams/course/' + id, {\r\n              text,\r\n              examType\r\n            })\r\n            .then((response) => {\r\n              //setLoading(false)\r\n              setExams(response.data)\r\n            })\r\n            .catch((e) => {\r\n              //setLoading(false)\r\n              console.log(e)\r\n            })\r\n        }}\r\n      >\r\n        {({\r\n          values,\r\n          errors,\r\n          touched,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          isSubmitting\r\n          /* and other goodies */\r\n        }) => (\r\n          <Form onSubmit={handleSubmit}>\r\n            <Form.Group className='mb-3' controlId='formBasicPassword'>\r\n              <Form.Label>Search</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                name='text'\r\n                placeholder='e.g. Abcde..'\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                value={values.text}\r\n              />\r\n            </Form.Group>\r\n            <h4>{'Select Exam Type'}</h4>\r\n            <div className='pl-2'>\r\n              {examTypes.map((examType, ind) => (\r\n                <Form.Check\r\n                  label={examType.name}\r\n                  name={examType.name}\r\n                  type={'checkbox'}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  id={examType.name}\r\n                  value={examType.value}\r\n                />\r\n              ))}\r\n            </div>\r\n            <Button className='mt-3' type='submit'>\r\n              Apply\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  )\r\n}\r\n","import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Col, Row } from 'react-bootstrap'\r\nimport { useParams } from 'react-router'\r\nimport Spinner from '../../components/shared/spinner/spinner'\r\nimport ExamByCat from './component/examByCat'\r\nimport ExamFilter from './component/examFilter'\r\n\r\nexport default function ExamListsByCatShower() {\r\n  const { id } = useParams()\r\n  const [exams, setExams] = useState([])\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  useEffect(() => {\r\n    setLoading(true)\r\n    axios\r\n      .post(process.env.REACT_APP_SITE_URL + '/exams/course/' + id)\r\n      .then((response) => {\r\n        setLoading(false)\r\n        console.log(response.data)\r\n        setExams(response.data)\r\n      })\r\n      .catch((e) => {\r\n        setLoading(false)\r\n        console.log(e)\r\n      })\r\n  }, [id])\r\n  return (\r\n    <div className='mt-5'>\r\n      {loading && <Spinner />}\r\n      <Row>\r\n        <Col lg={2}>\r\n          <ExamFilter setExams={setExams} id={id} />\r\n        </Col>\r\n        <Col lg={10}>\r\n          <h2 className='text-center'>\r\n            <span className='mr-2'>Available Exams</span>\r\n          </h2>\r\n          {!loading && (\r\n            <p className='text-center text-danger'>\r\n              {exams.length < 1 && 'NO Exam is avaiable.'}\r\n            </p>\r\n          )}\r\n          <div className='d-flex justify-content-center flex-wrap'>\r\n            {exams &&\r\n              exams.map((exam) => (\r\n                <Row\r\n                  key={exam.title}\r\n                  className='m-2 py-3 pl-2 border border-secondary' // bg-secondary text-white\r\n                  style={{ width: '350px' }}\r\n                >\r\n                  <ExamByCat exam={exam} courseId={id} />\r\n                </Row>\r\n              ))}\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\n"],"sourceRoot":""}