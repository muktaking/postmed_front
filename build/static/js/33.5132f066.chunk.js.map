{"version":3,"sources":["../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/Card.js","../node_modules/react-bootstrap/esm/Alert.js","../node_modules/react-bootstrap/esm/ListGroupItem.js","../node_modules/react-bootstrap/esm/ListGroup.js","components/navbar/subNavBar.js","components/result/gist.js","components/result/stem.js","container/result/getFeedbacks.js","container/result/feedback.js","container/result/result.js"],"names":["CardImg","React","forwardRef","_ref","ref","bsPrefix","className","variant","_ref$as","as","Component","props","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","createElement","_extends","classNames","displayName","defaultProps","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","Card","bg","text","border","body","children","cardContext","useMemo","cardHeaderBsPrefix","CardContext","Provider","value","Img","Title","Subtitle","Body","Link","Text","Header","Footer","ImgOverlay","show","transition","Fade","closeLabel","controllables","Alert","uncontrolledProps","_useUncontrolled","useUncontrolled","onClose","dismissible","Transition","handleClose","useEventCallback","e","alert","role","undefined","CloseButton","onClick","label","unmountOnExit","in","DivStyledAsH4","SafeAnchor","Heading","ListGroupItem","active","disabled","action","eventKey","handleClick","useCallback","event","preventDefault","stopPropagation","AbstractNavItem","makeEventKey","href","ListGroup","horizontalVariant","activeKey","horizontal","_useUncontrolled$as","controlledProps","AbstractNav","Item","connect","state","isAuthenticated","auth","token","pages","to","pathname","toUpperCase","map","key","Gist","width","title","bgColor","style","fontSize","id","toLowerCase","defaultMessage","answerStatus","QTypeNumber","sbaStyle","stem","qIndex","index","qType","answer","qStem","aStem","isUntouched","color","size","Form","Check","inline","type","checked","marginRight","name","GetFeedbacks","examId","useState","feedbacks","setFeedbacks","useEffect","axios","get","process","then","response","data","catch","console","log","feedback","Badge","status","getFeedbackStatus","feedbackStatus","message","validate","values","errors","email","test","validator","isLength","min","max","Feedback","res","setRes","user","useSelector","initialValues","firstName","Row","Col","lg","md","sm","enableReinitialize","onSubmit","setSubmitting","post","submit","touched","handleChange","handleSubmit","Group","controlId","Label","Control","placeholder","onChange","classname","Input","isValid","defaultChecked","rows","Button","QType","Result","this","exams","examResult","totalMark","totalScore","totalPenaltyMark","totalScorePercentage","timeTakenToComplete","error","toFixed","moment","duration","humanize","item","result","stemResult","length","qText","stems","ind","fbStem","intl","formatMessage","generalFeedback","replace","split","Image","src","height","injectIntl"],"mappings":"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","file":"static/js/33.5132f066.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  variant: null\n};\nvar CardImg = React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\nfunction (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      variant = _ref.variant,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'img' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"variant\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return React.createElement(Component, _extends({\n    ref: ref,\n    className: classNames(variant ? prefix + \"-\" + variant : prefix, className)\n  }, props));\n});\nCardImg.displayName = 'CardImg';\nCardImg.defaultProps = defaultProps;\nexport default CardImg;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardContext from './CardContext';\nimport CardImg from './CardImg';\nvar DivStyledAsH5 = divWithClassName('h5');\nvar DivStyledAsH6 = divWithClassName('h6');\nvar CardBody = createWithBsPrefix('card-body');\nvar defaultProps = {\n  body: false\n};\nvar Card = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      bg = _ref.bg,\n      text = _ref.text,\n      border = _ref.border,\n      body = _ref.body,\n      children = _ref.children,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"bg\", \"text\", \"border\", \"body\", \"children\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'card');\n  var cardContext = useMemo(function () {\n    return {\n      cardHeaderBsPrefix: prefix + \"-header\"\n    };\n  }, [prefix]);\n  return React.createElement(CardContext.Provider, {\n    value: cardContext\n  }, React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, prefix, bg && \"bg-\" + bg, text && \"text-\" + text, border && \"border-\" + border)\n  }), body ? React.createElement(CardBody, null, children) : children));\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nCard.Img = CardImg;\nCard.Title = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nCard.Subtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nCard.Body = CardBody;\nCard.Link = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nCard.Text = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nCard.Header = createWithBsPrefix('card-header');\nCard.Footer = createWithBsPrefix('card-footer');\nCard.ImgOverlay = createWithBsPrefix('card-img-overlay');\nexport default Card;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport Fade from './Fade';\nimport CloseButton from './CloseButton';\nimport SafeAnchor from './SafeAnchor';\nvar defaultProps = {\n  show: true,\n  transition: Fade,\n  closeLabel: 'Close alert'\n};\nvar controllables = {\n  show: 'onClose'\n};\nvar Alert = React.forwardRef(function (uncontrolledProps, ref) {\n  var _useUncontrolled = useUncontrolled(uncontrolledProps, controllables),\n      bsPrefix = _useUncontrolled.bsPrefix,\n      show = _useUncontrolled.show,\n      closeLabel = _useUncontrolled.closeLabel,\n      className = _useUncontrolled.className,\n      children = _useUncontrolled.children,\n      variant = _useUncontrolled.variant,\n      onClose = _useUncontrolled.onClose,\n      dismissible = _useUncontrolled.dismissible,\n      Transition = _useUncontrolled.transition,\n      props = _objectWithoutPropertiesLoose(_useUncontrolled, [\"bsPrefix\", \"show\", \"closeLabel\", \"className\", \"children\", \"variant\", \"onClose\", \"dismissible\", \"transition\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'alert');\n  var handleClose = useEventCallback(function (e) {\n    onClose(false, e);\n  });\n  var alert = React.createElement(\"div\", _extends({\n    role: \"alert\"\n  }, Transition ? props : undefined, {\n    className: classNames(className, prefix, variant && prefix + \"-\" + variant, dismissible && prefix + \"-dismissible\")\n  }), dismissible && React.createElement(CloseButton, {\n    onClick: handleClose,\n    label: closeLabel\n  }), children);\n  if (!Transition) return show ? alert : null;\n  return React.createElement(Transition, _extends({\n    unmountOnExit: true,\n    ref: ref\n  }, props, {\n    in: show\n  }), alert);\n});\nvar DivStyledAsH4 = divWithClassName('h4');\nDivStyledAsH4.displayName = 'DivStyledAsH4';\nAlert.displayName = 'Alert';\nAlert.defaultProps = defaultProps;\nAlert.Link = createWithBsPrefix('alert-link', {\n  Component: SafeAnchor\n});\nAlert.Heading = createWithBsPrefix('alert-heading', {\n  Component: DivStyledAsH4\n});\nexport default Alert;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useCallback } from 'react';\nimport AbstractNavItem from './AbstractNavItem';\nimport { makeEventKey } from './SelectableContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  variant: null,\n  active: false,\n  disabled: false\n};\nvar ListGroupItem = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      active = _ref.active,\n      disabled = _ref.disabled,\n      className = _ref.className,\n      variant = _ref.variant,\n      action = _ref.action,\n      as = _ref.as,\n      eventKey = _ref.eventKey,\n      onClick = _ref.onClick,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"active\", \"disabled\", \"className\", \"variant\", \"action\", \"as\", \"eventKey\", \"onClick\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'list-group-item');\n  var handleClick = useCallback(function (event) {\n    if (disabled) {\n      event.preventDefault();\n      event.stopPropagation();\n      return;\n    }\n\n    if (onClick) onClick(event);\n  }, [disabled, onClick]);\n  return React.createElement(AbstractNavItem, _extends({\n    ref: ref\n  }, props, {\n    eventKey: makeEventKey(eventKey, props.href) // eslint-disable-next-line\n    ,\n    as: as || (action ? props.href ? 'a' : 'button' : 'div'),\n    onClick: handleClick,\n    className: classNames(className, bsPrefix, active && 'active', disabled && 'disabled', variant && bsPrefix + \"-\" + variant, action && bsPrefix + \"-action\")\n  }));\n});\nListGroupItem.defaultProps = defaultProps;\nListGroupItem.displayName = 'ListGroupItem';\nexport default ListGroupItem;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport warning from 'warning';\nimport { useUncontrolled } from 'uncontrollable';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractNav from './AbstractNav';\nimport ListGroupItem from './ListGroupItem';\nvar defaultProps = {\n  variant: null,\n  horizontal: null\n};\nvar ListGroup = React.forwardRef(function (props, ref) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      className = _useUncontrolled.className,\n      bsPrefix = _useUncontrolled.bsPrefix,\n      variant = _useUncontrolled.variant,\n      horizontal = _useUncontrolled.horizontal,\n      _useUncontrolled$as = _useUncontrolled.as,\n      as = _useUncontrolled$as === void 0 ? 'div' : _useUncontrolled$as,\n      controlledProps = _objectWithoutPropertiesLoose(_useUncontrolled, [\"className\", \"bsPrefix\", \"variant\", \"horizontal\", \"as\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'list-group');\n  var horizontalVariant;\n\n  if (horizontal) {\n    horizontalVariant = horizontal === true ? 'horizontal' : \"horizontal-\" + horizontal;\n  } else {\n    horizontalVariant = null;\n  }\n\n  process.env.NODE_ENV !== \"production\" ? warning(!(horizontal && variant === 'flush'), '`variant=\"flush\"` and `horizontal` should not be used together.') : void 0;\n  return React.createElement(AbstractNav, _extends({\n    ref: ref\n  }, controlledProps, {\n    as: as,\n    className: classNames(className, bsPrefix, variant && bsPrefix + \"-\" + variant, horizontalVariant && bsPrefix + \"-\" + horizontalVariant)\n  }));\n});\nListGroup.defaultProps = defaultProps;\nListGroup.displayName = 'ListGroup';\nListGroup.Item = ListGroupItem;\nexport default ListGroup;","import React from 'react'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport { connect } from 'react-redux'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst subNavBar = (props) => {\r\n  const pages = props.isAuthenticated\r\n    ? ['dashboard', 'exams', 'logout']\r\n    : ['exams', 'signup', 'login']\r\n\r\n  return (\r\n    <Nav className='bg-light'>\r\n      <Nav.Item as='li' className='mr-3'>\r\n        <NavLink to={{ pathname: '/' }} className='nav-link'>\r\n          {'Home'.toUpperCase()}\r\n        </NavLink>\r\n      </Nav.Item>\r\n      <Nav.Item as='li' className='mr-3'>\r\n        <NavLink to='/#contact' className='nav-link'>\r\n          {'Contact'.toUpperCase()}\r\n        </NavLink>\r\n      </Nav.Item>\r\n      {pages.map((value) => (\r\n        <Nav.Item key={value} as='li' className='mr-3'>\r\n          <NavLink\r\n            // href={\"/\" + value}\r\n            to={{ pathname: '/' + value }}\r\n            className='nav-link'\r\n          >\r\n            {value.toUpperCase()}\r\n          </NavLink>\r\n        </Nav.Item>\r\n      ))}\r\n      {/* </Scrollspy> */}\r\n    </Nav>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isAuthenticated: state.auth.token !== null\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(subNavBar)\r\n","/* eslint-disable no-undef */\r\n/* eslint-disable react/prop-types */\r\nimport React from 'react'\r\nimport { FormattedMessage } from 'react-intl'\r\n\r\nexport default function Gist({ width = '250px', value, title, bgColor }) {\r\n  // eslint-disable-next-line no-console\r\n  return (\r\n    <div style={{ width: width }} className='mr-2 mb-1'>\r\n      <p\r\n        className={bgColor + ' text-center text-light mb-1 p-3'}\r\n        style={{ fontSize: '1.5rem' }}\r\n      >\r\n        {value}\r\n      </p>\r\n      <p\r\n        className={bgColor + ' bg-warning text-center text-light p-1'}\r\n        style={{ fontSize: '1rem' }}\r\n      >\r\n        <FormattedMessage id={title.toLowerCase()} defaultMessage={title} />\r\n      </p>\r\n    </div>\r\n  )\r\n}\r\n","/* eslint-disable prettier/prettier */\r\nimport React from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport {\r\n  FaMinusCircle,\r\n  FaRegCheckCircle,\r\n  FaRegTimesCircle\r\n} from \"react-icons/fa\";\r\n\r\nconst answerStatus = {\r\n  True: 1,\r\n  False: 0,\r\n  NotAnswered: -1,\r\n};\r\n\r\nconst QTypeNumber = {\r\n  SingleBestAnswer: \"sba\",\r\n  Matrix: \"matrix\",\r\n};\r\n\r\nconst sbaStyle={\r\n  marginLeft: '2rem',\r\n  marginRight: '.6rem'\r\n}\r\n\r\nexport default function stem({qIndex, index, qType, answer, qStem, aStem,isUntouched }) {\r\n \r\n  return (\r\n    <div className=\"d-flex flex-nowrap\">\r\n      {qType === QTypeNumber.Matrix && (\r\n        <>\r\n          <div className=\"mr-2\">\r\n            {answer === answerStatus.True && (\r\n              <FaRegCheckCircle style={{ color: \"#3c763d\" }} size=\"1.4rem\" />\r\n            )}\r\n            {answer === answerStatus.False && (\r\n              <FaRegTimesCircle style={{ color: \"#a94442\" }} size=\"1.4rem\" />\r\n            )}\r\n            {answer === answerStatus.NotAnswered && (\r\n              <FaMinusCircle style={{ color: \"#777\" }} size=\"1.4rem\" />\r\n            )}\r\n          </div>\r\n          <div className=\"mr-2\">{qStem}</div>\r\n          {!isUntouched && <div>\r\n            <Form.Check\r\n              inline\r\n              disabled\r\n              label=\"true\"\r\n              type=\"radio\"\r\n              checked={\r\n                (answer !== answerStatus.NotAnswered) ?\r\n                answer === answerStatus.True ? aStem === \"1\" : aStem !== \"1\"\r\n                : false\r\n              }\r\n            />\r\n            <Form.Check\r\n              inline\r\n              disabled\r\n              label=\"False\"\r\n              type=\"radio\"\r\n              checked={\r\n                (answer !== answerStatus.NotAnswered)?\r\n                answer === answerStatus.True ? aStem === \"0\" : aStem !== \"0\"\r\n                : false\r\n              }\r\n            />\r\n\r\n          </div>}\r\n        </>\r\n      )}\r\n\r\n      {qType === QTypeNumber.SingleBestAnswer && (\r\n        <>\r\n\r\n          <div className=\"d-flex mr-2\">\r\n            <div className=\"\">\r\n              { answer[1] ?\r\n                  index + 1 === answer[1] ? \r\n                    answer[0] === answer[1] ?\r\n                      <FaRegCheckCircle style={{ color: \"#3c763d\", marginRight: sbaStyle.marginRight }} size=\"1.4rem\" />\r\n                      : <FaRegTimesCircle style={{ color: \"#a94442\", marginRight: sbaStyle.marginRight }} size=\"1.4rem\" />\r\n                  : index + 1 === answer[0] ?\r\n                      <FaRegCheckCircle style={{ color: \"#3c763d\", marginRight: sbaStyle.marginRight }} size=\"1.4rem\" />\r\n                      : <div style={{width: '2rem'}}></div>\r\n\r\n                : index + 1 === answer[0] ?\r\n                    <FaRegCheckCircle style={{ color: \"#3c763d\", marginRight: sbaStyle.marginRight }} size=\"1.4rem\" />\r\n                    : <div style={{width: '2rem'}}></div>\r\n              }\r\n            </div>\r\n            <div className=\"\">\r\n              {\r\n                answer[1] ?\r\n                  index +1 === answer[1] ?\r\n                    <Form.Check\r\n                    inline\r\n                    disabled\r\n                    type=\"radio\"\r\n                    name={qIndex}\r\n                    checked={true}\r\n                    />\r\n                    : <Form.Check\r\n                    inline\r\n                    disabled\r\n                    type=\"radio\"\r\n                    name={qIndex}\r\n                    checked={false}\r\n                    />\r\n                  : <Form.Check\r\n                  inline\r\n                  disabled\r\n                  type=\"radio\"\r\n                  name={qIndex}\r\n                  checked={false}\r\n                  />\r\n              }\r\n            </div>\r\n          </div>\r\n\r\n\r\n          {/* <div className=\"mr-2\">\r\n            {!answer[1] && (index + 1 === answer[0] ? (\r\n              <div className=\"d-flex\">\r\n                <FaRegCheckCircle style={{ color: \"#3c763d\", marginRight: sbaStyle.marginRight }} size=\"1.4rem\" />\r\n                <Form.Check\r\n                inline\r\n                disabled\r\n                type=\"radio\"\r\n                name={qIndex}\r\n                checked={false}\r\n                />\r\n              </div>\r\n            )\r\n          : (\r\n            <>\r\n              <Form.Check\r\n              inline\r\n              disabled\r\n              style={{marginLeft: sbaStyle.marginLeft}}\r\n              type=\"radio\"\r\n              name={qIndex}\r\n              checked={false}\r\n              />\r\n            </>)\r\n            )\r\n          \r\n          }\r\n            {answer[1] && ( (index + 1 === answer[1] ) ? \r\n                answer[0] === answer[1] ? (\r\n                  <div className=\"d-flex\">\r\n                    <FaCheckCircle\r\n                      style={{ color: \"#3c763d\", marginRight: sbaStyle.marginRight }}\r\n                      size=\"1.4rem\"\r\n                    />\r\n                    <Form.Check\r\n                      inline\r\n                      disabled\r\n                      type=\"radio\"\r\n                      name={qIndex}\r\n                      checked={true}\r\n                      />\r\n                    </div>\r\n                  )\r\n              : (\r\n                <div className=\"d-flex\">\r\n                  <FaRegTimesCircle style={{ color: \"#a94442\", marginRight: sbaStyle.marginRight }} size=\"1.4rem\" />\r\n                  <Form.Check\r\n                    inline\r\n                    disabled\r\n                    type=\"radio\"\r\n                    name={qIndex}\r\n                    checked={true}\r\n                    />\r\n                </div>\r\n                )\r\n              :   ( index + 1 === answer[0]  ? (\r\n                <div className=\"d-flex\">\r\n                  <FaCheckCircle\r\n                    style={{ color: \"#3c763d\", marginRight: sbaStyle.marginRight }}\r\n                    size=\"1.4rem\"\r\n                  />\r\n                  <Form.Check\r\n                    inline\r\n                    disabled\r\n                    type=\"radio\"\r\n                    name={qIndex}\r\n                    checked={false}\r\n                    />\r\n                </div>\r\n              ) \r\n                  :  <Form.Check\r\n                  inline\r\n                  disabled\r\n                  style={{marginLeft: sbaStyle.marginLeft}}\r\n                  type=\"radio\"\r\n                  name={qIndex}\r\n                  checked={false}\r\n                  />             \r\n              )\r\n            )            \r\n            }\r\n          </div> */}\r\n          <div className=\"\">{qStem}</div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Badge, ListGroup } from 'react-bootstrap'\r\n\r\nexport default function GetFeedbacks({ examId }) {\r\n  const [feedbacks, setFeedbacks] = useState([])\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(process.env.REACT_APP_SITE_URL + '/exams/feedback/' + examId)\r\n      .then((response) => {\r\n        setFeedbacks(response.data)\r\n      })\r\n      .catch((e) => {\r\n        console.log(e)\r\n      })\r\n  }, [examId])\r\n\r\n  return (\r\n    <div>\r\n      <h3>Review</h3>\r\n      <ListGroup as='ul'>\r\n        {feedbacks.map((feedback) => (\r\n          <ListGroup.Item as='li'>\r\n            <p className='lead'>\r\n              <span className='ml-2'>{feedback.name}</span>\r\n              <span className='ml-2'>reviewd as </span>\r\n              <Badge variant='info'>\r\n                {getFeedbackStatus(feedback.feedbackStatus)}\r\n              </Badge>\r\n            </p>\r\n            <p>{feedback.message}</p>\r\n          </ListGroup.Item>\r\n        ))}\r\n      </ListGroup>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction getFeedbackStatus(status) {\r\n  switch (status) {\r\n    case 1:\r\n      return 'Below Average'\r\n    case 2:\r\n      return 'Average'\r\n    case 4:\r\n      return 'Best'\r\n\r\n    default:\r\n      return 'Good'\r\n  }\r\n}\r\n","import axios from 'axios'\r\nimport { Formik } from 'formik'\r\nimport React, { useState } from 'react'\r\nimport { Button, Col, Form, Row } from 'react-bootstrap'\r\nimport { FaLaughBeam, FaRegMeh, FaRegSadCry, FaRegSmile } from 'react-icons/fa'\r\nimport { useSelector } from 'react-redux'\r\nimport validator from 'validator'\r\nimport GetFeedbacks from './getFeedbacks'\r\n\r\nconst validate = (values) => {\r\n  const errors = {}\r\n  if (!values.email) {\r\n    errors.email = 'Required'\r\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\r\n    errors.email = 'Invalid email address'\r\n  }\r\n\r\n  if (!values.name) {\r\n    errors.name = 'Required'\r\n  } else if (!validator.isLength(values.name, { min: 3, max: 30 })) {\r\n    errors.name = 'Name should be within 3 to 30 characters'\r\n  }\r\n  if (!validator.isLength(values.message, { min: 5, max: 255 })) {\r\n    errors.message = 'Message should be within 5 to 255 characters'\r\n  }\r\n  return errors\r\n}\r\nconst submit = (values, examId, setRes, { setSubmitting }) => {\r\n  axios\r\n    .post(process.env.REACT_APP_SITE_URL + '/exams/feedback', {\r\n      ...values,\r\n      examId\r\n    })\r\n    .then((response) => {\r\n      setRes(response.data)\r\n    })\r\n    .catch((e) => {\r\n      console.log(e)\r\n    })\r\n}\r\n\r\nexport default function Feedback({ examId }) {\r\n  const [res, setRes] = useState(null)\r\n  const user = useSelector((state) => state.user)\r\n  const initialValues = {\r\n    name: user.firstName,\r\n    email: user.email,\r\n    feedbackStatus: '3',\r\n    message: ''\r\n  }\r\n\r\n  return (\r\n    <Row className='mt-5'>\r\n      <Col lg={4} md={5} sm={6}>\r\n        {res ? (\r\n          <h3 className='text-success'>Thank You for submitting a feedback.</h3>\r\n        ) : (\r\n          <>\r\n            <h3>Please give us a feedback.</h3>\r\n            <hr />\r\n            <Formik\r\n              enableReinitialize\r\n              initialValues={initialValues}\r\n              validate={validate}\r\n              onSubmit={(values, { setSubmitting }) => {\r\n                submit(values, examId, setRes, { setSubmitting })\r\n              }}\r\n            >\r\n              {({\r\n                values,\r\n                errors,\r\n                touched,\r\n                handleChange,\r\n                handleSubmit\r\n                /* and other goodies */\r\n              }) => (\r\n                <Form onSubmit={handleSubmit}>\r\n                  <Form.Group controlId='formBasicName'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n                      type='text'\r\n                      name='name'\r\n                      placeholder='Enter name'\r\n                      onChange={handleChange}\r\n                      value={values.name}\r\n                    />\r\n                    <Form.Text as='span' className='text-danger'>\r\n                      {errors.name && touched.name && errors.name}\r\n                    </Form.Text>\r\n                  </Form.Group>\r\n                  <Form.Group controlId='formBasicEmail'>\r\n                    <Form.Label>Email address</Form.Label>\r\n                    <Form.Control\r\n                      type='email'\r\n                      name='email'\r\n                      placeholder='Enter email'\r\n                      onChange={handleChange}\r\n                      value={values.email}\r\n                    />\r\n                    <Form.Text className='text-muted'>\r\n                      We'll never share your email with anyone else.\r\n                    </Form.Text>\r\n                    <Form.Text as='span' className='text-danger'>\r\n                      {errors.email && touched.email && errors.email}\r\n                    </Form.Text>\r\n                  </Form.Group>\r\n                  <p classname='lead'>Rating</p>\r\n                  <Form.Group\r\n                    controlId='formGroupFeedback'\r\n                    className='d-flex mb-4'\r\n                  >\r\n                    <Form.Check type='radio' className='mr-2'>\r\n                      <Form.Check.Input\r\n                        type='radio'\r\n                        name='feedbackStatus'\r\n                        isValid\r\n                        value='1'\r\n                        onChange={handleChange}\r\n                      />\r\n                      <Form.Check.Label className='text-danger'>\r\n                        <FaRegSadCry />\r\n                        <span className='ml-1'>Below average</span>\r\n                      </Form.Check.Label>\r\n                    </Form.Check>\r\n                    <Form.Check type='radio' className='mr-2'>\r\n                      <Form.Check.Input\r\n                        type='radio'\r\n                        name='feedbackStatus'\r\n                        value='2'\r\n                        isValid\r\n                        onChange={handleChange}\r\n                      />\r\n                      <Form.Check.Label className='text-warning'>\r\n                        <FaRegMeh />\r\n                        <span className='ml-1'>Average</span>\r\n                      </Form.Check.Label>\r\n                    </Form.Check>\r\n                    <Form.Check type='radio' className='mr-2'>\r\n                      <Form.Check.Input\r\n                        type='radio'\r\n                        name='feedbackStatus'\r\n                        value='3'\r\n                        isValid\r\n                        defaultChecked\r\n                        onChange={handleChange}\r\n                      />\r\n                      <Form.Check.Label>\r\n                        <FaRegSmile />\r\n                        <span className='ml-1'>Good</span>\r\n                      </Form.Check.Label>\r\n                    </Form.Check>\r\n                    <Form.Check type='radio' className='mr-2'>\r\n                      <Form.Check.Input\r\n                        type='radio'\r\n                        name='feedbackStatus'\r\n                        value='4'\r\n                        isValid\r\n                        onChange={handleChange}\r\n                      />\r\n                      <Form.Check.Label>\r\n                        <FaLaughBeam />\r\n                        <span className='ml-1'>Best</span>\r\n                      </Form.Check.Label>\r\n                    </Form.Check>\r\n                    <Form.Text as='span' className='text-danger'>\r\n                      {errors.feedbackStatus &&\r\n                        touched.feedbackStatus &&\r\n                        errors.feedbackStatus}\r\n                    </Form.Text>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group controlId='formBasicFeedback'>\r\n                    <Form.Label>Message</Form.Label>\r\n                    <Form.Control\r\n                      as='textarea'\r\n                      name='message'\r\n                      rows={3}\r\n                      placeholder='Write a feedback message for this exam'\r\n                      onChange={handleChange}\r\n                      value={values.message}\r\n                    />\r\n                    <Form.Text as='span' className='text-danger'>\r\n                      {errors.message && touched.message && errors.message}\r\n                    </Form.Text>\r\n                  </Form.Group>\r\n\r\n                  <Button variant='primary' type='submit'>\r\n                    Submit\r\n                  </Button>\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n          </>\r\n        )}\r\n      </Col>\r\n      <Col lg={8} md={7} sm={6}>\r\n        <GetFeedbacks examId={examId} />\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n","/* eslint-disable react/prop-types */\r\nimport moment from 'moment'\r\nimport React, { Component } from 'react'\r\nimport { Alert, Badge, Card, Image, ListGroup } from 'react-bootstrap'\r\nimport { FaMinusCircle } from 'react-icons/fa'\r\nimport { FormattedMessage, injectIntl } from 'react-intl'\r\nimport { connect } from 'react-redux'\r\nimport SubNavBar from '../../components/navbar/subNavBar'\r\nimport Gist from '../../components/result/gist'\r\nimport QuestionResultStem from '../../components/result/stem'\r\nimport Feedback from './feedback'\r\nconst QType = {\r\n  SingleBestAnswer: 'sba',\r\n  Matrix: 'matrix'\r\n}\r\n\r\nclass Result extends Component {\r\n  render() {\r\n    const {\r\n      examId,\r\n      examResult,\r\n      totalMark,\r\n      totalScore,\r\n      totalPenaltyMark,\r\n      totalScorePercentage,\r\n      // eslint-disable-next-line no-unused-vars\r\n      timeTakenToComplete,\r\n      error\r\n    } = this.props.exams\r\n    console.log(examId)\r\n    return (\r\n      <div>\r\n        {error && (\r\n          <>\r\n            <Alert variant={'danger'} className='m-5 text-center'>\r\n              {error}\r\n            </Alert>\r\n            <SubNavBar />\r\n          </>\r\n        )}\r\n        {examResult && (\r\n          <div className='mb-5'>\r\n            <Card className='mt-3'>\r\n              <Card.Header as='h5' className='text-center'>\r\n                <FormattedMessage id='result' defaultMessage='Result' />\r\n              </Card.Header>\r\n              <Card.Body className='d-flex justify-content-center'>\r\n                <Gist\r\n                  title='Score'\r\n                  bgColor='bg-warning'\r\n                  value={\r\n                    totalScore.toFixed(2) + ' Out of ' + totalMark.toFixed(2)\r\n                  }\r\n                />\r\n                <Gist\r\n                  title='Time'\r\n                  bgColor='bg-info'\r\n                  value={moment\r\n                    .duration(timeTakenToComplete, 'minute')\r\n                    .humanize()}\r\n                />\r\n                <Gist\r\n                  title='Percentage'\r\n                  bgColor='bg-primary'\r\n                  value={totalScorePercentage.toFixed(2) + ' %'}\r\n                />\r\n                <Gist\r\n                  title='Penalty Mark'\r\n                  bgColor='bg-secondary'\r\n                  value={totalPenaltyMark.toFixed(2)}\r\n                />\r\n              </Card.Body>\r\n            </Card>\r\n\r\n            <Card className='mt-3'>\r\n              <Card.Header as='h5' className='text-center'>\r\n                <FormattedMessage id='detail' defaultMessage='Detail' />\r\n              </Card.Header>\r\n              <Card.Body>\r\n                {examResult.map((item, index) => (\r\n                  <ListGroup key={index} variant='flush' className='mb-4'>\r\n                    <ListGroup.Item>\r\n                      {item.result.stemResult[0] === QType.Matrix &&\r\n                        item.result.stemResult.length === 1 && (\r\n                          <FaMinusCircle\r\n                            className='mr-2'\r\n                            style={{ color: '#777' }}\r\n                            size='1.4rem'\r\n                          />\r\n                        )}\r\n                      {item.result.stemResult[0] === QType.SingleBestAnswer &&\r\n                        item.result.stemResult.length === 2 && (\r\n                          <FaMinusCircle\r\n                            className='mr-2'\r\n                            style={{ color: '#777' }}\r\n                            size='1.4rem'\r\n                          />\r\n                        )}\r\n                      <span>{index + 1 + '. ' + item.qText}</span>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                      <div variant='flush' className='pl-3'>\r\n                        {item.stems.map((stem, ind) => {\r\n                          if (\r\n                            item.result.stemResult[0] === QType.SingleBestAnswer\r\n                          )\r\n                            return (\r\n                              <>\r\n                                <div className='mb-1'>\r\n                                  <QuestionResultStem\r\n                                    index={ind}\r\n                                    qType={item.result.stemResult[0]}\r\n                                    answer={[\r\n                                      item.result.stemResult[1],\r\n                                      item.result.stemResult[2]\r\n                                    ]}\r\n                                    qStem={`${ind + 1}. ${stem.qStem}`}\r\n                                  />\r\n                                </div>\r\n                                <div className='ml-3 mb-1'>\r\n                                  {stem.fbStem &&\r\n                                    this.props.intl.formatMessage({\r\n                                      id: 'explanation',\r\n                                      defaultMessage: 'Explanation is : '\r\n                                    }) +\r\n                                      ' ' +\r\n                                      stem.fbStem}\r\n                                </div>\r\n                              </>\r\n                            )\r\n                          else\r\n                            return (\r\n                              <>\r\n                                <div className='mb-1'>\r\n                                  <QuestionResultStem\r\n                                    qIndex={index}\r\n                                    index={ind}\r\n                                    qType={item.result.stemResult[0]}\r\n                                    answer={item.result.stemResult[ind + 1]}\r\n                                    qStem={`${ind + 1}. ${stem.qStem}`}\r\n                                    aStem={stem.aStem}\r\n                                    isUntouched={\r\n                                      item.result.stemResult.length === 1\r\n                                    }\r\n                                  />\r\n                                </div>\r\n\r\n                                <div\r\n                                  // className={\r\n                                  //   (item.result.stemResult[ind] === true\r\n                                  //     ? \"bg-success\"\r\n                                  //     : \"bg-danger\") + \" text-light ml-3\"\r\n                                  // }\r\n                                  className='mb-3'\r\n                                >\r\n                                  <Badge\r\n                                    variant='primary'\r\n                                    style={{ fontSize: '.8rem' }}\r\n                                  >\r\n                                    {' '}\r\n                                    This Statement is{' '}\r\n                                  </Badge>{' '}\r\n                                  {stem.aStem === '1' ? 'True' : 'False'}\r\n                                  <br />\r\n                                  {stem.fbStem && (\r\n                                    <>\r\n                                      <Badge\r\n                                        variant='info'\r\n                                        style={{ fontSize: '.8rem' }}\r\n                                      >\r\n                                        {this.props.intl.formatMessage({\r\n                                          id: 'explanation',\r\n                                          defaultMessage: 'Explanation is'\r\n                                        })}\r\n                                      </Badge>{' '}\r\n                                      <span>{' ' + stem.fbStem}</span>\r\n                                    </>\r\n                                  )}\r\n                                </div>\r\n                              </>\r\n                            )\r\n                        })}\r\n                      </div>\r\n                    </ListGroup.Item>\r\n                    {item.generalFeedback && (\r\n                      <ListGroup.Item className='ml-3 text-white bg-secondary'>\r\n                        <p>\r\n                          <Badge\r\n                            variant='secondary'\r\n                            style={{ fontSize: '.8rem' }}\r\n                          >\r\n                            {this.props.intl.formatMessage({\r\n                              id: 'gexplanation',\r\n                              defaultMessage: 'General explanation is : '\r\n                            })}\r\n                          </Badge>\r\n                          {' ' + item.generalFeedback.replace(/#L(.+)L#/, '')}\r\n                        </p>\r\n                        {item.generalFeedback.split(/#L(.+)L#/)[1] && (\r\n                          <Image\r\n                            src={item.generalFeedback.split(/#L(.+)L#/)[1]}\r\n                            width='350'\r\n                            height='300'\r\n                          />\r\n                        )}\r\n                      </ListGroup.Item>\r\n                    )}\r\n                  </ListGroup>\r\n                ))}\r\n              </Card.Body>\r\n            </Card>\r\n            <Feedback examId={examId} />\r\n          </div>\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    exams: state.exams\r\n    //   auth: state.auth,\r\n    //   category: state.category,\r\n    //   api: state.api,\r\n  }\r\n}\r\n\r\nexport default injectIntl(connect(mapStateToProps)(Result))\r\n"],"sourceRoot":""}