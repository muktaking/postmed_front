{"version":3,"sources":["components/shared/spinner/spinner.js","components/routine/addASyllabus.js","components/routine/singleRoutineCard.js","components/routine/showRoutine.js","container/routine/index.js"],"names":["contentCenter","position","top","left","zIndex","SpinnerCustom","animation","role","variant","style","AddASyllabus","defaultValue","useState","loading","setLoading","msg","setMsg","Date","startDate","setStartDate","endDate","setEndDate","courses","setCourses","ref","useRef","courseRef","useEffect","axios","get","process","then","response","data","catch","e","console","log","show","onClose","Header","className","Body","selected","length","onChange","date","showTimeSelect","minDate","dateFormat","size","Group","controlId","Label","Control","as","rows","value","map","course","id","title","onClick","put","syllabus","current","courseId","res","message","post","RenderTooltip","React","forwardRef","props","Tooltip","Button","Axios","delete","SingleRoutineCard","showRaw","getStatus","setShowModal","setEditSyllabusValue","key","data-date","moment","format","Badge","OverlayTrigger","trigger","placement","overlay","start","end","getTime","ShowRoutine","routine","setRoutine","showModal","editSyllabusVale","modalClose","Modal","onHide","closeButton","Title","Footer","Toast","right","maxHeight","overflowY","Tabs","defaultActiveKey","ind","Tab","eventKey","filter","to","pathname","state","fromRoutine","bottom","Routine","sm"],"mappings":"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","file":"static/js/47.dda38878.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nconst contentCenter = {\r\n  //styling to display server response in middle of screen\r\n  position: 'fixed',\r\n  top: '45vh',\r\n  left: '50%',\r\n  zIndex: '10000000000'\r\n}\r\n\r\nexport default function SpinnerCustom() {\r\n  return (\r\n    <Spinner\r\n      animation='grow'\r\n      role='status'\r\n      variant='dark'\r\n      style={contentCenter}\r\n    ></Spinner>\r\n  )\r\n}\r\n","import axios from 'axios'\r\nimport React, { useEffect, useRef, useState } from 'react'\r\nimport { Button, Form, Toast } from 'react-bootstrap'\r\nimport DatePicker from 'react-datepicker'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport { FaRegCalendarAlt } from 'react-icons/fa'\r\nimport Spinner from '../shared/spinner/spinner'\r\n\r\nexport default function AddASyllabus({ defaultValue = [], ...props }) {\r\n  const [loading, setLoading] = useState(false)\r\n  const [msg, setMsg] = useState(null)\r\n  const [startDate, setStartDate] = useState(new Date())\r\n  const [endDate, setEndDate] = useState(new Date())\r\n  const [courses, setCourses] = useState([])\r\n  const ref = useRef()\r\n  const courseRef = useRef()\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(process.env.REACT_APP_SITE_URL + '/courses/auth')\r\n      .then((response) => {\r\n        setCourses(response.data)\r\n      })\r\n      .catch((e) => console.log(e))\r\n  }, [])\r\n\r\n  function submitHandler() {\r\n    setLoading(true)\r\n    if (defaultValue.length > 0) {\r\n      axios\r\n        .put(process.env.REACT_APP_SITE_URL + '/routine', {\r\n          id: defaultValue[0],\r\n          startDate: defaultValue[1],\r\n          endDate: defaultValue[2],\r\n          syllabus: ref.current.value,\r\n          courseId: courseRef.current.value\r\n        })\r\n        .then((res) => {\r\n          setLoading(false)\r\n          setMsg(res.data.message)\r\n        })\r\n        .catch((e) => {\r\n          setLoading(false)\r\n          setMsg(e.message)\r\n        })\r\n      return\r\n    }\r\n    axios\r\n      .post(process.env.REACT_APP_SITE_URL + '/routine', {\r\n        startDate,\r\n        endDate,\r\n        syllabus: ref.current.value,\r\n        courseId: courseRef.current.value\r\n      })\r\n      .then((res) => {\r\n        setLoading(false)\r\n        setMsg(res.data.message)\r\n      })\r\n      .catch((e) => {\r\n        setLoading(false)\r\n        setMsg(e.message)\r\n      })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {loading && <Spinner />}\r\n      <Toast\r\n        show={msg}\r\n        onClose={() => {\r\n          setMsg(null)\r\n        }}\r\n        style={{ position: 'absolute' }}\r\n      >\r\n        <Toast.Header>\r\n          <strong className='mr-auto'>Message</strong>\r\n        </Toast.Header>\r\n        <Toast.Body>{msg}</Toast.Body>\r\n      </Toast>\r\n      <h4>Routine Builder</h4>\r\n      <div className='d-flex'>\r\n        <div className='my-3 mr-5'>\r\n          <p>Start Date</p>\r\n          <DatePicker\r\n            selected={defaultValue.length > 0 ? defaultValue[1] : startDate}\r\n            onChange={(date) => {\r\n              if (defaultValue.length > 0) {\r\n                defaultValue[1] = date\r\n              }\r\n              setStartDate(date)\r\n            }}\r\n            showTimeSelect\r\n            minDate={new Date()}\r\n            dateFormat='yyyy-MMM-dd, hh:mm a'\r\n          />\r\n          <FaRegCalendarAlt size='1.7rem' />\r\n        </div>\r\n        <div className='my-3'>\r\n          <p>End Date</p>\r\n          <DatePicker\r\n            selected={defaultValue.length > 0 ? defaultValue[2] : endDate}\r\n            onChange={(date) => {\r\n              if (defaultValue.length > 0) {\r\n                defaultValue[2] = date\r\n              }\r\n              setEndDate(date)\r\n            }}\r\n            showTimeSelect\r\n            minDate={new Date()}\r\n            dateFormat='yyyy-MMM-dd, hh:mm a'\r\n          />\r\n          <FaRegCalendarAlt size='1.7rem' />\r\n        </div>\r\n      </div>\r\n\r\n      <Form.Group controlId='exampleForm.ControlTextarea1'>\r\n        <Form.Label>Syllabus</Form.Label>\r\n        <Form.Control\r\n          as='textarea'\r\n          ref={ref}\r\n          rows={2}\r\n          defaultValue={defaultValue.length > 0 ? defaultValue[3] : ''}\r\n        />\r\n      </Form.Group>\r\n\r\n      <Form.Group controlId='exampleForm.ControlSelect1'>\r\n        <Form.Label>Select A Course</Form.Label>\r\n        <Form.Control\r\n          as='select'\r\n          ref={courseRef}\r\n          value={defaultValue.length > 0 ? defaultValue[4] : ''}\r\n        >\r\n          {courses.map((course) => (\r\n            <option value={course.id}>{course.title}</option>\r\n          ))}\r\n        </Form.Control>\r\n      </Form.Group>\r\n\r\n      <Button variant='primary' onClick={submitHandler}>\r\n        Submit\r\n      </Button>\r\n    </div>\r\n  )\r\n}\r\n","import Axios from 'axios'\r\n//import moment from 'moment'\r\nimport * as moment from 'dayjs'\r\nimport React from 'react'\r\nimport { Badge, Button, OverlayTrigger, Tooltip } from 'react-bootstrap'\r\n\r\nconst RenderTooltip = React.forwardRef(({ id, setMsg, ...props }, ref) => (\r\n  <Tooltip ref={ref} id='button-tooltip' {...props}>\r\n    <p>Are you sure to delete this syllabus.</p>\r\n    <Button\r\n      variant='danger'\r\n      onClick={() => {\r\n        Axios.delete(process.env.REACT_APP_SITE_URL + '/routine/' + id)\r\n          .then((res) => {\r\n            console.log(res)\r\n            setMsg(res.data.message)\r\n          })\r\n          .catch((e) => {\r\n            console.log(e)\r\n            setMsg(e.message)\r\n          })\r\n      }}\r\n    >\r\n      Yes\r\n    </Button>\r\n  </Tooltip>\r\n))\r\n\r\nexport default function SingleRoutineCard({\r\n  syllabus,\r\n  showRaw,\r\n  getStatus,\r\n  setShowModal,\r\n  setEditSyllabusValue,\r\n  setMsg\r\n}) {\r\n  return (\r\n    <li\r\n      key={syllabus.id}\r\n      className='event'\r\n      data-date={moment(syllabus.startDate).format('DD-MMM-YYYY, h:mm a')}\r\n    >\r\n      <p>{syllabus.syllabus}</p>\r\n      <p className='text-danger'>\r\n        <Badge variant='info' className='mr-2'>\r\n          Status:{' '}\r\n        </Badge>\r\n        {getStatus(syllabus.startDate, syllabus.endDate)}\r\n      </p>\r\n      <p className='text-secondary'>\r\n        Exam Starts: {moment(syllabus.startDate).format('DD-MMM-YYYY, h:mm a')}\r\n      </p>\r\n      {showRaw && (\r\n        <>\r\n          <p className='text-secondary'>\r\n            Exam ends: {moment(syllabus.endDate).format('DD-MMM-YYYY, h:mm a')}\r\n          </p>\r\n          <Button\r\n            variant='warning'\r\n            onClick={() => {\r\n              setShowModal(true)\r\n              setEditSyllabusValue([\r\n                syllabus.id,\r\n                new Date(syllabus.startDate),\r\n                new Date(syllabus.endDate),\r\n                syllabus.syllabus,\r\n                syllabus.courseId\r\n              ])\r\n            }}\r\n          >\r\n            Edit\r\n          </Button>\r\n          <OverlayTrigger\r\n            trigger='click'\r\n            placement='right'\r\n            overlay={<RenderTooltip setMsg={setMsg} id={syllabus.id} />}\r\n          >\r\n            <Button variant='danger' className='ml-2'>\r\n              Delete\r\n            </Button>\r\n          </OverlayTrigger>\r\n        </>\r\n      )}\r\n    </li>\r\n  )\r\n}\r\n","import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Button, Modal, Tab, Tabs, Toast } from 'react-bootstrap'\r\nimport { GrUpdate } from 'react-icons/gr'\r\nimport { Link } from 'react-router-dom'\r\nimport AddASyllabus from './addASyllabus'\r\nimport SingleRoutineCard from './singleRoutineCard'\r\n\r\nexport function getStatus(start, end) {\r\n  const date = new Date()\r\n  const startDate = new Date(start)\r\n  const endDate = new Date(end)\r\n\r\n  if (\r\n    startDate.getTime() <= date.getTime() &&\r\n    endDate.getTime() >= date.getTime()\r\n  ) {\r\n    return 'Ongoing'\r\n  }\r\n\r\n  if (endDate.getTime() <= date.getTime()) {\r\n    return 'Past'\r\n  }\r\n\r\n  return 'Upcoming'\r\n}\r\n\r\nexport default function ShowRoutine({ showRaw, id, title }) {\r\n  const [routine, setRoutine] = useState([])\r\n  const [showModal, setShowModal] = useState(false)\r\n  const [msg, setMsg] = useState(null)\r\n  const [editSyllabusVale, setEditSyllabusValue] = useState([])\r\n  const [courses, setCourses] = useState([])\r\n\r\n  const modalClose = () => {\r\n    setShowModal(false)\r\n  }\r\n\r\n  const handleUpdate = () => {\r\n    axios\r\n      .get(process.env.REACT_APP_SITE_URL + '/routine/raw')\r\n      .then((res) => {\r\n        setRoutine(res.data)\r\n      })\r\n      .catch()\r\n  }\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(process.env.REACT_APP_SITE_URL + '/courses/')\r\n      .then((res) => {\r\n        setCourses(res.data)\r\n      })\r\n      .catch((e) => console.log(e))\r\n\r\n    axios\r\n      .get(\r\n        process.env.REACT_APP_SITE_URL +\r\n          '/routine' +\r\n          (showRaw ? '/raw' : '/course/' + id)\r\n      )\r\n      .then((res) => {\r\n        setRoutine(res.data)\r\n      })\r\n      .catch()\r\n  }, [showRaw])\r\n\r\n  return (\r\n    <div className='container'>\r\n      <Modal show={showModal} onHide={modalClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Edit The Syllabus</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <AddASyllabus defaultValue={editSyllabusVale} />\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant='secondary' onClick={modalClose}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n      <div className='row'>\r\n        <div className='col-md-12'>\r\n          <div className='card'>\r\n            <div className='card-body'>\r\n              {showRaw && (\r\n                <>\r\n                  <Toast\r\n                    show={msg}\r\n                    onClose={() => {\r\n                      setMsg(null)\r\n                    }}\r\n                    style={{ position: 'absolute', right: '10px', top: '10px' }}\r\n                  >\r\n                    <Toast.Header>\r\n                      <strong className='mr-auto'>Message</strong>\r\n                    </Toast.Header>\r\n                    <Toast.Body>{msg}</Toast.Body>\r\n                  </Toast>\r\n                  <h4 className='card-title'>Raw Routine</h4>\r\n                  <Button variant='light' onClick={handleUpdate}>\r\n                    <GrUpdate size={'1.3rem'} />\r\n                  </Button>\r\n                </>\r\n              )}\r\n              <div\r\n                id='content'\r\n                style={{ maxHeight: '350px', overflowY: 'scroll' }}\r\n              >\r\n                {' '}\r\n                {showRaw ? (\r\n                  <Tabs defaultActiveKey='0' id='uncontrolled-tab-example'>\r\n                    {courses.map((course, ind) => (\r\n                      <Tab eventKey={ind} title={course.title}>\r\n                        {\r\n                          <ul className='timeline mt-3'>\r\n                            {routine\r\n                              .filter(\r\n                                (syllabus) => syllabus.courseId === course.id\r\n                              )\r\n                              .map((syllabus) => (\r\n                                <SingleRoutineCard\r\n                                  syllabus={syllabus}\r\n                                  showRaw={showRaw}\r\n                                  getStatus={getStatus}\r\n                                  setShowModal={setShowModal}\r\n                                  setEditSyllabusValue={setEditSyllabusValue}\r\n                                  setMsg={setMsg}\r\n                                />\r\n                              ))}\r\n                          </ul>\r\n                        }\r\n                      </Tab>\r\n                    ))}\r\n                  </Tabs>\r\n                ) : (\r\n                  <div>\r\n                    <p className='text-muted'>\r\n                      *** Only Ongoing & Upcoming exam's routine is showed here.\r\n                      For all click details. ***\r\n                    </p>\r\n                    <ul className='timeline'>\r\n                      {routine\r\n                        //filtering to get the onging and future routine here\r\n                        .filter((syllabus, ind) => {\r\n                          console.log(syllabus)\r\n                          if (\r\n                            new Date(syllabus.endDate).getTime() <=\r\n                            new Date().getTime()\r\n                          ) {\r\n                            return false\r\n                          }\r\n                          return true\r\n                        })\r\n                        .map((syllabus) => (\r\n                          <SingleRoutineCard\r\n                            key={syllabus.id}\r\n                            syllabus={syllabus}\r\n                            showRaw={showRaw}\r\n                            getStatus={getStatus}\r\n                            setShowModal={setShowModal}\r\n                            setEditSyllabusValue={setEditSyllabusValue}\r\n                            setMsg={setMsg}\r\n                          />\r\n                        ))}\r\n                    </ul>\r\n                    <Link\r\n                      to={{\r\n                        pathname: '/print',\r\n                        state: { fromRoutine: true, routine, title }\r\n                      }}\r\n                      style={{\r\n                        position: 'absolute',\r\n                        bottom: '-15px',\r\n                        right: '50px'\r\n                      }}\r\n                    >\r\n                      <Button>Details</Button>\r\n                    </Link>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Col, Row } from 'react-bootstrap'\r\nimport AddASyllabus from '../../components/routine/addASyllabus'\r\nimport ShowSyllabus from '../../components/routine/showRoutine'\r\n\r\nexport default function Routine() {\r\n  return (\r\n    <Row>\r\n      <Col sm={4}>\r\n        <AddASyllabus />\r\n      </Col>\r\n      <Col sm={8}>\r\n        <ShowSyllabus showRaw={true} />\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n"],"sourceRoot":""}