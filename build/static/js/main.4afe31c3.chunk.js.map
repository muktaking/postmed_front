{"version":3,"sources":["container/routePages.jsx","App.jsx","store/index.js","index.js","store/middleware/index.js","utils/canActivate.js","store/auth.js","store/api.js","store/exams.js","store/question.js","store/category.js","store/courses.js","store/examPaper.js","store/user.js","utils/errorHandler.js","store/dashboard.js","utils/setAuthorizationToken.js"],"names":["NotFoundPage","lazy","pMinDelay","Landing","InnerContent","Login","LogoutPage","Signup","Reset","override","css","connect","state","token","auth","isAuthenticated","props","routes","fallback","path","component","exact","render","canActivate","rolePermitted","student","to","mentor","moderator","coordinator","App","this","onTryAutologin","Component","dispatch","checkAuthState","appReducer","combineReducers","api","apiReducer","authReducer","user","userReducer","category","categoryReducer","question","questionReducer","examPaper","examPaperReducer","exams","examsReducer","dashboard","dashboardReducer","courses","coursesReducer","rootReducer","action","type","undefined","store","configureStore","reducer","rootReducers","middleware","getDefaultMiddleware","getState","next","a","async","apiCallBegun","payload","url","method","data","config","onStart","onSuccess","onError","sendToken","setAuthorizationToken","axios","request","baseURL","process","response","apiCallSuccess","authSuccess","expirationDate","Date","getTime","expireIn","localStorage","setItem","accessToken","id","checkAuthTimeOut","errorHandler","apiCallFail","ReactDOM","locale","defaultLocale","messages","document","getElementById","guest","admin","roleArray","roleToString","num","identityStatusToString","loginProviderToString","role","jwtDecode","slice","createSlice","name","initialState","loading","userId","error","reducers","authStart","authFail","logout","actions","username","password","authData","expirationTime","setTimeout","getItem","logoutLoader","removeItem","result","apiCallReset","questions","questionIdsByOrder","examId","singleQuestionMark","singleStemMark","penaltyMark","timeLimit","examResult","totalMark","totalScore","totalPenaltyMark","totalScorePercentage","timeTakenToComplete","rank","exam","examError","disableQuestions","resetExamResult","getAllExams","getExamById","forEach","e","push","getFreeExamById","getExamError","resetExamError","postExamById","resultArray","examRankById","postExamError","disableQuestionsAdd","resetDisableQuestions","getAllExamsLoader","getExamByIdLoader","getFreeExamByIdLoader","postExamByIdLoader","postFreeExamByIdLoader","examRankByIdLoader","courseId","resetExamResultLoader","getQuestions","loadingStart","getResponse","resetResponse","resetResponseLoader","getQuestionLoader","getQuestionByCategoryLoader","createQuestionLoader","questionData","FormData","Object","keys","key","append","headers","editQuestionLoader","deleteQuestionLoader","categories","catHierarchy","getCategory","fetchCategory","createCategory","coursesEnrolledByStu","expectedEnrolledStuIds","getCourses","getCoursesEnrolledByStu","fetchCourseLoader","fetchCourseEnrolledByStuLoader","ids","success","selectedQuestions","onLoading","onLoadingLoader","postExamProfile","examSpec","firstName","lastName","userName","email","mobile","userFrom","now","address","avatar","gender","faculty","institution","getUser","createdAt","getUserLoader","responseData","statusCode","message","v","value","property","values","constraints","toString","featuredExams","userExamInfo","totalExam","upcomingExam","userExamStat","dashboardStudent","userExamStatLoader","defaults","common"],"mappings":"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","file":"static/js/main.4afe31c3.chunk.js","sourcesContent":["import { css } from '@emotion/core'\r\nimport pMinDelay from 'p-min-delay'\r\nimport React, { lazy, Suspense } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect, Route, Switch } from 'react-router-dom'\r\nimport ClimbingBoxLoader from 'react-spinners/ClimbingBoxLoader'\r\nimport { canActivate, rolePermitted } from '../utils/canActivate'\r\n//import NotFoundPage from \"./404\";\r\nconst mDelay = 500\r\n\r\nconst NotFoundPage = lazy(() => pMinDelay(import('./404'), mDelay))\r\n//import Landing from \"./landing/landing\";\r\nconst Landing = lazy(() => pMinDelay(import('./landing/landing'), mDelay))\r\n//import InnerContent from \"./layout\";\r\nconst InnerContent = lazy(() => pMinDelay(import('./layout'), mDelay))\r\n//import Login from \"./registration/login\";\r\nconst Login = lazy(() => pMinDelay(import('./registration/login'), mDelay))\r\n//import LogoutPage from \"./registration/logout\";\r\nconst LogoutPage = lazy(() =>\r\n  pMinDelay(import('./registration/logout'), mDelay)\r\n)\r\n//import Signup from \"./registration/signup\";\r\nconst Signup = lazy(() => pMinDelay(import('./registration/signup'), mDelay))\r\n\r\nconst Reset = lazy(() => pMinDelay(import('./registration/reset'), mDelay))\r\n\r\nconst override = css`\r\n  display: block;\r\n  margin: 45vh auto;\r\n  bordeClimbingBoxLoader\r\n  r-color: red;\r\n`\r\n\r\nconst RoutePages = (props) => {\r\n  // const tokenRole = props.token ? jwtDecode(props.token).role : -1;\r\n  let routes = (\r\n    <Suspense fallback={<ClimbingBoxLoader css={override} />}>\r\n      <Switch>\r\n        <Route path='/login' component={Login} />\r\n        <Route path='/signup' component={Signup} />\r\n        <Route path='/reset/:id' component={Reset} />\r\n        <Route path='/exams' exact component={InnerContent} />\r\n        {/* <Route path='/exams/:id' exact component={InnerContent} /> */}\r\n        <Route path='/courses' exact component={InnerContent} />\r\n        <Route path='/exams/category/:id' exact component={InnerContent} />\r\n        <Route path='/exams/free/:id' component={InnerContent} />\r\n        <Route path='/result' component={InnerContent} />\r\n        <Route path='/result/rank/:id' component={InnerContent} />\r\n        <Route path='/help' component={InnerContent} />\r\n        <Route path='/error' render={(props) => <NotFoundPage {...props} />} />\r\n        <Route path='/' exact component={Landing} />\r\n        <Route render={(props) => <NotFoundPage {...props} />} />\r\n      </Switch>\r\n    </Suspense>\r\n  )\r\n  if (\r\n    props.isAuthenticated &&\r\n    canActivate(rolePermitted.student, props.token)\r\n  ) {\r\n    routes = (\r\n      <Suspense fallback={<ClimbingBoxLoader css={override} />}>\r\n        <Switch>\r\n          <Route path='/dashboard' component={InnerContent} />\r\n          <Route path='/courses' component={InnerContent} />\r\n          <Route path='/reports' component={InnerContent} />\r\n          <Route path='/profile' component={InnerContent} />\r\n          <Route path='/exams' component={InnerContent} />\r\n          <Route path='/exams/:id' component={InnerContent} />\r\n          <Route path='/result' component={InnerContent} />\r\n          <Route path='/rank' component={InnerContent} />\r\n          <Route path='/settings' component={InnerContent} />\r\n          <Route path='/print' component={InnerContent} />\r\n          <Route path='/logout' component={LogoutPage} />\r\n          <Route path='/help' component={InnerContent} />\r\n          <Route path='/' exact component={Landing} />\r\n          <Redirect to='/dashboard' />\r\n        </Switch>\r\n      </Suspense>\r\n    )\r\n  }\r\n\r\n  if (canActivate(rolePermitted.mentor, props.token)) {\r\n    routes = (\r\n      <Suspense fallback={<ClimbingBoxLoader css={override} />}>\r\n        <Switch>\r\n          <Route path='/dashboard' component={InnerContent} />\r\n          <Route path='/profile' component={InnerContent} />\r\n          <Route path='/question' component={InnerContent} />\r\n          {/* <Route path='/exambuilder' component={InnerContent} /> */}\r\n          <Route path='/settings' component={InnerContent} />\r\n          <Route path='/print' component={InnerContent} />\r\n          <Route path='/logout' component={LogoutPage} />\r\n          <Route path='/help' component={InnerContent} />\r\n          <Route path='/' exact component={Landing} />\r\n          <Redirect to='/dashboard' />\r\n        </Switch>\r\n      </Suspense>\r\n    )\r\n  }\r\n\r\n  if (canActivate(rolePermitted.moderator, props.token)) {\r\n    routes = (\r\n      <Suspense fallback={<ClimbingBoxLoader css={override} />}>\r\n        <Switch>\r\n          <Route path='/dashboard' component={InnerContent} />\r\n          <Route path='/profile' component={InnerContent} />\r\n          <Route path='/category' component={InnerContent} />\r\n          <Route path='/question' component={InnerContent} />\r\n          <Route path='/routine' exact component={InnerContent} />\r\n          <Route path='/exambuilder' component={InnerContent} />\r\n          <Route path='/settings' component={InnerContent} />\r\n          <Route path='/print' component={InnerContent} />\r\n          <Route path='/logout' component={LogoutPage} />\r\n          <Route path='/help' component={InnerContent} />\r\n          <Route path='/' exact component={Landing} />\r\n          <Redirect to='/dashboard' />\r\n        </Switch>\r\n      </Suspense>\r\n    )\r\n  }\r\n\r\n  if (canActivate(rolePermitted.coordinator, props.token)) {\r\n    routes = (\r\n      <Suspense fallback={<ClimbingBoxLoader css={override} />}>\r\n        <Switch>\r\n          <Route path='/dashboard' component={InnerContent} />\r\n          <Route path='/profile' component={InnerContent} />\r\n          <Route path='/category' component={InnerContent} />\r\n          <Route path='/routine' exact component={InnerContent} />\r\n          <Route path='/question' component={InnerContent} />\r\n          <Route path='/coursebuilder' component={InnerContent} />\r\n          <Route path='/exambuilder' component={InnerContent} />\r\n          <Route path='/examedit' component={InnerContent} />\r\n          <Route path='/settings' component={InnerContent} />\r\n          <Route path='/print' component={InnerContent} />\r\n          <Route path='/logout' component={LogoutPage} />\r\n          <Route path='/help' component={InnerContent} />\r\n          <Route path='/notificationbuilder' component={InnerContent} />\r\n          <Route path='/' exact component={Landing} />\r\n          <Redirect to='/dashboard' />\r\n        </Switch>\r\n      </Suspense>\r\n    )\r\n  }\r\n\r\n  return routes\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    token: state.auth.token,\r\n    isAuthenticated: state.auth.token !== null\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(RoutePages)\r\n//export default RoutePages;\r\n","/* eslint-disable no-undef */\r\n/* eslint-disable react/prop-types */\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport './assets/scss/style.scss'\r\nimport RoutePages from './container/routePages'\r\nimport { checkAuthState } from './store/auth'\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.onTryAutologin()\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <BrowserRouter>\r\n          <RoutePages />\r\n        </BrowserRouter>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onTryAutologin: () => {\r\n      dispatch(checkAuthState())\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(App)\r\n","import { combineReducers } from 'redux'\r\nimport apiReducer from './api'\r\nimport authReducer from './auth'\r\nimport categoryReducer from './category'\r\nimport coursesReducer from './courses'\r\nimport dashboardReducer from './dashboard'\r\nimport examPaperReducer from './examPaper'\r\nimport examsReducer from './exams'\r\nimport questionReducer from './question'\r\nimport userReducer from './user'\r\n\r\nconst appReducer = combineReducers({\r\n  api: apiReducer,\r\n  auth: authReducer,\r\n  user: userReducer,\r\n  category: categoryReducer,\r\n  question: questionReducer,\r\n  examPaper: examPaperReducer,\r\n  exams: examsReducer,\r\n  dashboard: dashboardReducer,\r\n  courses: coursesReducer\r\n})\r\n\r\nexport const rootReducer = (state, action) => {\r\n  if (action.type === 'RESET_APP') {\r\n    state = undefined\r\n  }\r\n  return appReducer(state, action)\r\n}\r\n\r\nexport default rootReducer\r\n","/* eslint-disable prettier/prettier */\n/* eslint-disable no-undef */\n\nimport { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { IntlProvider } from \"react-intl\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport Bangla from \"./lang/bn.json\";\nimport rootReducers from \"./store\";\nimport { api } from \"./store/middleware/index\";\n\nconst store = configureStore({\n  reducer: rootReducers,\n  middleware: [...getDefaultMiddleware(), api],\n});\n\nReactDOM.render(\n  <Provider store={store}>\n    <IntlProvider locale={process.env.REACT_APP_LANG} defaultLocale={process.env.REACT_APP_DEFAULT_LANG}  messages={process.env.REACT_APP_LANG === 'bn' && Bangla}>\n      <App />\n    </IntlProvider>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","/*\r\n\r\nit is an simple api middleware to generalize get and send data to server\r\n\r\n\r\n\r\n*/\r\n\r\nimport axios from 'axios'\r\nimport errorHandler from '../../utils/errorHandler'\r\nimport setAuthorizationToken from '../../utils/setAuthorizationToken'\r\nimport { apiCallBegun, apiCallFail, apiCallSuccess } from '../api'\r\nimport { authSuccess, checkAuthTimeOut } from '../auth'\r\n\r\n//api middleware function\r\n\r\nexport const api = ({ getState, dispatch }) => (next) => async (action) => {\r\n  if (action.type !== apiCallBegun.type) return next(action)\r\n\r\n  const {\r\n    url,\r\n    method,\r\n    data,\r\n    config,\r\n    onStart,\r\n    onSuccess,\r\n    onError,\r\n    sendToken\r\n  } = action.payload\r\n\r\n  if (onStart) dispatch({ type: onStart })\r\n  next(action)\r\n\r\n  try {\r\n    if (sendToken) {\r\n      setAuthorizationToken(getState().auth.token)\r\n    }\r\n    // let imageData;\r\n    // if (data && data.image) {\r\n    //   imageData = new FormData();\r\n    //   Object.keys().forEach((e) => {\r\n    //     imageData.append(e, data[e]);\r\n    //   });\r\n    //   console.log(imageData);\r\n    //   data = imageData;\r\n    // }\r\n\r\n    const response = await axios.request({\r\n      baseURL: process.env.REACT_APP_SITE_URL,\r\n      url,\r\n      method,\r\n      data: data,\r\n      config\r\n    })\r\n\r\n    dispatch(apiCallSuccess(response.data))\r\n\r\n    if (onSuccess) {\r\n      if (onSuccess === authSuccess.type) {\r\n        const expirationDate = new Date(\r\n          new Date().getTime() + response.data.expireIn * 1000\r\n        )\r\n        localStorage.setItem('jwtToken', response.data.accessToken)\r\n        localStorage.setItem('expirationDate', expirationDate)\r\n        localStorage.setItem('userId', response.data.id)\r\n        dispatch(checkAuthTimeOut(response.data.expireIn))\r\n        dispatch({ type: authSuccess.type, payload: response.data })\r\n      } else dispatch({ type: onSuccess, payload: response.data })\r\n    }\r\n  } catch (error) {\r\n    const response = errorHandler(error)\r\n    dispatch(apiCallFail(response))\r\n    if (onError) dispatch({ type: onError, payload: response })\r\n  }\r\n}\r\n","import jwtDecode from 'jwt-decode'\r\n\r\nexport const rolePermitted = {\r\n  guest: 0,\r\n  student: 1,\r\n  mentor: 2,\r\n  moderator: 3,\r\n  coordinator: 4,\r\n  admin: 5\r\n}\r\n\r\nexport const roleArray = [\r\n  'Student',\r\n  'Mentor',\r\n  'Moderator',\r\n  'Coordinator',\r\n  'Admin'\r\n]\r\n\r\nexport function roleToString(num) {\r\n  switch (num) {\r\n    case 1:\r\n      return 'Student'\r\n    case 2:\r\n      return 'Mentor'\r\n    case 3:\r\n      return 'Modarator'\r\n    case 4:\r\n      return 'Coordinator'\r\n    case 5:\r\n      return 'Admin'\r\n\r\n    default:\r\n      return 'Guest'\r\n  }\r\n}\r\n\r\nexport function identityStatusToString(num) {\r\n  switch (num) {\r\n    case 0:\r\n      return 'Unchecked'\r\n    case 1:\r\n      return 'Checked'\r\n    case 2:\r\n      return 'Unrequired'\r\n    default:\r\n      return 'Unrequired'\r\n  }\r\n}\r\n\r\nexport function loginProviderToString(num) {\r\n  switch (num) {\r\n    case 0:\r\n      return 'Local'\r\n    case 1:\r\n      return 'Facebook'\r\n    default:\r\n      return 'Local'\r\n  }\r\n}\r\n\r\nexport const canActivate = (role, token) => {\r\n  const tokenRole = token ? jwtDecode(token).role : -1\r\n  return tokenRole >= role\r\n}\r\n","import { createSlice } from '@reduxjs/toolkit'\r\nimport { apiCallBegun } from './api'\r\n\r\nconst slice = createSlice({\r\n  name: 'auth',\r\n  initialState: {\r\n    loading: false,\r\n    token: null,\r\n    userId: null,\r\n    role: null,\r\n    error: null\r\n  },\r\n  reducers: {\r\n    authStart: (auth) => {\r\n      auth.loading = true\r\n    },\r\n    authSuccess: (auth, action) => {\r\n      auth.loading = false\r\n      auth.token = action.payload.accessToken\r\n      auth.userId = action.payload.id\r\n      auth.role = action.payload.role\r\n      auth.expireIn = action.payload.expireIn\r\n      auth.error = null\r\n    },\r\n    authFail: (auth, action) => {\r\n      auth.loading = false\r\n      auth.error = action.payload\r\n    },\r\n    logout: (auth) => {\r\n      auth.token = null\r\n      auth.userId = null\r\n      auth.expireIn = null\r\n    }\r\n  }\r\n})\r\n\r\nexport const { authStart, authSuccess, authFail, logout } = slice.actions\r\n\r\nexport default slice.reducer\r\n\r\n//declaring some variable\r\n\r\nconst url = '/auth/login'\r\nconst method = 'post'\r\n\r\nexport const auth = (username, password) => (dispatch) => {\r\n  const authData = {\r\n    username,\r\n    password\r\n  }\r\n  dispatch(\r\n    apiCallBegun({\r\n      url,\r\n      method,\r\n      data: authData,\r\n      onStart: authStart.type,\r\n      onSuccess: authSuccess.type,\r\n      onError: authFail.type\r\n    })\r\n  )\r\n}\r\nexport const autoAuth = () => (dispatch) => {\r\n  const token = localStorage.getItem('jwtToken')\r\n  if (token) {\r\n    dispatch(\r\n      authSuccess({\r\n        token\r\n      })\r\n    )\r\n  }\r\n}\r\n\r\nexport const checkAuthTimeOut = (expirationTime) => (dispatch) => {\r\n  setTimeout(() => {\r\n    dispatch(logout())\r\n  }, expirationTime * 1000)\r\n}\r\n\r\nexport const checkAuthState = () => (dispatch) => {\r\n  const token = localStorage.getItem('jwtToken')\r\n  if (!token) {\r\n    dispatch(logout)\r\n  } else {\r\n    const expirationDate = new Date(localStorage.getItem('expirationDate'))\r\n    if (expirationDate > new Date()) {\r\n      const userId = localStorage.getItem('userId')\r\n      dispatch(authSuccess({ accessToken: token, id: userId }))\r\n      dispatch(\r\n        checkAuthTimeOut(\r\n          (expirationDate.getTime() - new Date().getTime()) / 1000\r\n        )\r\n      )\r\n    } else {\r\n      dispatch(logout())\r\n    }\r\n  }\r\n}\r\n\r\nexport const logoutLoader = () => (dispatch) => {\r\n  localStorage.removeItem('expirationDate')\r\n  localStorage.removeItem('userId')\r\n  localStorage.removeItem('jwtToken')\r\n  dispatch(logout())\r\n}\r\n","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst slice = createSlice({\r\n  name: 'api',\r\n  initialState: { result: null, error: null },\r\n  reducers: {\r\n    apiCallBegun: (api, action) => {\r\n      //api.loading = true;\r\n    },\r\n    apiCallSuccess: (api, action) => {\r\n      //api.loading = false;\r\n      api.result = action.payload\r\n    },\r\n    apiCallFail: (api, action) => {\r\n      api.error = action.payload\r\n    },\r\n    apiCallReset: (api) => {\r\n      api.result = null\r\n      api.error = null\r\n    }\r\n  }\r\n})\r\n\r\nexport const {\r\n  apiCallBegun,\r\n  apiCallSuccess,\r\n  apiCallFail,\r\n  apiCallReset\r\n} = slice.actions\r\n\r\nexport default slice.reducer\r\n","import { createSlice } from '@reduxjs/toolkit'\r\nimport { apiCallBegun } from './api'\r\n\r\nconst slice = createSlice({\r\n  name: 'Exams',\r\n  initialState: {\r\n    id: null,\r\n    questions: [],\r\n    questionIdsByOrder: [],\r\n    examId: null,\r\n    singleQuestionMark: null,\r\n    singleStemMark: null,\r\n    penaltyMark: null,\r\n    timeLimit: null,\r\n    examResult: null,\r\n    totalMark: null,\r\n    totalScore: null,\r\n    totalPenaltyMark: null,\r\n    totalScorePercentage: null,\r\n    timeTakenToComplete: null,\r\n    rank: null,\r\n    exam: null, // store the individual exam\r\n    error: null,\r\n    examError: null,\r\n    exams: [], // store the all exam lists\r\n    disableQuestions: []\r\n  },\r\n  reducers: {\r\n    resetExamResult: (state) => {\r\n      state.examId = null\r\n      state.examResult = null\r\n      state.totalMark = null\r\n      state.totalScore = null\r\n      state.totalPenaltyMark = null\r\n      state.totalScorePercentage = null\r\n      state.timeTakenToComplete = null\r\n      state.timeLimit = null\r\n      state.rank = null\r\n      state.exam = null\r\n      state.error = null\r\n      state.questionIdsByOrder = []\r\n      state.disableQuestions = []\r\n    },\r\n    getAllExams: (state, action) => {\r\n      state.exams = action.payload\r\n    },\r\n    getExamById: (state, action) => {\r\n      state.questions = action.payload.questions\r\n      action.payload.questions.forEach((e) => {\r\n        state.questionIdsByOrder.push(e.id)\r\n      })\r\n      state.id = action.payload.exam.id\r\n      state.singleQuestionMark = action.payload.exam.singleQuestionMark\r\n      state.singleStemMark = action.payload.exam.singleStemMark\r\n      state.timeLimit = action.payload.exam.timeLimit\r\n      state.penaltyMark = action.payload.exam.penaltyMark\r\n    },\r\n    getFreeExamById: (state, action) => {\r\n      state.questions = action.payload.questions\r\n      action.payload.questions.forEach((e) => {\r\n        state.questionIdsByOrder.push(e.id)\r\n      })\r\n      state.id = action.payload.exam.id\r\n      state.singleQuestionMark = action.payload.exam.singleQuestionMark\r\n      state.singleStemMark = action.payload.exam.singleStemMark\r\n      state.timeLimit = action.payload.exam.timeLimit\r\n      state.penaltyMark = action.payload.exam.penaltyMark\r\n    },\r\n    getExamError: (state, action) => {\r\n      state.examError = action.payload\r\n    },\r\n    resetExamError: (state) => {\r\n      state.examError = null\r\n    },\r\n    postExamById: (state, action) => {\r\n      state.examId = action.payload.examId\r\n      state.examResult = action.payload.resultArray\r\n      state.totalMark = action.payload.totalMark\r\n      state.totalScore = action.payload.totalScore\r\n      state.totalPenaltyMark = action.payload.totalPenaltyMark\r\n      state.totalScorePercentage = action.payload.totalScorePercentage\r\n      state.timeTakenToComplete = action.payload.timeTakenToComplete\r\n    },\r\n    examRankById: (state, action) => {\r\n      state.rank = action.payload.rank\r\n      state.exam = action.payload.exam\r\n    },\r\n    postExamError: (state, action) => {\r\n      state.error = action.payload\r\n    },\r\n    disableQuestionsAdd: (state, action) => {\r\n      state.disableQuestions.push(action.payload)\r\n    },\r\n    resetDisableQuestions: (state) => {\r\n      state.disableQuestions = []\r\n    }\r\n  }\r\n})\r\n\r\nexport const {\r\n  resetExamResult,\r\n  getAllExams,\r\n  getExamById,\r\n  getFreeExamById,\r\n  getExamError,\r\n  resetExamError,\r\n  postExamById,\r\n  examRankById,\r\n  postExamError,\r\n  disableQuestionsAdd,\r\n  resetDisableQuestions\r\n} = slice.actions\r\n\r\nexport default slice.reducer\r\n\r\nexport const getAllExamsLoader = () => (dispatch) => {\r\n  dispatch(\r\n    apiCallBegun({\r\n      url: '/exams/',\r\n      method: 'get',\r\n      sendToken: true,\r\n      onSuccess: getAllExams.type,\r\n      onError: getExamError.type\r\n    })\r\n  )\r\n}\r\n\r\nexport const getAllFreeExamsLoader = () => (dispatch) => {\r\n  dispatch(\r\n    apiCallBegun({\r\n      url: '/exams/free',\r\n      method: 'get',\r\n      onSuccess: getAllExams.type,\r\n      onError: getExamError.type\r\n    })\r\n  )\r\n}\r\n\r\nexport const getExamByIdLoader = (id) => (dispatch) => {\r\n  dispatch(\r\n    apiCallBegun({\r\n      url: '/exams/questions/' + id,\r\n      method: 'get',\r\n      sendToken: true,\r\n      onSuccess: getExamById.type,\r\n      onError: getExamError.type\r\n    })\r\n  )\r\n}\r\n\r\nexport const getFreeExamByIdLoader = (id) => (dispatch) => {\r\n  dispatch(\r\n    apiCallBegun({\r\n      url: '/exams/free/questions/' + id,\r\n      method: 'get',\r\n      sendToken: true,\r\n      onSuccess: getFreeExamById.type,\r\n      onError: getExamError.type\r\n    })\r\n  )\r\n}\r\n\r\nexport const postExamByIdLoader = (data) => (dispatch) => {\r\n  dispatch(\r\n    apiCallBegun({\r\n      url: '/postexams',\r\n      method: 'post',\r\n      data: data,\r\n      sendToken: true,\r\n      onSuccess: postExamById.type,\r\n      onError: postExamError.type\r\n    })\r\n  )\r\n}\r\n\r\nexport const postFreeExamByIdLoader = (data) => (dispatch) => {\r\n  dispatch(\r\n    apiCallBegun({\r\n      url: '/postexams/free',\r\n      method: 'post',\r\n      data: data,\r\n      onSuccess: postExamById.type,\r\n      onError: postExamError.type\r\n    })\r\n  )\r\n}\r\n\r\nexport const examRankByIdLoader = (id, courseId) => (dispatch) => {\r\n  dispatch(\r\n    apiCallBegun({\r\n      url: '/postexams/rank/' + id,\r\n      data: { id, courseId },\r\n      method: 'post',\r\n      onSuccess: examRankById.type,\r\n      onError: postExamError.type\r\n    })\r\n  )\r\n}\r\n\r\nexport const resetExamResultLoader = () => (dispatch) => {\r\n  dispatch({ type: resetExamResult.type })\r\n}\r\n","import { createSlice } from '@reduxjs/toolkit'\r\nimport { apiCallBegun } from './api'\r\n\r\nconst slice = createSlice({\r\n  name: 'Question',\r\n  initialState: {\r\n    questions: [],\r\n    error: null,\r\n    response: null,\r\n    loading: false\r\n  },\r\n  reducers: {\r\n    getQuestions: (state, action) => {\r\n      state.questions = action.payload\r\n    },\r\n    loadingStart: (state, action) => {\r\n      state.loading = true\r\n    },\r\n    getResponse: (state, action) => {\r\n      state.response = action.payload\r\n      state.loading = false\r\n    },\r\n    resetResponse: (state, action) => {\r\n      state.response = null\r\n      state.loading = false\r\n    }\r\n  }\r\n})\r\n\r\nexport const {\r\n  getQuestions,\r\n  loadingStart,\r\n  getResponse,\r\n  resetResponse\r\n} = slice.actions\r\n\r\nexport default slice.reducer\r\n\r\nexport const resetResponseLoader = () => (dispatch) => {\r\n  dispatch({\r\n    type: resetResponse.type\r\n  })\r\n}\r\n\r\nexport const getQuestionLoader = () => (dispatch) => {\r\n  dispatch(\r\n    apiCallBegun({\r\n      url: '/questions',\r\n      method: 'get',\r\n      //sendToken: true,\r\n      //data,\r\n      //config,\r\n      onSuccess: getQuestions.type\r\n    })\r\n  )\r\n}\r\n\r\nexport const getQuestionByCategoryLoader = (id) => (dispatch) => {\r\n  dispatch(\r\n    apiCallBegun({\r\n      url: '/questions/category/' + id,\r\n      method: 'get',\r\n      onSuccess: getQuestions.type\r\n    })\r\n  )\r\n}\r\n\r\nexport const createQuestionLoader = (data) => (dispatch) => {\r\n  const config = { headers: { 'Content-Type': 'multipart/form-data' } }\r\n  const questionData = new FormData()\r\n  Object.keys(data).forEach((key) => {\r\n    data[key] && questionData.append(key, data[key])\r\n  })\r\n\r\n  dispatch(\r\n    apiCallBegun({\r\n      url: '/questions',\r\n      method: 'post',\r\n      sendToken: true,\r\n      data,\r\n      config,\r\n      onStart: loadingStart.type,\r\n      onSuccess: getResponse.type,\r\n      onError: getResponse.type\r\n    })\r\n  )\r\n}\r\n\r\nexport const uploadQuestionLoader = (data) => (dispatch) => {\r\n  const config = { headers: { 'Content-Type': 'multipart/form-data' } }\r\n  const questionData = new FormData()\r\n  Object.keys(data).forEach((key) => {\r\n    data[key] && questionData.append(key, data[key])\r\n  })\r\n\r\n  dispatch(\r\n    apiCallBegun({\r\n      url: '/questions/files',\r\n      method: 'post',\r\n      sendToken: true,\r\n      data,\r\n      config\r\n    })\r\n  )\r\n}\r\n\r\nexport const editQuestionLoader = (id, data) => (dispatch) => {\r\n  const config = { headers: { 'Content-Type': 'multipart/form-data' } }\r\n  const questionData = new FormData()\r\n  Object.keys(data).forEach((key) => {\r\n    data[key] && questionData.append(key, data[key])\r\n  })\r\n\r\n  dispatch(\r\n    apiCallBegun({\r\n      url: '/questions/' + id,\r\n      method: 'patch',\r\n      sendToken: true,\r\n      data,\r\n      config,\r\n      onStart: loadingStart.type,\r\n      onSuccess: getResponse.type,\r\n      onError: getResponse.type\r\n    })\r\n  )\r\n}\r\n\r\nexport const deleteQuestionLoader = (id) => (dispatch) => {\r\n  dispatch(\r\n    apiCallBegun({\r\n      url: '/questions/' + id,\r\n      method: 'delete',\r\n      sendToken: true,\r\n      onStart: loadingStart.type,\r\n      onSuccess: getResponse.type,\r\n      onError: getResponse.type\r\n    })\r\n  )\r\n}\r\n","import { createSlice } from '@reduxjs/toolkit'\r\nimport { apiCallBegun } from './api'\r\n\r\nconst slice = createSlice({\r\n  name: 'Category',\r\n  initialState: { categories: [], catHierarchy: [] },\r\n  reducers: {\r\n    getCategory: (state, action) => {\r\n      state.categories = action.payload.categories\r\n      state.catHierarchy = action.payload.catHierarchy\r\n    }\r\n  }\r\n})\r\n\r\nexport const { getCategory } = slice.actions\r\nexport default slice.reducer\r\n\r\nconst url = '/categories'\r\nconst method = 'get'\r\nexport const fetchCategory = () => (dispatch) => {\r\n  dispatch(\r\n    apiCallBegun({\r\n      url,\r\n      method,\r\n      onSuccess: getCategory.type\r\n    })\r\n  )\r\n}\r\n\r\nexport const createCategory = (data) => (dispatch) => {\r\n  dispatch(\r\n    apiCallBegun({\r\n      url,\r\n      method: 'post',\r\n      data,\r\n      sendToken: true\r\n    })\r\n  )\r\n}\r\n","import { createSlice } from '@reduxjs/toolkit'\r\nimport { apiCallBegun } from './api'\r\n\r\nconst slice = createSlice({\r\n  name: 'Courses',\r\n  initialState: {\r\n    loading: false,\r\n    courses: [],\r\n    coursesEnrolledByStu: [],\r\n    expectedEnrolledStuIds: []\r\n  },\r\n  reducers: {\r\n    getCourses: (state, action) => {\r\n      state.courses = action.payload\r\n      state.loading = false\r\n    },\r\n    getCoursesEnrolledByStu: (state, action) => {\r\n      state.coursesEnrolledByStu = action.payload\r\n      state.loading = false\r\n    },\r\n    loadingStart: (state, action) => {\r\n      state.loading = true\r\n    }\r\n  }\r\n})\r\nexport const {\r\n  getCourses,\r\n  getCoursesEnrolledByStu,\r\n  loadingStart\r\n} = slice.actions\r\nexport default slice.reducer\r\n\r\nconst url = '/courses'\r\nconst method = 'get'\r\n\r\nexport const fetchCourseLoader = () => (dispatch) => {\r\n  dispatch(\r\n    apiCallBegun({\r\n      url,\r\n      method,\r\n      onStart: loadingStart.type,\r\n      onSuccess: getCourses.type\r\n    })\r\n  )\r\n}\r\n\r\nexport const fetchCourseEnrolledByStuLoader = () => (dispatch) => {\r\n  dispatch(\r\n    apiCallBegun({\r\n      url: '/courses/enrolled/courses/',\r\n      method,\r\n      onStart: loadingStart.type,\r\n      onSuccess: getCoursesEnrolledByStu.type\r\n    })\r\n  )\r\n}\r\n","import { createSlice } from '@reduxjs/toolkit'\r\nimport { apiCallBegun } from './api'\r\n\r\nconst slice = createSlice({\r\n  name: 'ExamPaper',\r\n  initialState: {\r\n    loading: false,\r\n    questions: [],\r\n    ids: [],\r\n    success: null,\r\n    error: null\r\n  },\r\n  reducers: {\r\n    selectedQuestions: (state, action) => {\r\n      state.questions = action.payload.questions\r\n      state.ids = action.payload.ids\r\n    },\r\n    onLoading: (state) => {\r\n      state.loading = true\r\n    },\r\n    onSuccess: (state, action) => {\r\n      state.success = action.payload\r\n      state.loading = false\r\n    },\r\n    onError: (state, action) => {\r\n      state.error = action.payload\r\n      state.loading = false\r\n    }\r\n  }\r\n})\r\n\r\nexport const {\r\n  selectedQuestions,\r\n  onSuccess,\r\n  onError,\r\n  onLoading\r\n} = slice.actions\r\n\r\nexport default slice.reducer\r\n\r\nexport const selectedQuestionsLoader = (questions, ids) => (dispatch) => {\r\n  dispatch(selectedQuestions({ questions, ids }))\r\n}\r\n\r\nexport const onLoadingLoader = () => (dispatch) => {\r\n  dispatch({ type: onLoading.type })\r\n}\r\n\r\nexport const postExamProfile = (examSpec, questions, id = null) => (\r\n  dispatch\r\n) => {\r\n  dispatch(\r\n    apiCallBegun({\r\n      url: id ? `/exams/${id}` : '/exams',\r\n      method: id ? 'patch' : 'post',\r\n      data: { ...examSpec, questions },\r\n      onSuccess: onSuccess.type,\r\n      onError: onError.type,\r\n      sendToken: true\r\n    })\r\n  )\r\n}\r\n","import { createSlice } from '@reduxjs/toolkit'\r\nimport { apiCallBegun } from './api'\r\n\r\nconst slice = createSlice({\r\n  name: 'user',\r\n  initialState: {\r\n    id: null,\r\n    firstName: null,\r\n    lastName: null,\r\n    userName: null,\r\n    email: null,\r\n    role: null,\r\n    mobile: null,\r\n    userFrom: Date.now(),\r\n    address: null,\r\n    avatar: null,\r\n    gender: null,\r\n    faculty: null,\r\n    institution: null\r\n  },\r\n  reducers: {\r\n    getUser: (user, action) => {\r\n      user.id = action.payload.id\r\n      user.firstName = action.payload.firstName\r\n      user.lastName = action.payload.lastName\r\n      user.userName = action.payload.userName\r\n      user.email = action.payload.email\r\n      user.mobile = action.payload.mobile\r\n      user.userFrom = action.payload.createdAt\r\n      user.role = action.payload.role\r\n      user.address = action.payload.address\r\n      user.avatar = action.payload.avatar\r\n      user.gender = action.payload.gender\r\n      user.faculty = action.payload.faculty\r\n      user.institution = action.payload.institution\r\n    }\r\n  }\r\n})\r\nexport const { getUser } = slice.actions\r\nexport default slice.reducer\r\n\r\nconst url = '/users'\r\nconst method = 'get'\r\n\r\nexport const getUserLoader = () => (dispatch) => {\r\n  dispatch(\r\n    apiCallBegun({\r\n      url,\r\n      method,\r\n      onSuccess: getUser.type,\r\n      sendToken: true\r\n    })\r\n  )\r\n}\r\n","export default function errorHandler(e) {\r\n  if (e.response) {\r\n    // checking if server is down, no response will occur\r\n    const responseData = e.response.data\r\n\r\n    if (responseData.statusCode === 400) {\r\n      // server validation error\r\n      let message = ''\r\n      try {\r\n        responseData.message.forEach((v) => {\r\n          message += `${v.value} is not valid in [ ${\r\n            v.property\r\n          } ] field due to \" ${Object.values(v.constraints).toString()} \"`\r\n        })\r\n      } catch (error) {\r\n        message = responseData.error\r\n      }\r\n\r\n      return message\r\n    } else if (responseData.statusCode === 500) {\r\n      return 'Internal Server Error: file may be corrupted or so on.'\r\n    } else {\r\n      //for other errors\r\n      return responseData.message\r\n    }\r\n  } else {\r\n    // if server has no any response\r\n    return 'Server may be down. Please try sometime later'\r\n  }\r\n}\r\n","import { createSlice } from '@reduxjs/toolkit'\r\nimport { apiCallBegun } from './api'\r\n\r\nconst slice = createSlice({\r\n  name: 'dashboard',\r\n  initialState: {\r\n    featuredExams: [],\r\n    userExamInfo: {\r\n      totalExam: [0, 0],\r\n      rank: [1, 100],\r\n      upcomingExam: ['No Exam', '01-02-03', null],\r\n      result: [0.0, 100]\r\n    },\r\n    userExamStat: null\r\n  },\r\n  reducers: {\r\n    dashboardStudent: (state, action) => {\r\n      state.featuredExams = action.payload.featuredExams\r\n      state.userExamInfo = action.payload.userExamInfo\r\n      state.userExamStat = action.payload.userExamStat\r\n    },\r\n    userExamStat: (state, action) => {\r\n      state.userExamStat = action.payload.userExamStat\r\n    }\r\n  }\r\n})\r\n\r\nexport const { dashboardStudent, userExamStat } = slice.actions\r\n\r\nexport default slice.reducer\r\n\r\nconst url = '/dashboard/examstat'\r\nconst method = 'get'\r\n\r\nexport const userExamStatLoader = () => (dispatch) => {\r\n  dispatch(\r\n    apiCallBegun({\r\n      url,\r\n      method,\r\n      onSuccess: userExamStat.type,\r\n      sendToken: true\r\n    })\r\n  )\r\n}\r\n","import axios from 'axios'\r\n\r\nexport default function setAuthorizationToken(token) {\r\n  if (token) {\r\n    axios.defaults.headers.common['Authorization'] = `Bearer ${token}`\r\n  } else {\r\n    delete axios.defaults.headers.common['Authorization']\r\n  }\r\n}\r\n"],"sourceRoot":""}