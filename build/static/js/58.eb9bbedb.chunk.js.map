{"version":3,"sources":["container/exams/examListsByCat.js"],"names":["ExamListsByCat","dispatch","useDispatch","catHierarchy","useSelector","state","category","useEffect","fetchCategory","className","length","catExtractor","map","cat","console","log","order","child","CatCard","key","id","props","useState","show","setShow","style","fontSize","variant","to","name","size","onClick"],"mappings":"6PAQe,SAASA,IACtB,IAAMC,EAAWC,cACXC,EAAeC,aAAY,SAACC,GAAD,OAAWA,EAAMC,SAASH,gBAM3D,OAJAI,qBAAU,WACRN,EAASO,iBACR,CAACP,IAGF,yBAAKQ,UAAU,IACZN,EAAaO,OAAS,GAAK,kBAAC,IAAD,MAC5B,wBAAID,UAAU,eAAd,mBACA,6BAKN,SAASE,EAAaR,GACpB,OAAOA,EAAaS,KAAI,SAACC,GAEvB,GADAC,QAAQC,IAAIF,GACRA,EAAIG,MAAQ,IAAQ,CAEtB,IAAIC,EAAQ,KAIZ,OAHIJ,EAAII,QACNA,EAAQN,EAAaE,EAAII,QAEpB,kBAACC,EAAD,CAASC,IAAKN,EAAIO,GAAIP,IAAKA,EAAKI,MAAOA,IACzC,OAAO,QAfNN,CAAaR,KAmBzB,SAASe,EAAT,GAA4C,IAAzBL,EAAwB,EAAxBA,IAAKI,EAAmB,EAAnBA,MAAUI,EAAS,iCACjBC,oBAAS,GADQ,mBAClCC,EADkC,KAC5BC,EAD4B,KAGzC,OACE,yBACEf,UAAU,iDACVY,MAAK,eAAOA,IAGZ,yBACEZ,UAAU,mCACVgB,MAAO,CAAEC,SAAU,WAEnB,kBAAC,IAAD,CAAOC,QAAQ,QAAQlB,UAAU,OAC/B,kBAAC,OAAD,CAAMmB,GAAI,mBAAqBf,EAAIgB,KAAO,IAAMhB,EAAIO,IACjDP,EAAIgB,OAGRZ,IACEM,EACC,kBAAC,IAAD,CACEO,KAAM,SACNC,QAAS,WACPP,GAASD,MAIb,kBAAC,IAAD,CACEO,KAAM,SACNC,QAAS,WACPP,GAASD,QAKnB,6BAAMA,GAAQN","file":"static/js/58.eb9bbedb.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { Badge } from 'react-bootstrap'\r\nimport { BsFillDashCircleFill, BsPlusCircleFill } from 'react-icons/bs'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport CircleLoader from '../../components/customSpinner/circleLoader/circleLoader'\r\nimport { fetchCategory } from '../../store/category'\r\n\r\nexport default function ExamListsByCat() {\r\n  const dispatch = useDispatch()\r\n  const catHierarchy = useSelector((state) => state.category.catHierarchy)\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchCategory())\r\n  }, [dispatch])\r\n\r\n  return (\r\n    <div className=''>\r\n      {catHierarchy.length < 1 && <CircleLoader />}\r\n      <h2 className='text-center'>Exam Categories</h2>\r\n      <div>{catExtractor(catHierarchy)}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction catExtractor(catHierarchy) {\r\n  return catHierarchy.map((cat) => {\r\n    console.log(cat)\r\n    if (cat.order < 100000) {\r\n      //more than 100000 valued order will not be seen at exams\r\n      let child = null\r\n      if (cat.child) {\r\n        child = catExtractor(cat.child)\r\n      }\r\n      return <CatCard key={cat.id} cat={cat} child={child} />\r\n    } else return null\r\n  })\r\n}\r\n\r\nfunction CatCard({ cat, child, ...props }) {\r\n  const [show, setShow] = useState(false)\r\n\r\n  return (\r\n    <div\r\n      className='cat-card mt-1 ml-3 border-top-0 border-warning'\r\n      props={{ ...props }}\r\n    >\r\n      {/* <Image width={80}  src={process.env.REACT_APP_SITE_URL + \"/\" + cat.imageUrl} thumbnail /> */}\r\n      <div\r\n        className='p-3 bg-warning text-white parent'\r\n        style={{ fontSize: '1.2rem' }}\r\n      >\r\n        <Badge variant='light' className='p-2'>\r\n          <Link to={'/exams/category/' + cat.name + '-' + cat.id}>\r\n            {cat.name}\r\n          </Link>\r\n        </Badge>\r\n        {child &&\r\n          (show ? (\r\n            <BsFillDashCircleFill\r\n              size={'1.5rem'}\r\n              onClick={() => {\r\n                setShow(!show)\r\n              }}\r\n            />\r\n          ) : (\r\n            <BsPlusCircleFill\r\n              size={'1.5rem'}\r\n              onClick={() => {\r\n                setShow(!show)\r\n              }}\r\n            />\r\n          ))}\r\n      </div>\r\n      <div>{show && child}</div>\r\n    </div>\r\n  )\r\n}\r\n"],"sourceRoot":""}