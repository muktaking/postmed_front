{"version":3,"sources":["config/routes.config.js","config/env.config.js","components/seo/metainfo.js","../node_modules/react-bootstrap/esm/Badge.js","components/result/timeline.js","container/profile/profile.js"],"names":["RoutesConfig","Home","metaInfo","title","description","Exams","Dashboard","Course","Reports","Profile","Settings","Category","Question","CourseBuilder","RoutineBuilder","ExamBuilder","ExamEdit","Login","Signup","AUTHOR_NAME","process","_defaultTitle","_defaultDescription","MetaInfo","meta","defer","lang","Helmet","htmlAttributes","titleTemplate","name","content","property","concat","Badge","React","forwardRef","_ref","ref","bsPrefix","variant","pill","className","_ref$as","as","Component","props","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","createElement","_extends","classNames","displayName","defaultProps","type","Timeline","useState","userDashExamInfo","setUserDashExamInfo","useEffect","axios","get","then","response","status","data","catch","e","console","log","map","examStat","examTitles","_","userExamStat","examType","marks","stat","value","averageScore","totalMark","lastAttemptTimes","ind","style","fontSize","id","key","data-date","moment","format","isProfile","size"],"mappings":"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","file":"static/js/47.4d8cceb4.chunk.js","sourcesContent":["export const RoutesConfig = {\r\n  Home: {\r\n    metaInfo: {\r\n      title: 'Online Exam Platform',\r\n      description:\r\n        'Online Exam Platform - participate into exam from anywhere anytime with extensive solve immediately. Question and answer is authentic with help of talented mentor.'\r\n    }\r\n  },\r\n  Exams: {\r\n    metaInfo: {\r\n      title: 'Lists Of Exams',\r\n      description:\r\n        'Lists of all available exams. Participate into the exams. Test your skill and find the gap.'\r\n    }\r\n  },\r\n  Dashboard: {\r\n    metaInfo: {\r\n      title: 'Dashboard',\r\n      description:\r\n        'Get all contents at one place. Your routine, reports, activity, featured & latest exam and many more.'\r\n    }\r\n  },\r\n  Course: {\r\n    metaInfo: {\r\n      title: 'Course',\r\n      description:\r\n        'Enroll for your desire courses and prepare for upcoming exams.'\r\n    }\r\n  },\r\n  Reports: {\r\n    metaInfo: {\r\n      title: 'Reports',\r\n      description:\r\n        'In depth reports all of your exam. Take a look and get the gap.'\r\n    }\r\n  },\r\n  Profile: {\r\n    metaInfo: {\r\n      title: 'Profile',\r\n      description: 'Update the profile and get a better user exprience.'\r\n    }\r\n  },\r\n  Settings: {\r\n    metaInfo: {\r\n      title: 'Settings'\r\n    }\r\n  },\r\n  Category: {\r\n    metaInfo: {\r\n      title: 'CategoryBuilder'\r\n    }\r\n  },\r\n  Question: {\r\n    metaInfo: {\r\n      title: 'QuestionBuilder'\r\n    }\r\n  },\r\n  CourseBuilder: {\r\n    metaInfo: {\r\n      title: 'CourseBuilder'\r\n    }\r\n  },\r\n  RoutineBuilder: {\r\n    metaInfo: {\r\n      title: 'RoutineBuilder'\r\n    }\r\n  },\r\n  ExamBuilder: {\r\n    metaInfo: {\r\n      title: 'ExamBuilder'\r\n    }\r\n  },\r\n  ExamEdit: {\r\n    metaInfo: {\r\n      title: 'ExamEdit'\r\n    }\r\n  },\r\n  Login: {\r\n    metaInfo: {\r\n      title: 'Login',\r\n      description: 'Login to access the app.'\r\n    }\r\n  },\r\n  Signup: {\r\n    metaInfo: {\r\n      title: 'Signup',\r\n      description: 'To use the app fully, You have to signup '\r\n    }\r\n  }\r\n}\r\n","export const APP_NAME = process.env.REACT_APP_NAME\r\nexport const DEFAULT_LOCALE = process.env.REACT_APP_LANG\r\nexport const BASE_URL = process.env.REACT_APP_BASE_URL\r\nexport const AUTHOR_NAME = process.env.REACT_APP_AUTHOR_NAME\r\n","import React from 'react'\r\nimport Helmet from 'react-helmet'\r\nimport {\r\n  APP_NAME,\r\n  AUTHOR_NAME,\r\n  BASE_URL,\r\n  DEFAULT_LOCALE\r\n} from '../../config/env.config'\r\nimport { RoutesConfig } from '../../config/routes.config'\r\n\r\nconst {\r\n  title: _defaultTitle,\r\n  description: _defaultDescription\r\n} = RoutesConfig.Home.metaInfo\r\n\r\nconst MetaInfo = ({\r\n  meta = [],\r\n  defer = false,\r\n  lang = DEFAULT_LOCALE,\r\n  title = _defaultTitle,\r\n  description = _defaultDescription\r\n}) => (\r\n  <Helmet\r\n    defer={defer}\r\n    title={title}\r\n    htmlAttributes={{ lang }}\r\n    titleTemplate={`%s | ${APP_NAME}`}\r\n    meta={[\r\n      {\r\n        name: 'description',\r\n        content: description\r\n      },\r\n      {\r\n        property: 'og:description',\r\n        content: description\r\n      },\r\n      {\r\n        property: 'og:title',\r\n        content: title\r\n      },\r\n      {\r\n        property: 'og:type',\r\n        content: 'website'\r\n      },\r\n      {\r\n        property: 'og:image',\r\n        content: `${BASE_URL}/logo.png`\r\n      },\r\n      {\r\n        name: 'author',\r\n        content: AUTHOR_NAME\r\n      }\r\n    ].concat(meta)}\r\n  />\r\n)\r\n\r\nexport default MetaInfo\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  pill: false\n};\nvar Badge = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      pill = _ref.pill,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'span' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"variant\", \"pill\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, prefix, pill && prefix + \"-pill\", variant && prefix + \"-\" + variant)\n  }));\n});\nBadge.displayName = 'Badge';\nBadge.defaultProps = defaultProps;\nexport default Badge;","import axios from 'axios'\r\n//import moment from 'moment'\r\nimport * as moment from 'dayjs'\r\nimport * as _ from 'lodash'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Badge } from 'react-bootstrap'\r\nimport './timeline.css'\r\n\r\nconst type = [\r\n  'Assignment',\r\n  'Weekly',\r\n  'Monthly',\r\n  'Assesment',\r\n  'Term',\r\n  'Test',\r\n  'Final'\r\n]\r\n\r\nexport default function Timeline() {\r\n  const [userDashExamInfo, setUserDashExamInfo] = useState([])\r\n  useEffect(() => {\r\n    axios\r\n      .get(process.env.REACT_APP_SITE_URL + '/dashboard')\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          setUserDashExamInfo(response.data)\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        console.log(e)\r\n      })\r\n  }, [])\r\n\r\n  const userExamStat = userDashExamInfo.map((examStat) => {\r\n    return {\r\n      examTitles: _.map(examStat.userExamStat.examTitles, 'title'),\r\n      examType: _.map(examStat.userExamStat.examTitles, 'type'),\r\n      marks: _.map(\r\n        examStat.userExamStat.stat,\r\n        (value) => `Mark: ${value.averageScore} Out of ${value.totalMark}`\r\n      ),\r\n      lastAttemptTimes: _.map(examStat.userExamStat.stat, 'lastAttemptTime')\r\n    }\r\n  })\r\n\r\n  // const examTitles = userExamStat ? _.map(userExamStat.examTitles, 'title') : []\r\n  // const examType = userExamStat ? _.map(userExamStat.examTitles, 'type') : []\r\n  // const marks = userExamStat\r\n  //   ? _.map(\r\n  //       userExamStat.stat,\r\n  //       (value) => `Mark: ${value.averageScore} Out of ${value.totalMark}`\r\n  //     )\r\n  //   : []\r\n  // const lastAttemptTimes = userExamStat\r\n  //   ? _.map(userExamStat.stat, 'lastAttemptTime')\r\n  //   : []\r\n\r\n  return userExamStat.map(\r\n    ({ examTitles, examType, marks, lastAttemptTimes }, ind) => (\r\n      <div className='container'>\r\n        <div className='row'>\r\n          <div className='col-md-12'>\r\n            <div className='card'>\r\n              <div className='card-body'>\r\n                <h6 className='card-title text-center'>\r\n                  Exams Under{' '}\r\n                  <Badge variant='primary' style={{ fontSize: '1rem' }}>\r\n                    {userDashExamInfo[ind].title}\r\n                  </Badge>{' '}\r\n                  Course\r\n                </h6>\r\n                <div id='content'>\r\n                  <ul className='timeline'>\r\n                    {examTitles.map((value, ind) => (\r\n                      <li\r\n                        key={value}\r\n                        className='event'\r\n                        data-date={moment(lastAttemptTimes[ind]).format(\r\n                          'DD-MMM-YYYY, h:mm a'\r\n                        )}\r\n                      >\r\n                        <h3>{value}</h3>\r\n                        <p className='text-danger'>{type[examType[ind]]}</p>\r\n                        <p className='text-secondary'>{marks[ind]}</p>\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  )\r\n}\r\n","import React from 'react'\r\nimport Timeline from '../../components/result/timeline'\r\nimport MetaInfo from '../../components/seo/metainfo'\r\nimport ProfileSnippet from '../../components/user/profile'\r\nimport { RoutesConfig } from '../../config/routes.config'\r\n\r\nexport default function Profile() {\r\n  return (\r\n    <div>\r\n      <MetaInfo {...RoutesConfig.Profile.metaInfo} />\r\n      <ProfileSnippet isProfile={true} size='300' />\r\n      <Timeline />\r\n    </div>\r\n  )\r\n}\r\n"],"sourceRoot":""}