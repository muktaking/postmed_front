{"version":3,"sources":["config/routes.config.js","config/env.config.js","components/seo/metainfo.js","../node_modules/webpack/buildin/module.js","../node_modules/react-bootstrap/esm/Badge.js","../node_modules/react-bootstrap/esm/Table.js","container/reports/lineCharts.js","container/reports/pieCharts.js","container/reports/reports.js"],"names":["RoutesConfig","Home","metaInfo","title","description","Exams","Dashboard","Course","Reports","Profile","Settings","Category","Question","CourseBuilder","RoutineBuilder","ExamBuilder","ExamEdit","Login","Signup","AUTHOR_NAME","process","_defaultTitle","_defaultDescription","MetaInfo","meta","defer","lang","Helmet","htmlAttributes","titleTemplate","name","content","property","concat","module","exports","webpackPolyfill","deprecate","paths","children","Object","defineProperty","enumerable","get","l","i","Badge","React","forwardRef","_ref","ref","bsPrefix","variant","pill","className","_ref$as","as","Component","props","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","createElement","_extends","classNames","displayName","defaultProps","Table","striped","bordered","borderless","hover","size","responsive","decoratedBsPrefix","classes","table","responsiveClass","LineCharts","labels","dataSetFirst","dataSetSec","data","datasets","label","fill","borderColor","backgroundColor","borderWidth","options","scales","yAxes","ticks","beginAtZero","min","max","PieCharts","hoverOffset","useState","isActive","setIsActive","courses","setCourses","examStats","setExamStats","examDetails","setExamDetails","advancedAnalyTics","setAdvancedAnalyTics","examActivityStat","setExamActivityStat","useEffect","axios","then","res","catch","e","console","log","Row","Col","sm","Form","Control","id","custom","onChange","target","value","error","map","course","length","exams","examStat","ind","examId","onClick","examTitle","score","reduce","previousValue","currentValue","Number","toFixed","totalMark","attemptNumbers","moment","firstAttemptTime","format","lastAttemptTime","colSpan","Check","type","stat","totalScore","totalWrongScore","totalPenaltyScore","totalRightStems","totalWrongStems","totalRightSbaQuestions","totalWrongSbaQuestions","attemptTime","singleQuestionMark","questions","questionStemLength"],"mappings":"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","file":"static/js/48.14c9c6fe.chunk.js","sourcesContent":["export const RoutesConfig = {\r\n  Home: {\r\n    metaInfo: {\r\n      title: 'Online Exam Platform',\r\n      description:\r\n        'Online Exam Platform - participate into exam from anywhere anytime with extensive solve immediately. Question and answer is authentic with help of talented mentor.'\r\n    }\r\n  },\r\n  Exams: {\r\n    metaInfo: {\r\n      title: 'Lists Of Exams',\r\n      description:\r\n        'Lists of all available exams. Participate into the exams. Test your skill and find the gap.'\r\n    }\r\n  },\r\n  Dashboard: {\r\n    metaInfo: {\r\n      title: 'Dashboard',\r\n      description:\r\n        'Get all contents at one place. Your routine, reports, activity, featured & latest exam and many more.'\r\n    }\r\n  },\r\n  Course: {\r\n    metaInfo: {\r\n      title: 'Course',\r\n      description:\r\n        'Enroll for your desire courses and prepare for upcoming exams.'\r\n    }\r\n  },\r\n  Reports: {\r\n    metaInfo: {\r\n      title: 'Reports',\r\n      description:\r\n        'In depth reports all of your exam. Take a look and get the gap.'\r\n    }\r\n  },\r\n  Profile: {\r\n    metaInfo: {\r\n      title: 'Profile',\r\n      description: 'Update the profile and get a better user exprience.'\r\n    }\r\n  },\r\n  Settings: {\r\n    metaInfo: {\r\n      title: 'Settings'\r\n    }\r\n  },\r\n  Category: {\r\n    metaInfo: {\r\n      title: 'CategoryBuilder'\r\n    }\r\n  },\r\n  Question: {\r\n    metaInfo: {\r\n      title: 'QuestionBuilder'\r\n    }\r\n  },\r\n  CourseBuilder: {\r\n    metaInfo: {\r\n      title: 'CourseBuilder'\r\n    }\r\n  },\r\n  RoutineBuilder: {\r\n    metaInfo: {\r\n      title: 'RoutineBuilder'\r\n    }\r\n  },\r\n  ExamBuilder: {\r\n    metaInfo: {\r\n      title: 'ExamBuilder'\r\n    }\r\n  },\r\n  ExamEdit: {\r\n    metaInfo: {\r\n      title: 'ExamEdit'\r\n    }\r\n  },\r\n  Login: {\r\n    metaInfo: {\r\n      title: 'Login',\r\n      description: 'Login to access the app.'\r\n    }\r\n  },\r\n  Signup: {\r\n    metaInfo: {\r\n      title: 'Signup',\r\n      description: 'To use the app fully, You have to signup '\r\n    }\r\n  }\r\n}\r\n","export const APP_NAME = process.env.REACT_APP_NAME\r\nexport const DEFAULT_LOCALE = process.env.REACT_APP_LANG\r\nexport const BASE_URL = process.env.REACT_APP_BASE_URL\r\nexport const AUTHOR_NAME = process.env.REACT_APP_AUTHOR_NAME\r\n","import React from 'react'\r\nimport Helmet from 'react-helmet'\r\nimport {\r\n  APP_NAME,\r\n  AUTHOR_NAME,\r\n  BASE_URL,\r\n  DEFAULT_LOCALE\r\n} from '../../config/env.config'\r\nimport { RoutesConfig } from '../../config/routes.config'\r\n\r\nconst {\r\n  title: _defaultTitle,\r\n  description: _defaultDescription\r\n} = RoutesConfig.Home.metaInfo\r\n\r\nconst MetaInfo = ({\r\n  meta = [],\r\n  defer = false,\r\n  lang = DEFAULT_LOCALE,\r\n  title = _defaultTitle,\r\n  description = _defaultDescription\r\n}) => (\r\n  <Helmet\r\n    defer={defer}\r\n    title={title}\r\n    htmlAttributes={{ lang }}\r\n    titleTemplate={`%s | ${APP_NAME}`}\r\n    meta={[\r\n      {\r\n        name: 'description',\r\n        content: description\r\n      },\r\n      {\r\n        property: 'og:description',\r\n        content: description\r\n      },\r\n      {\r\n        property: 'og:title',\r\n        content: title\r\n      },\r\n      {\r\n        property: 'og:type',\r\n        content: 'website'\r\n      },\r\n      {\r\n        property: 'og:image',\r\n        content: `${BASE_URL}/logo.png`\r\n      },\r\n      {\r\n        name: 'author',\r\n        content: AUTHOR_NAME\r\n      }\r\n    ].concat(meta)}\r\n  />\r\n)\r\n\r\nexport default MetaInfo\r\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  pill: false\n};\nvar Badge = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      pill = _ref.pill,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'span' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"variant\", \"pill\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, prefix, pill && prefix + \"-pill\", variant && prefix + \"-\" + variant)\n  }));\n});\nBadge.displayName = 'Badge';\nBadge.defaultProps = defaultProps;\nexport default Badge;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar Table = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      striped = _ref.striped,\n      bordered = _ref.bordered,\n      borderless = _ref.borderless,\n      hover = _ref.hover,\n      size = _ref.size,\n      variant = _ref.variant,\n      responsive = _ref.responsive,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"striped\", \"bordered\", \"borderless\", \"hover\", \"size\", \"variant\", \"responsive\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  var classes = classNames(className, decoratedBsPrefix, variant && decoratedBsPrefix + \"-\" + variant, size && decoratedBsPrefix + \"-\" + size, striped && decoratedBsPrefix + \"-striped\", bordered && decoratedBsPrefix + \"-bordered\", borderless && decoratedBsPrefix + \"-borderless\", hover && decoratedBsPrefix + \"-hover\");\n  var table = React.createElement(\"table\", _extends({}, props, {\n    className: classes,\n    ref: ref\n  }));\n\n  if (responsive) {\n    var responsiveClass = decoratedBsPrefix + \"-responsive\";\n\n    if (typeof responsive === 'string') {\n      responsiveClass = responsiveClass + \"-\" + responsive;\n    }\n\n    return React.createElement(\"div\", {\n      className: responsiveClass\n    }, table);\n  }\n\n  return table;\n});\nexport default Table;","import React from 'react'\r\nimport { Line } from 'react-chartjs-2'\r\n\r\nexport default function LineCharts({ labels, dataSetFirst, dataSetSec }) {\r\n  const options = {\r\n    responsive: true, // Instruct chart js to respond nicely.\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            beginAtZero: false,\r\n            min: 0,\r\n            max: 100\r\n          }\r\n        }\r\n      ]\r\n    }\r\n  }\r\n  const data = {\r\n    labels: [...labels],\r\n    datasets: [\r\n      {\r\n        label: 'Score(Percentage)', // Name the series\r\n        data: [...dataSetFirst], // Specify the data values array\r\n        fill: false,\r\n        borderColor: '#2196f3', // Add custom color border (Line)\r\n        backgroundColor: '#2196f3', // Add custom color background (Points and Fill)\r\n        borderWidth: 3 // Specify bar border width\r\n      },\r\n      {\r\n        label: 'Wrong Score(Percentage)', // Name the series\r\n        data: [...dataSetSec], // Specify the data values array\r\n        fill: false,\r\n        borderColor: '#FF8C33', // Add custom color border (Line)\r\n        backgroundColor: '#FF8C33', // Add custom color background (Points and Fill)\r\n        borderWidth: 2 // Specify bar border width\r\n        //type: 'bar'\r\n      }\r\n    ]\r\n  }\r\n  return (\r\n    <>\r\n      <Line data={data} options={options} />\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Pie } from 'react-chartjs-2'\r\n\r\nexport default function PieCharts({ labels, dataSetFirst }) {\r\n  const options = {\r\n    responsive: true // Instruct chart js to respond nicely.\r\n    // scales: {\r\n    //   yAxes: [\r\n    //     {\r\n    //       ticks: {\r\n    //         beginAtZero: false,\r\n    //         min: 0,\r\n    //         max: 100\r\n    //       }\r\n    //     }\r\n    //   ]\r\n    // }\r\n  }\r\n  const data = {\r\n    labels: [...labels],\r\n    datasets: [\r\n      {\r\n        label: 'Score(Percentage)', // Name the series\r\n        data: [...dataSetFirst], // Specify the data values array\r\n        backgroundColor: ['#2196f3', '#FF4533', '#706564'], // Add custom color background (Points and Fill)\r\n        hoverOffset: 4\r\n      }\r\n    ]\r\n  }\r\n  return (\r\n    <>\r\n      <Pie data={data} options={options} />\r\n    </>\r\n  )\r\n}\r\n","import axios from 'axios'\r\n//import moment from 'moment'\r\nimport * as moment from 'dayjs'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Badge, Col, Form, Row, Table } from 'react-bootstrap'\r\nimport MetaInfo from '../../components/seo/metainfo'\r\nimport { RoutesConfig } from '../../config/routes.config'\r\nimport LineCharts from './lineCharts'\r\nimport PieCharts from './pieCharts'\r\n\r\nexport default function Reports() {\r\n  const [isActive, setIsActive] = useState(null)\r\n  const [courses, setCourses] = useState([])\r\n  const [examStats, setExamStats] = useState([])\r\n  const [examDetails, setExamDetails] = useState(null)\r\n  const [advancedAnalyTics, setAdvancedAnalyTics] = useState(false)\r\n  // const [examTitle, setExamTitle] = useState('')\r\n  // const [examTotalMark, setExamTotalMark] = useState(0)\r\n  const [examActivityStat, setExamActivityStat] = useState([])\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(process.env.REACT_APP_SITE_URL + '/courses/enrolled/courses')\r\n      .then((res) => {\r\n        setCourses(res.data)\r\n      })\r\n      .catch((e) => {\r\n        console.log(e)\r\n      })\r\n  }, [])\r\n\r\n  const courseSelectHandler = (e) => {\r\n    axios\r\n      .get(\r\n        process.env.REACT_APP_SITE_URL +\r\n          '/userExamProfile/courses/' +\r\n          e.target.value\r\n      )\r\n      .then((res) => {\r\n        //console.log(res.data)\r\n        setExamStats(res.data)\r\n      })\r\n      .catch((error) => console.log(error))\r\n  }\r\n\r\n  const getExamDetailsById = (examId) => {\r\n    axios\r\n      .get(process.env.REACT_APP_SITE_URL + '/exams/' + examId)\r\n      .then((res) => {\r\n        console.log(res.data)\r\n        setExamDetails(res.data)\r\n      })\r\n      .catch((error) => console.log(error))\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <MetaInfo {...RoutesConfig.Reports.metaInfo} />\r\n      <h3>Reports</h3>\r\n      <Row>\r\n        <Col sm={3}>\r\n          <Form.Control\r\n            as='select'\r\n            className='mr-sm-2'\r\n            id='inlineFormCustomSelect'\r\n            custom\r\n            onChange={courseSelectHandler}\r\n          >\r\n            <option>Select Course</option>\r\n            {courses.map((course) => (\r\n              <option value={course.id}>{course.title}</option>\r\n            ))}\r\n          </Form.Control>\r\n\r\n          <p className='mt-4 mr-1'>\r\n            <span>1. First Select A Course</span>\r\n            <br />\r\n            <span>2. Then click on any</span>{' '}\r\n            <Badge variant='info' className='px-3 py-1 text-info'>\r\n              -\r\n            </Badge>{' '}\r\n            <span>colored 'Exam Title' cell to get details</span>\r\n          </p>\r\n        </Col>\r\n        <Col sm={9}>\r\n          <Table striped bordered hover responsive>\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>Exam Title</th>\r\n                <th>Average Score</th>\r\n                <th>Total Mark</th>\r\n                <th>Attempt Numbers</th>\r\n                <th>First Attempt Time</th>\r\n                <th>Last Attempt Time</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {examStats.length > 0 &&\r\n              examStats[0].courses.length > 0 &&\r\n              examStats[0].courses[0].exams.length > 0 ? (\r\n                examStats[0].courses[0].exams.map((examStat, ind) => (\r\n                  <tr\r\n                    className={\r\n                      isActive === examStat.examId ? 'bg-info text-white' : ''\r\n                    }\r\n                  >\r\n                    <td>{ind + 1}</td>\r\n                    <td\r\n                      onClick={() => {\r\n                        setIsActive(examStat.examId)\r\n                        getExamDetailsById(examStat.examId)\r\n                        // setExamTitle(examStat.examTitle)\r\n                        // setExamTotalMark(examStat.totalMark)\r\n                        setExamActivityStat(examStat.examActivityStat)\r\n                      }}\r\n                      className='bg-info text-white'\r\n                    >\r\n                      {examStat.examTitle}\r\n                    </td>\r\n                    <td>\r\n                      {(\r\n                        examStat.score.reduce(\r\n                          (previousValue, currentValue) =>\r\n                            Number(previousValue) + Number(currentValue)\r\n                        ) / examStat.score.length\r\n                      ).toFixed(2)}\r\n                    </td>\r\n                    <td>{examStat.totalMark}</td>\r\n                    <td>{examStat.attemptNumbers}</td>\r\n                    <td>\r\n                      {moment(examStat.firstAttemptTime).format(\r\n                        'DD-MMM-YYYY, h:mm a'\r\n                      )}\r\n                    </td>\r\n                    <td>\r\n                      {moment(examStat.lastAttemptTime).format(\r\n                        'DD-MMM-YYYY, h:mm a'\r\n                      )}\r\n                    </td>\r\n                  </tr>\r\n                ))\r\n              ) : (\r\n                <tr>\r\n                  <td colSpan={7} className='text-danger text-center'>\r\n                    You do not take part any exam under the course.\r\n                  </td>\r\n                </tr>\r\n              )}\r\n            </tbody>\r\n          </Table>\r\n          <div className='bg-light pl-3 py-2 my-3'>\r\n            {examDetails && (\r\n              <>\r\n                <h3 className='text-center text-info my-2'>\r\n                  In Depth about: {examDetails.title}{' '}\r\n                </h3>\r\n                <Form.Check\r\n                  type='switch'\r\n                  id='custom-switch'\r\n                  label='Advanced Analytics'\r\n                  onChange={() => {\r\n                    setAdvancedAnalyTics(!advancedAnalyTics)\r\n                  }}\r\n                />\r\n                <Table striped bordered hover responsive className='mt-2'>\r\n                  <thead>\r\n                    <tr>\r\n                      <th>#</th>\r\n                      <th>Score</th>\r\n                      <th>Wrong Score</th>\r\n                      <th>Penalty Score</th>\r\n                      <th>Total Right Stems Number</th>\r\n                      <th>Total Wrong Stems Number</th>\r\n                      <th>Total Right Sba Questions (only Sba) </th>\r\n                      <th>Total Wrong Sba Questions (only Sba) </th>\r\n                      <th>Attempt Time</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {examActivityStat.map((stat, ind) => (\r\n                      <tr>\r\n                        <td>{ind + 1}</td>\r\n                        <td>{stat.totalScore}</td>\r\n                        <td>{stat.totalWrongScore}</td>\r\n                        <td>{stat.totalPenaltyScore}</td>\r\n                        <td>{stat.totalRightStems}</td>\r\n                        <td>{stat.totalWrongStems}</td>\r\n                        <td>{stat.totalRightSbaQuestions}</td>\r\n                        <td>{stat.totalWrongSbaQuestions}</td>\r\n                        <td>\r\n                          {moment(stat.attemptTime).format(\r\n                            'DD-MMM-YYYY, h:mm a'\r\n                          )}\r\n                        </td>\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </Table>\r\n                <p className='text-center'>Table: Summary View</p>\r\n                <hr />\r\n                {advancedAnalyTics && (\r\n                  <>\r\n                    <h5>Score Analytics</h5>\r\n                    <LineCharts\r\n                      labels={examActivityStat.map(\r\n                        (stat, i) => `Attempt No.${i + 1}`\r\n                      )}\r\n                      dataSetFirst={examActivityStat.map((stat) =>\r\n                        (\r\n                          (stat.totalScore * 100) /\r\n                          (examDetails.singleQuestionMark *\r\n                            examDetails.questions.length)\r\n                        ).toFixed(2)\r\n                      )}\r\n                      dataSetSec={examActivityStat.map((stat) =>\r\n                        (\r\n                          (stat.totalWrongScore * 100) /\r\n                          (examDetails.singleQuestionMark *\r\n                            examDetails.questions.length)\r\n                        ).toFixed(2)\r\n                      )}\r\n                    />\r\n                    <p className='text-center'>Fig: Score Analytics</p>\r\n                    <hr />\r\n                    <div>\r\n                      <h5>Stems Analytics</h5>\r\n                      <div className='row'>\r\n                        {examActivityStat.map((stat) => (\r\n                          <div className='col-lg-6 col-md-12 mb-3'>\r\n                            <PieCharts\r\n                              labels={['Right', 'Wrong', 'UnTouched']}\r\n                              dataSetFirst={[\r\n                                stat.totalRightStems,\r\n                                stat.totalWrongStems,\r\n                                examDetails.questionStemLength *\r\n                                  examDetails.questions.length -\r\n                                  (stat.totalRightStems + stat.totalWrongStems)\r\n                              ]}\r\n                            />\r\n                            <p className='text-center'>\r\n                              Fig: Stems Analytics at\r\n                              {' ' +\r\n                                moment(stat.attemptTime).format(\r\n                                  'DD-MMM-YY, h:mm a'\r\n                                )}\r\n                            </p>\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                    </div>\r\n                  </>\r\n                )}\r\n              </>\r\n            )}\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\n"],"sourceRoot":""}