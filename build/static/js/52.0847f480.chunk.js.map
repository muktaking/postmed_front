{"version":3,"sources":["components/shared/spinner/spinner.js","../node_modules/react-bootstrap/esm/Badge.js","container/exams/component/examByCat.js","container/exams/examListsByCatShower.js"],"names":["contentCenter","position","top","left","zIndex","SpinnerCustom","animation","role","variant","style","Badge","React","forwardRef","_ref","ref","bsPrefix","pill","className","_ref$as","as","Component","props","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","createElement","_extends","classNames","displayName","defaultProps","ExamByCat","exam","courseId","dispatch","useDispatch","authToken","useSelector","state","auth","token","sm","title","examTypeToString","type","moment","startDate","format","size","description","endDate","to","categoryType","filter","cat","name","length","id","onClick","resetExamResultLoader","defaultMessage","ExamListsByCatShower","useParams","idA","split","useState","exams","setExams","loading","setLoading","useEffect","axios","get","process","then","response","data","catch","e","console","log","map","key","width"],"mappings":"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","file":"static/js/52.0847f480.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nconst contentCenter = {\r\n  //styling to display server response in middle of screen\r\n  position: 'fixed',\r\n  top: '45vh',\r\n  left: '50%',\r\n  zIndex: '10000000000'\r\n}\r\n\r\nexport default function SpinnerCustom() {\r\n  return (\r\n    <Spinner\r\n      animation='grow'\r\n      role='status'\r\n      variant='dark'\r\n      style={contentCenter}\r\n    ></Spinner>\r\n  )\r\n}\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  pill: false\n};\nvar Badge = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      pill = _ref.pill,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'span' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"variant\", \"pill\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, prefix, pill && prefix + \"-pill\", variant && prefix + \"-\" + variant)\n  }));\n});\nBadge.displayName = 'Badge';\nBadge.defaultProps = defaultProps;\nexport default Badge;","//import moment from 'moment'\r\nimport * as moment from 'dayjs'\r\nimport React from 'react'\r\nimport { Badge, Button, Col } from 'react-bootstrap'\r\nimport { BsFileText } from 'react-icons/bs'\r\nimport { FormattedMessage } from 'react-intl'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { resetExamResultLoader } from '../../../store/exams'\r\nimport { examTypeToString } from '../../../utils/faculty'\r\n\r\nexport default function ExamByCat({ exam, courseId = null }) {\r\n  const dispatch = useDispatch()\r\n  const authToken = useSelector((state) => (state.auth.token ? true : false))\r\n  return (\r\n    <>\r\n      <Col sm={12}>\r\n        <h4 className=''>\r\n          {/* <BsLayersFill size='1.5rem' /> */}\r\n          <span className=''>{exam.title}</span>\r\n        </h4>\r\n        <div>\r\n          <Badge variant='warning' className='px-2 py-1'>\r\n            {examTypeToString(exam.type)}\r\n          </Badge>\r\n        </div>\r\n        <div className=''>\r\n          {/* <BsClock size='1.5rem' /> */}\r\n          <span>Start on: </span>\r\n          <Badge className='' variant='light'>\r\n            {moment(exam.startDate).format('YYYY-MMM-DD hh:mm A')}\r\n          </Badge>\r\n        </div>\r\n      </Col>\r\n      <Col sm={12} className='mt-1'>\r\n        <p className=''>\r\n          <BsFileText size='1.5rem' className='m-1' />\r\n          <span className='ml-2'>{exam.description}</span>\r\n        </p>\r\n        <p className='text-right'>\r\n          Ends on:{' '}\r\n          <Badge className='ml-2' variant='danger'>\r\n            {moment(exam.endDate).format('YYYY-MMM-DD hh:mm A')}\r\n          </Badge>\r\n        </p>\r\n        {/* <Badge variant='light' className='mt-3'>\r\n          {!authToken &&\r\n            exam.categoryType.filter((cat) => cat.name === 'Free').length > 0 &&\r\n            'Free'}\r\n        </Badge> */}\r\n        <hr />\r\n        <div>\r\n          <Link\r\n            className='text-white'\r\n            to={\r\n              (!authToken &&\r\n              exam.categoryType.filter((cat) => cat.name === 'Free').length > 0\r\n                ? '/exams/free/'\r\n                : '/exams/') + (courseId ? exam.id + '_' + courseId : exam.id)\r\n            }\r\n          >\r\n            <Button\r\n              variant='outline-primary'\r\n              onClick={() => {\r\n                dispatch(resetExamResultLoader())\r\n              }}\r\n            >\r\n              <FormattedMessage id='btn.start' defaultMessage='Start Exam' />\r\n            </Button>\r\n          </Link>\r\n          <Link\r\n            className='text-white'\r\n            to={\r\n              '/result/rank/' + (courseId ? courseId + '_' + exam.id : exam.id)\r\n            }\r\n          >\r\n            <Button\r\n              onClick={() => {\r\n                dispatch(resetExamResultLoader())\r\n              }}\r\n              variant='outline-primary'\r\n              className='ml-2'\r\n            >\r\n              <FormattedMessage id='btn.rank' defaultMessage='Rank' />\r\n            </Button>\r\n          </Link>\r\n        </div>\r\n      </Col>\r\n    </>\r\n  )\r\n}\r\n","import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Badge, Row } from 'react-bootstrap'\r\nimport { useParams } from 'react-router'\r\nimport Spinner from '../../components/shared/spinner/spinner'\r\nimport ExamByCat from './component/examByCat'\r\n\r\nexport default function ExamListsByCatShower() {\r\n  const { id } = useParams()\r\n  let [name, idA] = [null, null]\r\n  if (id) [name, idA] = id.split('-')\r\n  const [exams, setExams] = useState([])\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  useEffect(() => {\r\n    setLoading(true)\r\n    axios\r\n      .get(process.env.REACT_APP_SITE_URL + '/exams/category/' + idA)\r\n      .then((response) => {\r\n        setLoading(false)\r\n        setExams(response.data)\r\n      })\r\n      .catch((e) => {\r\n        setLoading(false)\r\n        console.log(e)\r\n      })\r\n  }, [idA])\r\n  return (\r\n    <div className='mt-5'>\r\n      {loading && <Spinner />}\r\n      <h2 className='text-center'>\r\n        <span className='mr-2'>Available Exams Under</span>\r\n        <Badge variant='warning'>{name}</Badge>\r\n      </h2>\r\n      {!loading && (\r\n        <p className='text-center text-danger'>\r\n          {exams.length < 1 && 'NO Exam is avaiable.'}\r\n        </p>\r\n      )}\r\n      <div className='d-flex justify-content-center flex-wrap'>\r\n        {exams.map((exam) => (\r\n          <Row\r\n            key={exam.title}\r\n            className='m-2 py-3 pl-2 border border-secondary' // bg-secondary text-white\r\n            style={{ width: '350px' }}\r\n          >\r\n            <ExamByCat exam={exam} />\r\n          </Row>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"],"sourceRoot":""}