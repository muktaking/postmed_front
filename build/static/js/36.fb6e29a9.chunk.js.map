{"version":3,"sources":["config/routes.config.js","config/env.config.js","components/seo/metainfo.js","components/navbar/navbarHome.jsx","components/facebook/facebook.js","components/google/google.js","container/registration/signup.jsx"],"names":["RoutesConfig","Home","metaInfo","title","description","Exams","Dashboard","Course","Reports","Profile","Settings","Category","Question","CourseBuilder","RoutineBuilder","ExamBuilder","ExamEdit","Login","Signup","AUTHOR_NAME","process","_defaultTitle","_defaultDescription","MetaInfo","meta","defer","lang","Helmet","htmlAttributes","titleTemplate","name","content","property","concat","styles","position","top","left","width","zIndex","connect","state","isAuthenticated","auth","token","props","intl","useIntl","itemsName","formatMessage","id","defaultMessage","pagesName","pages","style","bg","variant","expand","to","className","Toggle","aria-controls","Collapse","map","value","index","Item","key","as","isLanding","activeClass","spy","smooth","offset","duration","href","activeClassName","pathname","Facebook","isLoggedIn","photo","message","componentClicked","console","log","responseFacebook","fbRes","status","setState","axios","post","userID","accessToken","then","res","onAuth","data","expirationDate","Date","getTime","expireIn","localStorage","setItem","checkAuthTimeOutLoader","catch","e","picture","url","this","src","alt","appId","size","autoLoad","fields","onClick","callback","Component","dispatch","payload","authSuccess","checkAuthTimeOut","responseOnFailure","response","Google","useDispatch","clientId","buttonText","onSuccess","Axios","idToken","tokenId","err","responseOnSuccess","onFailure","cookiePolicy","SignUp","handleChange","target","formErrors","errorMessage","firstName","validator","isLength","min","max","lastName","userName","isAlphanumeric","email","isEmail","password","matches","repeatPassword","equals","passwordRef","current","checked","submitHandler","preventDefault","gender","loading","rest","valid","Object","values","forEach","v","length","formValid","history","push","statusCode","setTimeout","constraints","toString","React","createRef","animation","role","lg","onSubmit","novalidate","Row","Group","Col","controlId","Label","Control","type","placeholder","onChange","ref","Text","Check","label","defaultChecked"],"mappings":"6GAAA,kCAAO,IAAMA,EAAe,CAC1BC,KAAM,CACJC,SAAU,CACRC,MAAO,uBACPC,YACE,wKAGNC,MAAO,CACLH,SAAU,CACRC,MAAO,iBACPC,YACE,gGAGNE,UAAW,CACTJ,SAAU,CACRC,MAAO,YACPC,YACE,0GAGNG,OAAQ,CACNL,SAAU,CACRC,MAAO,SACPC,YACE,mEAGNI,QAAS,CACPN,SAAU,CACRC,MAAO,UACPC,YACE,oEAGNK,QAAS,CACPP,SAAU,CACRC,MAAO,UACPC,YAAa,wDAGjBM,SAAU,CACRR,SAAU,CACRC,MAAO,aAGXQ,SAAU,CACRT,SAAU,CACRC,MAAO,oBAGXS,SAAU,CACRV,SAAU,CACRC,MAAO,oBAGXU,cAAe,CACbX,SAAU,CACRC,MAAO,kBAGXW,eAAgB,CACdZ,SAAU,CACRC,MAAO,mBAGXY,YAAa,CACXb,SAAU,CACRC,MAAO,gBAGXa,SAAU,CACRd,SAAU,CACRC,MAAO,aAGXc,MAAO,CACLf,SAAU,CACRC,MAAO,QACPC,YAAa,6BAGjBc,OAAQ,CACNhB,SAAU,CACRC,MAAO,SACPC,YAAa,gD,8DCnFNe,EAAcC,M,SCQzBpB,EAAaC,KAAKC,SADLmB,E,EAAPlB,MAAmCmB,E,EAAblB,YA4CfmB,IAzCE,SAAC,GAAD,QACfC,YADe,MACR,GADQ,MAEfC,aAFe,aAGfC,YAHe,MDZaN,KCYb,MAIfjB,aAJe,MAIPkB,EAJO,MAKfjB,mBALe,MAKDkB,EALC,SAOf,kBAACK,EAAA,EAAD,CACEF,MAAOA,EACPtB,MAAOA,EACPyB,eAAgB,CAAEF,QAClBG,cAAa,eDxBOT,cCyBpBI,KAAM,CACJ,CACEM,KAAM,cACNC,QAAS3B,GAEX,CACE4B,SAAU,iBACVD,QAAS3B,GAEX,CACE4B,SAAU,WACVD,QAAS5B,GAEX,CACE6B,SAAU,UACVD,QAAS,WAEX,CACEC,SAAU,WACVD,QAAQ,GAAD,OD1CSX,yBC0CT,cAET,CACEU,KAAM,SACNC,QAASZ,IAEXc,OAAOT,Q,iCClDb,iFASMU,EAAS,CACbC,SAAU,QACVC,IAAK,MACLC,KAAM,MACNC,MAAO,OACPC,OAAQ,QAyGKC,iBANS,SAACC,GACvB,MAAO,CACLC,gBAAsC,OAArBD,EAAME,KAAKC,SAIjBJ,EAtGI,SAACK,GAClB,IAAMC,EAAOC,cACPC,EAAY,CAChBF,EAAKG,cAAc,CAAEC,GAAI,WAAYC,eAAgB,SACrDL,EAAKG,cAAc,CAAEC,GAAI,cAAeC,eAAgB,aAEpDC,EAAYP,EAAMH,gBACpB,CACEI,EAAKG,cAAc,CAAEC,GAAI,SAAUC,eAAgB,cACnDL,EAAKG,cAAc,CAAEC,GAAI,cAAeC,eAAgB,YACxDL,EAAKG,cAAc,CAAEC,GAAI,YAAaC,eAAgB,UACtDL,EAAKG,cAAc,CAAEC,GAAI,WAAYC,eAAgB,SACrDL,EAAKG,cAAc,CAAEC,GAAI,aAAcC,eAAgB,YAEzD,CACEL,EAAKG,cAAc,CAAEC,GAAI,cAAeC,eAAgB,YACxDL,EAAKG,cAAc,CAAEC,GAAI,YAAaC,eAAgB,UACtDL,EAAKG,cAAc,CAAEC,GAAI,WAAYC,eAAgB,SACrDL,EAAKG,cAAc,CAAEC,GAAI,aAAcC,eAAgB,WACvDL,EAAKG,cAAc,CAAEC,GAAI,YAAaC,eAAgB,WAGtDE,EAAQR,EAAMH,gBAChB,CAAC,YAAa,UAAW,QAAS,OAAQ,UAC1C,CAAC,UAAW,QAAS,OAAQ,SAAU,SAE3C,OACE,yBAAKY,MAAOpB,GAEV,kBAAC,IAAD,CAAQqB,GAAG,OAAOC,QAAQ,OAAOC,OAAO,MACtC,kBAAC,OAAD,CAAMC,GAAG,IAAIC,UAAU,gBACpBvC,cAEH,kBAAC,IAAOwC,OAAR,CAAeC,gBAAc,qBAC7B,kBAAC,IAAOC,SAAR,CAAiBZ,GAAG,oBAClB,kBAAC,IAAD,CAAKS,UAAU,WAdT,CAAC,OAAQ,WAqBNI,KAAI,SAACC,EAAOC,GAAR,OACT,kBAAC,IAAIC,KAAL,CAAUC,IAAKH,EAAOI,GAAG,KAAKT,UAAU,QACrCd,EAAMwB,UACL,kBAAC,OAAD,CACEC,YAAY,SACZZ,GAAIM,EACJO,KAAK,EACLC,QAAQ,EACRC,QAAS,IACTC,SAAU,IAEVC,KAAgB,SAAVX,EAAmB,IAAnB,YAA8BA,GACpCL,UAAU,YAGTX,EAAUiB,IAGb,kBAAC,WAAD,CACEP,GAAI,KAAOM,EACXL,UAAU,WACViB,gBAAgB,UAEf5B,EAAUiB,QAKlBZ,EAAMU,KAAI,SAACC,EAAOC,GAAR,OACT,kBAAC,IAAIC,KAAL,CAAUC,IAAKH,EAAOI,GAAG,KAAKT,UAAU,QACtC,kBAAC,UAAD,CAEED,GAAI,CAAEmB,SAAU,IAAMb,GACtBL,UAAU,YAETP,EAAUa,gB,sKCxFvBa,E,2MACJrC,MAAQ,CACNsC,YAAY,EACZjD,KAAM,GACNkD,MAAO,GACPC,QAAS,I,EAEXC,iBAAmB,kBAAMC,QAAQC,IAAI,Y,EACrCC,iBAAmB,SAACC,GACG,YAAjBA,EAAMC,OACR,EAAKC,SAAS,CACZR,MAAO,KACPC,QAAS,8DAGXQ,IACGC,KAAKtE,+CAAmD,CACvDuE,OAAQL,EAAMK,OACdC,YAAaN,EAAMM,cAEpBC,MAAK,SAACC,GACL,EAAKjD,MAAMkD,OAAOD,EAAIE,MAEtB,IAAMC,EAAiB,IAAIC,MACzB,IAAIA,MAAOC,UAAgC,IAApBL,EAAIE,KAAKI,UAGlCC,aAAaC,QAAQ,WAAYR,EAAIE,KAAKJ,aAC1CS,aAAaC,QAAQ,iBAAkBL,GACvCI,aAAaC,QAAQ,SAAUR,EAAIE,KAAK9C,IACxC,EAAKL,MAAM0D,uBAAuBT,EAAIE,KAAKI,aAE5CI,OAAM,SAACC,GACN,EAAKjB,SAAS,CACZ1D,KAAMwD,EAAMxD,KACZkD,MAAOM,EAAMoB,QAAQV,KAAKW,IAC1B1B,QACE,kFAGR,EAAKO,SAAS,CACZT,YAAY,M,wEAmChB,OA5BI6B,KAAKnE,MAAMsC,WAEY,KAAvB6B,KAAKnE,MAAMwC,QACT,yBAAKtB,UAAU,wBACZiD,KAAKnE,MAAMuC,OAAS,yBAAK6B,IAAKD,KAAKnE,MAAMuC,MAAO8B,IAAI,cACrD,uBAAGnD,UAAU,QAAb,SACS,IAAMiD,KAAKnE,MAAMX,KAAO,IAAM8E,KAAKnE,MAAMwC,UAIpD,yBAAKtB,UAAU,yBAAf,6CAMF,yBAAKA,UAAU,WACb,kBAAC,IAAD,CACEoD,MAAO3F,kBACP4F,KAAK,QACLC,UAAU,EACVC,OAAO,qBACPC,QAASP,KAAK1B,iBACdkC,SAAUR,KAAKvB,wB,GAvEJgC,aAuFR7E,gBAAQ,MAPI,SAAC8E,GAC1B,MAAO,CACLvB,OAAQ,SAACwB,GAAD,OAAaD,EAASE,YAAYD,KAC1ChB,uBAAwB,SAACgB,GAAD,OAAaD,EAASG,YAAiBF,QAIpD/E,CAAkCsC,I,iCC7FjD,yGAuBM4C,EAAoB,SAACC,GACzBxC,QAAQC,IAAIuC,IAGC,SAASC,IACtB,IAAMN,EAAWO,cACjB,OACE,6BACE,kBAAC,IAAD,CACEC,SAAU1G,2EACV2G,WAAW,oBACXC,UAAW,SAACL,IA5BM,SAACA,EAAUL,GACnCW,IAAMvC,KAAKtE,6CAAiD,CAC1D8G,QAASP,EAASQ,UAEjBtC,MAAK,SAACC,GACLwB,EAASE,YAAY1B,EAAIE,OACzB,IAAMC,EAAiB,IAAIC,MACzB,IAAIA,MAAOC,UAAgC,IAApBL,EAAIE,KAAKI,UAElCC,aAAaC,QAAQ,WAAYR,EAAIE,KAAKJ,aAC1CS,aAAaC,QAAQ,iBAAkBL,GACvCI,aAAaC,QAAQ,SAAUR,EAAIE,KAAK9C,IACxCoE,EAASG,YAAiB3B,EAAIE,KAAKI,cAEpCI,OAAM,SAAC4B,GAAD,OAASjD,QAAQC,IAAIgD,MAetBC,CAAkBV,EAAUL,IAE9BgB,UAAWZ,EACXa,aAAc,2B,mQCThBC,E,YACJ,WAAY3F,GAAQ,IAAD,8BACjB,4CAAMA,KAyBR4F,aAAe,SAAChC,GAAO,IAAD,EACIA,EAAEiC,OAAlB5G,EADY,EACZA,KAAMkC,EADM,EACNA,MACV2E,EAAa,EAAKlG,MAAMkG,WAI5B,OAFA,EAAKnD,SAAS,CAAEoD,aAAc,OAEtB9G,GACN,IAAK,YACH6G,EAAWE,UAAYC,IAAUC,SAAS/E,EAAO,CAAEgF,IAAK,EAAGC,IAAK,KAC5D,GACA,0DACJ,MACF,IAAK,WACHN,EAAWO,SAAWJ,IAAUC,SAAS/E,EAAO,CAAEgF,IAAK,EAAGC,IAAK,KAC3D,GACA,yDACJ,MACF,IAAK,WACHN,EAAWQ,SACTL,IAAUC,SAAS/E,EAAO,CAAEgF,IAAK,EAAGC,IAAK,MACzCH,IAAUM,eAAepF,GACrB,GACA,4EACN,MACF,IAAK,QACH2E,EAAWU,MAAQP,IAAUQ,QAAQtF,GACjC,GACA,6BACJ,MACF,IAAK,WACH2E,EAAWY,SAAWT,IAAUU,QAC9BxF,EACA,+CAGE,GACA,8GACJ,MACF,IAAK,iBACH2E,EAAWc,eAAiBX,IAAUY,OACpC1F,EACA,EAAK2F,YAAYC,QAAQ5F,OAEvB,GACA,6CACJ,MAMF,IAAK,UACH2E,EAAWkB,QAAUpD,EAAEiC,OAAOmB,QAAU,GAAK,2BAOjD,EAAKrE,SAAL,aACEmD,WAAYA,GACX7G,EAAOkC,KAvFO,EA2FnB8F,cAAgB,SAACrD,GACfA,EAAEsD,iBACF,EAAKvE,SAAS,CAAEoD,aAAc,OAFT,MAYjB,EAAKnG,MARPoG,EAJmB,EAInBA,UACAK,EALmB,EAKnBA,SACAC,EANmB,EAMnBA,SACAE,EAPmB,EAOnBA,MACAE,EARmB,EAQnBA,SACAE,EATmB,EASnBA,eACAO,EAVmB,EAUnBA,OACArB,EAXmB,EAWnBA,WAEF,EAAKnD,SAAS,CAAEyE,SAAS,KArHX,SAAC,GAA6B,IAA3BtB,EAA0B,EAA1BA,WAAeuB,EAAW,8BACzCC,GAAQ,EAQZ,OAPAC,OAAOC,OAAO1B,GAAY2B,SAAQ,SAACC,GACjCA,EAAEC,OAAS,IAAML,GAAQ,MAG3BC,OAAOC,OAAOH,GAAMI,SAAQ,SAACC,GACrB,OAANA,IAAeJ,GAAQ,MAElBA,EA+GHM,CAAU,CACR5B,YACAK,WACAC,WACAE,QACAE,WACAE,iBACAO,SACArB,eA4DF,EAAKnD,SAAS,CACZyE,SAAS,EACTrB,aAAc,gCA3DhBnD,IACGC,KAAKtE,mDAAuD,CAC3DyH,YACAK,WACAC,WACAE,QACAE,WACAE,iBACAO,WAEDnE,MAAK,SAACC,GACL,EAAKN,SAAS,CAAEyE,SAAS,IACN,MAAfnE,EAAIP,QAEN,EAAK1C,MAAM6H,QAAQC,KAAK,CAAE9F,SAAU,cAKvC2B,OAAM,SAACC,GAGN,GAFA,EAAKjB,SAAS,CAAEyE,SAAS,IAErBxD,EAAEkB,SAGJ,GAA0B,OAD1BlB,EAAIA,EAAEkB,UACA3B,KAAK4E,WAET,EAAKpF,SAAS,CACZoD,aAAcnC,EAAET,KAAKf,QAAU,uBAEjC4F,YAAW,WACT,EAAKhI,MAAM6H,QAAQC,KAAK,CAAE9F,SAAU,aACnC,UACE,GAA0B,MAAtB4B,EAAET,KAAK4E,WAAoB,CAEpC,IAAI3F,EAAU,GACdwB,EAAET,KAAKf,QAAQqF,SAAQ,SAACC,GACtBtF,GAAO,UAAOsF,EAAEvG,MAAT,8BACLuG,EAAEvI,SADG,6BAEcoI,OAAOC,OAAOE,EAAEO,aAAaC,WAF3C,SAKT,EAAKvF,SAAS,CACZoD,aAAc3D,SAIhB,EAAKpC,MAAM6H,QAAQC,KAAK,CAAE9F,SAAU,WAItC,EAAKW,SAAS,CACZoD,aAAc,sDAvKxB,EAAKe,YAAcqB,IAAMC,YAEzB,EAAKxI,MAAQ,CACXwH,SAAS,EACTpB,UAAW,KACXK,SAAU,KACVC,SAAU,KACVI,SAAU,KACVE,eAAgB,KAChBO,OAAQ,OACRpB,aAAc,KACdD,WAAY,CACVE,UAAW,GACXK,SAAU,GACVC,SAAU,GACVE,MAAO,GACPE,SAAU,GACVE,eAAgB,GAChBI,QAAS,KArBI,E,sEAsLT,IACAlB,EAAe/B,KAAKnE,MAApBkG,WACR,OACE,yBAAKhF,UAAU,gBACb,kBAAC,IAAa3D,IAAakB,OAAOhB,UAClC,kBAAC,IAAD,CAAYmE,WAAW,IAEvB,yBAAKV,UAAU,WAEb,yBAAKA,UAAU,gBAGjB,yBAAKA,UAAU,uBACb,2CACCiD,KAAKnE,MAAMwH,SACV,kBAAC,IAAD,CACEiB,UAAU,SACVC,KAAK,SACL3H,QAAQ,QACRG,UAAU,SAGd,yBAAKA,UAAU,sBACf,uBAAGA,UAAU,QAAb,8CACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKyH,GAAG,KACN,kBAAC,IAAD,OAEF,kBAAC,IAAD,CAAKA,GAAG,KACN,kBAAC,IAAD,QAGJ,uBAAGzH,UAAU,QAAb,kBACA,kBAAC,IAAD,CAAM0H,SAAUzE,KAAKkD,cAAewB,YAAU,GAC5C,yBAAK3H,UAAU,6BACZiD,KAAKnE,MAAMmG,cAEd,kBAAC,IAAK2C,IAAN,KACE,kBAAC,IAAKC,MAAN,CAAYpH,GAAIqH,IAAKC,UAAU,qBAC7B,kBAAC,IAAKC,MAAN,qBACA,kBAAC,IAAKC,QAAN,CACE9J,KAAK,YACL+J,KAAK,OACLC,YAAY,iBACZC,SAAUnF,KAAK6B,aACf9E,UAAWgF,EAAWE,UAAU2B,OAAS,GAAK,eAE/C7B,EAAWE,UAAU2B,OAAS,GAC7B,0BAAM7G,UAAU,gBAAgBgF,EAAWE,YAI/C,kBAAC,IAAK2C,MAAN,CAAYpH,GAAIqH,IAAKC,UAAU,oBAC7B,kBAAC,IAAKC,MAAN,kBACA,kBAAC,IAAKC,QAAN,CACE9J,KAAK,WACL+J,KAAK,OACLC,YAAY,gBACZC,SAAUnF,KAAK6B,aACf9E,UAAWgF,EAAWO,SAASsB,OAAS,GAAK,eAE9C7B,EAAWO,SAASsB,OAAS,GAC5B,0BAAM7G,UAAU,gBAAgBgF,EAAWO,YAIjD,kBAAC,IAAKqC,IAAN,KACE,kBAAC,IAAKC,MAAN,CAAYpH,GAAIqH,IAAKC,UAAU,oBAC7B,kBAAC,IAAKC,MAAN,iBACA,kBAAC,IAAKC,QAAN,CACE9J,KAAK,WACL+J,KAAK,OACLC,YAAY,gBACZC,SAAUnF,KAAK6B,aACf9E,UAAWgF,EAAWQ,SAASqB,OAAS,GAAK,eAE9C7B,EAAWQ,SAASqB,OAAS,GAC5B,0BAAM7G,UAAU,gBAAgBgF,EAAWQ,WAI/C,kBAAC,IAAKqC,MAAN,CAAYpH,GAAIqH,IAAKC,UAAU,iBAC7B,kBAAC,IAAKC,MAAN,cACA,kBAAC,IAAKC,QAAN,CACE9J,KAAK,QACL+J,KAAK,QACLC,YAAY,aACZC,SAAUnF,KAAK6B,aACf9E,UAAWgF,EAAWU,MAAMmB,OAAS,GAAK,eAE3C7B,EAAWU,MAAMmB,OAAS,GACzB,0BAAM7G,UAAU,gBAAgBgF,EAAWU,SAIjD,kBAAC,IAAKkC,IAAN,KACE,kBAAC,IAAKC,MAAN,CAAYpH,GAAIqH,IAAKC,UAAU,oBAC7B,kBAAC,IAAKC,MAAN,iBACA,kBAAC,IAAKC,QAAN,CACEI,IAAKpF,KAAK+C,YACV7H,KAAK,WACL+J,KAAK,WACLC,YAAY,gBACZC,SAAUnF,KAAK6B,aACf9E,UAAWgF,EAAWY,SAASiB,OAAS,GAAK,eAE/C,kBAAC,IAAKyB,KAAN,CAAWtI,UAAU,IAArB,kBACCgF,EAAWY,SAASiB,OAAS,GAC5B,0BAAM7G,UAAU,gBAAgBgF,EAAWY,WAI/C,kBAAC,IAAKiC,MAAN,CAAYpH,GAAIqH,IAAKC,UAAU,0BAC7B,kBAAC,IAAKC,MAAN,wBACA,kBAAC,IAAKC,QAAN,CACE9J,KAAK,iBACL+J,KAAK,WACLC,YAAY,sBACZC,SAAUnF,KAAK6B,aACf9E,UACEgF,EAAWc,eAAee,OAAS,GAAK,eAG3C7B,EAAWc,eAAee,OAAS,GAClC,0BAAM7G,UAAU,gBACbgF,EAAWc,kBAMpB,kBAAC,IAAK8B,IAAN,KACE,kBAAC,IAAKC,MAAN,CAAYpH,GAAIqH,IAAKC,UAAU,iBAC7B,kBAAC,IAAKC,MAAN,eACA,kBAAC,IAAKC,QAAN,CACE9J,KAAK,SACLsC,GAAG,SACH2H,SAAUnF,KAAK6B,cAEf,4BAAQzE,MAAM,QAAd,QACA,4BAAQA,MAAM,UAAd,aAKN,kBAAC,IAAKwH,MAAN,CAAYtI,GAAG,oBACb,kBAAC,IAAKgJ,MAAN,CACEpK,KAAK,UACL+J,KAAK,WACLM,MACE,oCACE,yEAAqD,IACrD,kBAAC,OAAD,CAAMzI,GAAG,UAAT,4BAIJqI,SAAUnF,KAAK6B,aACf2D,gBAAc,EACdzI,UAAWgF,EAAWkB,QAAQW,OAAS,GAAK,eAE7C7B,EAAWkB,QAAQW,OAAS,GAC3B,0BAAM7G,UAAU,gBAAgBgF,EAAWkB,UAI/C,kBAAC,IAAD,CAAQgC,KAAK,SAASlI,UAAU,cAAhC,WAIF,yBAAKA,UAAU,QACb,sDAEE,kBAAC,OAAD,CAAMD,GAAG,SAASC,UAAU,wBAA5B,mB,GAnWO0D,aA+WNmB","file":"static/js/36.fb6e29a9.chunk.js","sourcesContent":["export const RoutesConfig = {\r\n  Home: {\r\n    metaInfo: {\r\n      title: 'Online Exam Platform',\r\n      description:\r\n        'Online Exam Platform - participate into exam from anywhere anytime with extensive solve immediately. Question and answer is authentic with help of talented mentor.'\r\n    }\r\n  },\r\n  Exams: {\r\n    metaInfo: {\r\n      title: 'Lists Of Exams',\r\n      description:\r\n        'Lists of all available exams. Participate into the exams. Test your skill and find the gap.'\r\n    }\r\n  },\r\n  Dashboard: {\r\n    metaInfo: {\r\n      title: 'Dashboard',\r\n      description:\r\n        'Get all contents at one place. Your routine, reports, activity, featured & latest exam and many more.'\r\n    }\r\n  },\r\n  Course: {\r\n    metaInfo: {\r\n      title: 'Course',\r\n      description:\r\n        'Enroll for your desire courses and prepare for upcoming exams.'\r\n    }\r\n  },\r\n  Reports: {\r\n    metaInfo: {\r\n      title: 'Reports',\r\n      description:\r\n        'In depth reports all of your exam. Take a look and get the gap.'\r\n    }\r\n  },\r\n  Profile: {\r\n    metaInfo: {\r\n      title: 'Profile',\r\n      description: 'Update the profile and get a better user exprience.'\r\n    }\r\n  },\r\n  Settings: {\r\n    metaInfo: {\r\n      title: 'Settings'\r\n    }\r\n  },\r\n  Category: {\r\n    metaInfo: {\r\n      title: 'CategoryBuilder'\r\n    }\r\n  },\r\n  Question: {\r\n    metaInfo: {\r\n      title: 'QuestionBuilder'\r\n    }\r\n  },\r\n  CourseBuilder: {\r\n    metaInfo: {\r\n      title: 'CourseBuilder'\r\n    }\r\n  },\r\n  RoutineBuilder: {\r\n    metaInfo: {\r\n      title: 'RoutineBuilder'\r\n    }\r\n  },\r\n  ExamBuilder: {\r\n    metaInfo: {\r\n      title: 'ExamBuilder'\r\n    }\r\n  },\r\n  ExamEdit: {\r\n    metaInfo: {\r\n      title: 'ExamEdit'\r\n    }\r\n  },\r\n  Login: {\r\n    metaInfo: {\r\n      title: 'Login',\r\n      description: 'Login to access the app.'\r\n    }\r\n  },\r\n  Signup: {\r\n    metaInfo: {\r\n      title: 'Signup',\r\n      description: 'To use the app fully, You have to signup '\r\n    }\r\n  }\r\n}\r\n","export const APP_NAME = process.env.REACT_APP_NAME\r\nexport const DEFAULT_LOCALE = process.env.REACT_APP_LANG\r\nexport const BASE_URL = process.env.REACT_APP_BASE_URL\r\nexport const AUTHOR_NAME = process.env.REACT_APP_AUTHOR_NAME\r\n","import React from 'react'\r\nimport Helmet from 'react-helmet'\r\nimport {\r\n  APP_NAME,\r\n  AUTHOR_NAME,\r\n  BASE_URL,\r\n  DEFAULT_LOCALE\r\n} from '../../config/env.config'\r\nimport { RoutesConfig } from '../../config/routes.config'\r\n\r\nconst { title: _defaultTitle, description: _defaultDescription } =\r\n  RoutesConfig.Home.metaInfo\r\n\r\nconst MetaInfo = ({\r\n  meta = [],\r\n  defer = false,\r\n  lang = DEFAULT_LOCALE,\r\n  title = _defaultTitle,\r\n  description = _defaultDescription\r\n}) => (\r\n  <Helmet\r\n    defer={defer}\r\n    title={title}\r\n    htmlAttributes={{ lang }}\r\n    titleTemplate={`%s | ${APP_NAME}`}\r\n    meta={[\r\n      {\r\n        name: 'description',\r\n        content: description\r\n      },\r\n      {\r\n        property: 'og:description',\r\n        content: description\r\n      },\r\n      {\r\n        property: 'og:title',\r\n        content: title\r\n      },\r\n      {\r\n        property: 'og:type',\r\n        content: 'website'\r\n      },\r\n      {\r\n        property: 'og:image',\r\n        content: `${BASE_URL}/logo.png`\r\n      },\r\n      {\r\n        name: 'author',\r\n        content: AUTHOR_NAME\r\n      }\r\n    ].concat(meta)}\r\n  />\r\n)\r\n\r\nexport default MetaInfo\r\n","import React from 'react'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport { useIntl } from 'react-intl'\r\nimport { connect } from 'react-redux'\r\nimport { Link, NavLink } from 'react-router-dom'\r\nimport { HashLink } from 'react-router-hash-link'\r\nimport { Link as LinkScroll } from 'react-scroll'\r\n\r\nconst styles = {\r\n  position: 'fixed',\r\n  top: '0px',\r\n  left: '0px',\r\n  width: '100%',\r\n  zIndex: '1000'\r\n}\r\n\r\nconst NavbarHome = (props) => {\r\n  const intl = useIntl()\r\n  const itemsName = [\r\n    intl.formatMessage({ id: 'btn.home', defaultMessage: 'home' }),\r\n    intl.formatMessage({ id: 'btn.contact', defaultMessage: 'contact' })\r\n  ]\r\n  const pagesName = props.isAuthenticated\r\n    ? [\r\n        intl.formatMessage({ id: 'btn.db', defaultMessage: 'dashboard' }),\r\n        intl.formatMessage({ id: 'btn.courses', defaultMessage: 'courses' }),\r\n        intl.formatMessage({ id: 'btn.exams', defaultMessage: 'exams' }),\r\n        intl.formatMessage({ id: 'btn.help', defaultMessage: 'help' }),\r\n        intl.formatMessage({ id: 'btn.logout', defaultMessage: 'logout' })\r\n      ]\r\n    : [\r\n        intl.formatMessage({ id: 'btn.courses', defaultMessage: 'courses' }),\r\n        intl.formatMessage({ id: 'btn.exams', defaultMessage: 'exams' }),\r\n        intl.formatMessage({ id: 'btn.help', defaultMessage: 'help' }),\r\n        intl.formatMessage({ id: 'btn.signup', defaultMessage: 'signup' }),\r\n        intl.formatMessage({ id: 'btn.login', defaultMessage: 'login' })\r\n      ]\r\n  const items = ['home', 'contact']\r\n  const pages = props.isAuthenticated\r\n    ? ['dashboard', 'courses', 'exams', 'help', 'logout']\r\n    : ['courses', 'exams', 'help', 'signup', 'login']\r\n\r\n  return (\r\n    <div style={styles}>\r\n      {/* <Promotional /> */}\r\n      <Navbar bg='dark' variant='dark' expand='md'>\r\n        <Link to='/' className='navbar-brand'>\r\n          {process.env.REACT_APP_NAME}\r\n        </Link>\r\n        <Navbar.Toggle aria-controls='navbarResponsive' />\r\n        <Navbar.Collapse id='navbarResponsive'>\r\n          <Nav className='ml-auto'>\r\n            {/* <Scrollspy\r\n          items={items}\r\n          currentClassName={\"active\"}\r\n          className=\"navbar-nav ml-auto\"\r\n          offset={-80}\r\n        > */}\r\n            {items.map((value, index) => (\r\n              <Nav.Item key={value} as='li' className='mr-3'>\r\n                {props.isLanding ? (\r\n                  <LinkScroll\r\n                    activeClass='active'\r\n                    to={value}\r\n                    spy={true}\r\n                    smooth={true}\r\n                    offset={-100}\r\n                    duration={500}\r\n                    // //onSetActive={this.handleSetActive}\r\n                    href={value === 'home' ? '/' : `/#${value}`}\r\n                    className='nav-link'\r\n                    //to={{ pathname: \"/\" }}\r\n                  >\r\n                    {itemsName[index]}\r\n                  </LinkScroll>\r\n                ) : (\r\n                  <HashLink\r\n                    to={'/#' + value}\r\n                    className='nav-link'\r\n                    activeClassName='active'\r\n                  >\r\n                    {itemsName[index]}\r\n                  </HashLink>\r\n                )}\r\n              </Nav.Item>\r\n            ))}\r\n            {pages.map((value, index) => (\r\n              <Nav.Item key={value} as='li' className='mr-3'>\r\n                <NavLink\r\n                  // href={\"/\" + value}\r\n                  to={{ pathname: '/' + value }}\r\n                  className='nav-link'\r\n                >\r\n                  {pagesName[index]}\r\n                </NavLink>\r\n              </Nav.Item>\r\n            ))}\r\n            {/* </Scrollspy> */}\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n        {/* {props.isLanding ? (\r\n        <ScrollToTop showUnder={160}>\r\n          <span className='bg-warning text-white pt-4 px-2'>\r\n            <FaArrowUp  size='1.6rem'  />\r\n          </span>\r\n        </ScrollToTop>\r\n      ) : null} */}\r\n      </Navbar>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isAuthenticated: state.auth.token !== null\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(NavbarHome)\r\n","import axios from 'axios'\r\nimport React, { Component } from 'react'\r\nimport FacebookLogin from 'react-facebook-login'\r\nimport { connect } from 'react-redux'\r\nimport { authSuccess, checkAuthTimeOut } from '../../store/auth'\r\n\r\nclass Facebook extends Component {\r\n  state = {\r\n    isLoggedIn: false,\r\n    name: '',\r\n    photo: '',\r\n    message: ''\r\n  }\r\n  componentClicked = () => console.log('clicked')\r\n  responseFacebook = (fbRes) => {\r\n    if (fbRes.status === 'unknown') {\r\n      this.setState({\r\n        photo: null,\r\n        message: 'Something wrong. To continue you have to approve our app'\r\n      })\r\n    } else {\r\n      axios\r\n        .post(process.env.REACT_APP_SITE_URL + '/auth/facebook', {\r\n          userID: fbRes.userID,\r\n          accessToken: fbRes.accessToken\r\n        })\r\n        .then((res) => {\r\n          this.props.onAuth(res.data)\r\n\r\n          const expirationDate = new Date(\r\n            new Date().getTime() + res.data.expireIn * 1000\r\n          )\r\n\r\n          localStorage.setItem('jwtToken', res.data.accessToken)\r\n          localStorage.setItem('expirationDate', expirationDate)\r\n          localStorage.setItem('userId', res.data.id)\r\n          this.props.checkAuthTimeOutLoader(res.data.expireIn)\r\n        })\r\n        .catch((e) => {\r\n          this.setState({\r\n            name: fbRes.name,\r\n            photo: fbRes.picture.data.url,\r\n            message:\r\n              'Admin has not approved your account yet.Please wait or contact with admin.'\r\n          })\r\n        })\r\n      this.setState({\r\n        isLoggedIn: true\r\n      })\r\n    }\r\n  }\r\n  render() {\r\n    let fbContent\r\n\r\n    if (this.state.isLoggedIn) {\r\n      fbContent =\r\n        this.state.message !== '' ? (\r\n          <div className='d-flex bg-danger p-2'>\r\n            {this.state.photo && <img src={this.state.photo} alt='fb_avatar' />}\r\n            <p className='mt-1'>\r\n              Sorry,{' ' + this.state.name + ' ' + this.state.message}\r\n            </p>\r\n          </div>\r\n        ) : (\r\n          <div className='d-flex bg-success p-2'>\r\n            Wait... You are redirecting to dashboard.\r\n          </div>\r\n        )\r\n    } else {\r\n      fbContent = (\r\n        <div className='mx-auto'>\r\n          <FacebookLogin\r\n            appId={process.env.REACT_APP_FACEBOOK_APP_ID}\r\n            size='small'\r\n            autoLoad={false}\r\n            fields='name,email,picture'\r\n            onClick={this.componentClicked}\r\n            callback={this.responseFacebook}\r\n          />\r\n        </div>\r\n      )\r\n    }\r\n    return fbContent\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onAuth: (payload) => dispatch(authSuccess(payload)),\r\n    checkAuthTimeOutLoader: (payload) => dispatch(checkAuthTimeOut(payload))\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Facebook)\r\n","import Axios from 'axios'\r\nimport React from 'react'\r\nimport GoogleLogin from 'react-google-login'\r\nimport { useDispatch } from 'react-redux'\r\nimport { authSuccess, checkAuthTimeOut } from '../../store/auth'\r\n\r\nconst responseOnSuccess = (response, dispatch) => {\r\n  Axios.post(process.env.REACT_APP_SITE_URL + '/auth/google', {\r\n    idToken: response.tokenId\r\n  })\r\n    .then((res) => {\r\n      dispatch(authSuccess(res.data))\r\n      const expirationDate = new Date(\r\n        new Date().getTime() + res.data.expireIn * 1000\r\n      )\r\n      localStorage.setItem('jwtToken', res.data.accessToken)\r\n      localStorage.setItem('expirationDate', expirationDate)\r\n      localStorage.setItem('userId', res.data.id)\r\n      dispatch(checkAuthTimeOut(res.data.expireIn))\r\n    })\r\n    .catch((err) => console.log(err))\r\n}\r\n\r\nconst responseOnFailure = (response) => {\r\n  console.log(response)\r\n}\r\n\r\nexport default function Google() {\r\n  const dispatch = useDispatch()\r\n  return (\r\n    <div>\r\n      <GoogleLogin\r\n        clientId={process.env.REACT_APP_GOOGLE_CLIENT_ID}\r\n        buttonText='LOGIN WITH GOOGLE'\r\n        onSuccess={(response) => {\r\n          responseOnSuccess(response, dispatch)\r\n        }}\r\n        onFailure={responseOnFailure}\r\n        cookiePolicy={'single_host_origin'}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n","//import React from \"react\";\r\nimport axios from 'axios'\r\nimport React, { Component } from 'react'\r\nimport { Row } from 'react-bootstrap'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Spinner from 'react-bootstrap/Spinner'\r\nimport { Link } from 'react-router-dom'\r\nimport validator from 'validator'\r\nimport '../../assets/scss/section/registration.scss'\r\nimport Facebook from '../../components/facebook/facebook'\r\nimport Google from '../../components/google/google'\r\nimport NavbarHome from '../../components/navbar/navbarHome'\r\nimport MetaInfo from '../../components/seo/metainfo'\r\nimport { RoutesConfig } from '../../config/routes.config'\r\n\r\nconst formValid = ({ formErrors, ...rest }) => {\r\n  let valid = true\r\n  Object.values(formErrors).forEach((v) => {\r\n    v.length > 0 && (valid = false)\r\n  })\r\n\r\n  Object.values(rest).forEach((v) => {\r\n    v === null && (valid = false)\r\n  })\r\n  return valid\r\n}\r\n\r\nclass SignUp extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.passwordRef = React.createRef()\r\n\r\n    this.state = {\r\n      loading: false,\r\n      firstName: null,\r\n      lastName: null,\r\n      userName: null,\r\n      password: null,\r\n      repeatPassword: null,\r\n      gender: 'male',\r\n      errorMessage: null,\r\n      formErrors: {\r\n        firstName: '',\r\n        lastName: '',\r\n        userName: '',\r\n        email: '',\r\n        password: '',\r\n        repeatPassword: '',\r\n        checked: ''\r\n      }\r\n    }\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.target\r\n    let formErrors = this.state.formErrors\r\n\r\n    this.setState({ errorMessage: null })\r\n\r\n    switch (name) {\r\n      case 'firstName':\r\n        formErrors.firstName = validator.isLength(value, { min: 3, max: 15 })\r\n          ? ''\r\n          : 'First Name should be minimum 3 or maximum 20 characters'\r\n        break\r\n      case 'lastName':\r\n        formErrors.lastName = validator.isLength(value, { min: 3, max: 15 })\r\n          ? ''\r\n          : 'Last Name should be minimum 3 or maximum 20 characters'\r\n        break\r\n      case 'userName':\r\n        formErrors.userName =\r\n          validator.isLength(value, { min: 3, max: 15 }) &&\r\n          validator.isAlphanumeric(value)\r\n            ? ''\r\n            : 'Username should be alpha neumaric with minimum 3 or maximum 20 characters'\r\n        break\r\n      case 'email':\r\n        formErrors.email = validator.isEmail(value)\r\n          ? ''\r\n          : 'Email address is not valid'\r\n        break\r\n      case 'password':\r\n        formErrors.password = validator.matches(\r\n          value,\r\n          /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{6,})/\r\n        )\r\n          ? //(?=.*[!@#\\$%\\^&\\*])\r\n            ''\r\n          : 'Password should be minimum 6 characters and contain atleast one capital and lowercase alpha, neumeric value'\r\n        break\r\n      case 'repeatPassword':\r\n        formErrors.repeatPassword = validator.equals(\r\n          value,\r\n          this.passwordRef.current.value\r\n        )\r\n          ? ''\r\n          : 'Password and RepeatPassword should be same'\r\n        break\r\n      //case \"gender\":\r\n      // formErrors.password = validator.isIn(value,[\"male\",\"female\"])\r\n      //   ? \"\"\r\n      //   : \"Password should be minimum 8 characters and contain one alpha,neumeric and special value\";\r\n      // break;\r\n      case 'checked':\r\n        formErrors.checked = e.target.checked ? '' : 'Check Me is not selected'\r\n        break\r\n\r\n      default:\r\n        break\r\n    }\r\n\r\n    this.setState({\r\n      formErrors: formErrors,\r\n      [name]: value\r\n    })\r\n  }\r\n\r\n  submitHandler = (e) => {\r\n    e.preventDefault()\r\n    this.setState({ errorMessage: null })\r\n    const {\r\n      firstName,\r\n      lastName,\r\n      userName,\r\n      email,\r\n      password,\r\n      repeatPassword,\r\n      gender,\r\n      formErrors\r\n    } = this.state\r\n    this.setState({ loading: true })\r\n\r\n    if (\r\n      formValid({\r\n        firstName,\r\n        lastName,\r\n        userName,\r\n        email,\r\n        password,\r\n        repeatPassword,\r\n        gender,\r\n        formErrors\r\n      })\r\n    ) {\r\n      axios\r\n        .post(process.env.REACT_APP_SITE_URL + '/auth/registration', {\r\n          firstName,\r\n          lastName,\r\n          userName,\r\n          email,\r\n          password,\r\n          repeatPassword,\r\n          gender\r\n        })\r\n        .then((res) => {\r\n          this.setState({ loading: false })\r\n          if (res.status === 201) {\r\n            // <Route exact path=\"/\">\r\n            this.props.history.push({ pathname: '/login' })\r\n            // </Route>;\r\n          }\r\n        })\r\n\r\n        .catch((e) => {\r\n          this.setState({ loading: false })\r\n          //  console.log(\"/b/b onError:  \", e.response);\r\n          if (e.response) {\r\n            // if server has response\r\n            e = e.response\r\n            if (e.data.statusCode === 409) {\r\n              // user duplication error, so redirecting to login page\r\n              this.setState({\r\n                errorMessage: e.data.message + ' Redirecting .....'\r\n              })\r\n              setTimeout(() => {\r\n                this.props.history.push({ pathname: '/login' })\r\n              }, 3000)\r\n            } else if (e.data.statusCode === 400) {\r\n              // specific server validation error\r\n              let message = ''\r\n              e.data.message.forEach((v) => {\r\n                message += `${v.value} is not valid in [ ${\r\n                  v.property\r\n                } ] field due to \" ${Object.values(v.constraints).toString()} \"`\r\n              })\r\n              //  console.log(message);\r\n              this.setState({\r\n                errorMessage: message\r\n              })\r\n            } else {\r\n              // for any other server error response\r\n              this.props.history.push({ pathname: '/' })\r\n            }\r\n          } else {\r\n            // if server has no any response\r\n            this.setState({\r\n              errorMessage: 'Server may be down. Please try sometime later'\r\n            })\r\n          }\r\n        })\r\n    } else {\r\n      this.setState({\r\n        loading: false,\r\n        errorMessage: 'Please fill form correctly.'\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { formErrors } = this.state\r\n    return (\r\n      <div className='registration'>\r\n        <MetaInfo {...RoutesConfig.Signup.metaInfo} />\r\n        <NavbarHome isLanding={false} />\r\n        {/* Landing */}\r\n        <div className='landing'>\r\n          {/* <div className=\"home-wrap\"> */}\r\n          <div className='home-inner'></div>\r\n          {/* </div> */}\r\n        </div>\r\n        <div className='caption text-center'>\r\n          <h1>Signup Form</h1>\r\n          {this.state.loading && (\r\n            <Spinner\r\n              animation='border'\r\n              role='status'\r\n              variant='light'\r\n              className='mb-2'\r\n            ></Spinner>\r\n          )}\r\n          <div className='heading-underline'></div>\r\n          <p className='mt-3'>Easily Signup with your Facebook or Google</p>\r\n          <Row>\r\n            <Col lg='6'>\r\n              <Facebook />\r\n            </Col>\r\n            <Col lg='6'>\r\n              <Google />\r\n            </Col>\r\n          </Row>\r\n          <p className='mt-3'>Or, Create One</p>\r\n          <Form onSubmit={this.submitHandler} novalidate>\r\n            <div className='text-white mb-2 bg-danger'>\r\n              {this.state.errorMessage}\r\n            </div>\r\n            <Form.Row>\r\n              <Form.Group as={Col} controlId='formGridFirstName'>\r\n                <Form.Label>First Name: </Form.Label>\r\n                <Form.Control\r\n                  name='firstName'\r\n                  type='text'\r\n                  placeholder='Type firstname'\r\n                  onChange={this.handleChange}\r\n                  className={formErrors.firstName.length > 0 && 'is-invalid'}\r\n                />\r\n                {formErrors.firstName.length > 0 && (\r\n                  <span className='errorMessage'>{formErrors.firstName}</span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              <Form.Group as={Col} controlId='formGridLastName'>\r\n                <Form.Label>Last Name</Form.Label>\r\n                <Form.Control\r\n                  name='lastName'\r\n                  type='text'\r\n                  placeholder='Type lastname'\r\n                  onChange={this.handleChange}\r\n                  className={formErrors.lastName.length > 0 && 'is-invalid'}\r\n                />\r\n                {formErrors.lastName.length > 0 && (\r\n                  <span className='errorMessage'>{formErrors.lastName}</span>\r\n                )}\r\n              </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row>\r\n              <Form.Group as={Col} controlId='formGridUserName'>\r\n                <Form.Label>Username</Form.Label>\r\n                <Form.Control\r\n                  name='userName'\r\n                  type='text'\r\n                  placeholder='Type username'\r\n                  onChange={this.handleChange}\r\n                  className={formErrors.userName.length > 0 && 'is-invalid'}\r\n                />\r\n                {formErrors.userName.length > 0 && (\r\n                  <span className='errorMessage'>{formErrors.userName}</span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              <Form.Group as={Col} controlId='formGridEmail'>\r\n                <Form.Label>Email</Form.Label>\r\n                <Form.Control\r\n                  name='email'\r\n                  type='email'\r\n                  placeholder='Type email'\r\n                  onChange={this.handleChange}\r\n                  className={formErrors.email.length > 0 && 'is-invalid'}\r\n                />\r\n                {formErrors.email.length > 0 && (\r\n                  <span className='errorMessage'>{formErrors.email}</span>\r\n                )}\r\n              </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row>\r\n              <Form.Group as={Col} controlId='formGridPassword'>\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control\r\n                  ref={this.passwordRef}\r\n                  name='password'\r\n                  type='password'\r\n                  placeholder='Type password'\r\n                  onChange={this.handleChange}\r\n                  className={formErrors.password.length > 0 && 'is-invalid'}\r\n                />\r\n                <Form.Text className=''>e.g. 123abcDEF</Form.Text>\r\n                {formErrors.password.length > 0 && (\r\n                  <span className='errorMessage'>{formErrors.password}</span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              <Form.Group as={Col} controlId='formGridRepeatPassword'>\r\n                <Form.Label>Repeat Password</Form.Label>\r\n                <Form.Control\r\n                  name='repeatPassword'\r\n                  type='password'\r\n                  placeholder='Type password again'\r\n                  onChange={this.handleChange}\r\n                  className={\r\n                    formErrors.repeatPassword.length > 0 && 'is-invalid'\r\n                  }\r\n                />\r\n                {formErrors.repeatPassword.length > 0 && (\r\n                  <span className='errorMessage'>\r\n                    {formErrors.repeatPassword}\r\n                  </span>\r\n                )}\r\n              </Form.Group>\r\n            </Form.Row>\r\n\r\n            <Form.Row>\r\n              <Form.Group as={Col} controlId='formGridState'>\r\n                <Form.Label>Gender</Form.Label>\r\n                <Form.Control\r\n                  name='gender'\r\n                  as='select'\r\n                  onChange={this.handleChange}\r\n                >\r\n                  <option value='male'>Male</option>\r\n                  <option value='female'>Female</option>\r\n                </Form.Control>\r\n              </Form.Group>\r\n            </Form.Row>\r\n\r\n            <Form.Group id='formGridCheckbox'>\r\n              <Form.Check\r\n                name='checked'\r\n                type='checkbox'\r\n                label={\r\n                  <>\r\n                    <span>By checking the box, You will agree our</span>{' '}\r\n                    <Link to='/terms'>'terms and conditions.'</Link>\r\n                  </>\r\n                }\r\n                //checked={true}\r\n                onChange={this.handleChange}\r\n                defaultChecked\r\n                className={formErrors.checked.length > 0 && 'is-invalid'}\r\n              />\r\n              {formErrors.checked.length > 0 && (\r\n                <span className='errorMessage'>{formErrors.checked}</span>\r\n              )}\r\n            </Form.Group>\r\n\r\n            <Button type='submit' className='btn-submit'>\r\n              Submit\r\n            </Button>\r\n          </Form>\r\n          <div className='mt-3'>\r\n            <p>\r\n              Already have an account?\r\n              <Link to='/login' className='btn btn-primary ml-2'>\r\n                Log In\r\n              </Link>\r\n            </p>\r\n          </div>\r\n        </div>\r\n        {/* End of Landing */}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SignUp\r\n"],"sourceRoot":""}