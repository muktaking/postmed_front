{"version":3,"sources":["config/routes.config.js","config/env.config.js","components/seo/metainfo.js","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/Card.js","../node_modules/react-bootstrap/esm/Table.js","components/result/timeline.js","container/reports/lineCharts.js","container/reports/pieCharts.js","container/reports/reports.js"],"names":["RoutesConfig","Home","metaInfo","title","description","Exams","Dashboard","Course","Reports","Profile","Settings","Category","Question","CourseBuilder","RoutineBuilder","ExamBuilder","ExamEdit","Login","Signup","AUTHOR_NAME","process","_defaultTitle","_defaultDescription","MetaInfo","meta","defer","lang","Helmet","htmlAttributes","titleTemplate","name","content","property","concat","CardImg","React","forwardRef","_ref","ref","bsPrefix","className","variant","_ref$as","as","Component","props","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","createElement","_extends","classNames","displayName","defaultProps","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","Card","bg","text","border","body","children","cardContext","useMemo","cardHeaderBsPrefix","CardContext","Provider","value","Img","Title","Subtitle","Body","Link","Text","Header","Footer","ImgOverlay","Table","striped","bordered","borderless","hover","size","responsive","decoratedBsPrefix","classes","table","responsiveClass","type","Timeline","useState","userDashExamInfo","setUserDashExamInfo","useEffect","axios","get","then","response","status","data","catch","e","console","log","userExamStat","map","examStat","examTitles","_","examType","marks","stat","averageScore","totalMark","lastAttemptTimes","Accordion","ind","Toggle","Button","eventKey","Badge","style","fontSize","Collapse","id","key","data-date","moment","format","LineCharts","labels","dataSetFirst","dataSetSec","datasets","label","fill","borderColor","backgroundColor","borderWidth","options","scales","yAxes","ticks","beginAtZero","min","max","PieCharts","hoverOffset","isActive","setIsActive","courses","setCourses","examStats","setExamStats","examDetails","setExamDetails","advancedAnalyTics","setAdvancedAnalyTics","showTimeline","setShowTimeline","examActivityStat","setExamActivityStat","res","Row","Col","sm","Form","Control","custom","onChange","target","error","course","Check","length","exams","examId","onClick","examTitle","score","reduce","previousValue","currentValue","Number","toFixed","attemptNumbers","to","courseId","colSpan","totalScore","totalWrongScore","totalPenaltyScore","totalRightStems","totalWrongStems","totalRightSbaQuestions","totalWrongSbaQuestions","attemptTime","i","singleQuestionMark","questions","questionStemLength"],"mappings":"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","file":"static/js/37.cf47fcd6.chunk.js","sourcesContent":["export const RoutesConfig = {\r\n  Home: {\r\n    metaInfo: {\r\n      title: 'Online Exam Platform',\r\n      description:\r\n        'Online Exam Platform - participate into exam from anywhere anytime with extensive solve immediately. Question and answer is authentic with help of talented mentor.'\r\n    }\r\n  },\r\n  Exams: {\r\n    metaInfo: {\r\n      title: 'Lists Of Exams',\r\n      description:\r\n        'Lists of all available exams. Participate into the exams. Test your skill and find the gap.'\r\n    }\r\n  },\r\n  Dashboard: {\r\n    metaInfo: {\r\n      title: 'Dashboard',\r\n      description:\r\n        'Get all contents at one place. Your routine, reports, activity, featured & latest exam and many more.'\r\n    }\r\n  },\r\n  Course: {\r\n    metaInfo: {\r\n      title: 'Course',\r\n      description:\r\n        'Enroll for your desire courses and prepare for upcoming exams.'\r\n    }\r\n  },\r\n  Reports: {\r\n    metaInfo: {\r\n      title: 'Reports',\r\n      description:\r\n        'In depth reports all of your exam. Take a look and get the gap.'\r\n    }\r\n  },\r\n  Profile: {\r\n    metaInfo: {\r\n      title: 'Profile',\r\n      description: 'Update the profile and get a better user exprience.'\r\n    }\r\n  },\r\n  Settings: {\r\n    metaInfo: {\r\n      title: 'Settings'\r\n    }\r\n  },\r\n  Category: {\r\n    metaInfo: {\r\n      title: 'CategoryBuilder'\r\n    }\r\n  },\r\n  Question: {\r\n    metaInfo: {\r\n      title: 'QuestionBuilder'\r\n    }\r\n  },\r\n  CourseBuilder: {\r\n    metaInfo: {\r\n      title: 'CourseBuilder'\r\n    }\r\n  },\r\n  RoutineBuilder: {\r\n    metaInfo: {\r\n      title: 'RoutineBuilder'\r\n    }\r\n  },\r\n  ExamBuilder: {\r\n    metaInfo: {\r\n      title: 'ExamBuilder'\r\n    }\r\n  },\r\n  ExamEdit: {\r\n    metaInfo: {\r\n      title: 'ExamEdit'\r\n    }\r\n  },\r\n  Login: {\r\n    metaInfo: {\r\n      title: 'Login',\r\n      description: 'Login to access the app.'\r\n    }\r\n  },\r\n  Signup: {\r\n    metaInfo: {\r\n      title: 'Signup',\r\n      description: 'To use the app fully, You have to signup '\r\n    }\r\n  }\r\n}\r\n","export const APP_NAME = process.env.REACT_APP_NAME\r\nexport const DEFAULT_LOCALE = process.env.REACT_APP_LANG\r\nexport const BASE_URL = process.env.REACT_APP_BASE_URL\r\nexport const AUTHOR_NAME = process.env.REACT_APP_AUTHOR_NAME\r\n","import React from 'react'\r\nimport Helmet from 'react-helmet'\r\nimport {\r\n  APP_NAME,\r\n  AUTHOR_NAME,\r\n  BASE_URL,\r\n  DEFAULT_LOCALE\r\n} from '../../config/env.config'\r\nimport { RoutesConfig } from '../../config/routes.config'\r\n\r\nconst {\r\n  title: _defaultTitle,\r\n  description: _defaultDescription\r\n} = RoutesConfig.Home.metaInfo\r\n\r\nconst MetaInfo = ({\r\n  meta = [],\r\n  defer = false,\r\n  lang = DEFAULT_LOCALE,\r\n  title = _defaultTitle,\r\n  description = _defaultDescription\r\n}) => (\r\n  <Helmet\r\n    defer={defer}\r\n    title={title}\r\n    htmlAttributes={{ lang }}\r\n    titleTemplate={`%s | ${APP_NAME}`}\r\n    meta={[\r\n      {\r\n        name: 'description',\r\n        content: description\r\n      },\r\n      {\r\n        property: 'og:description',\r\n        content: description\r\n      },\r\n      {\r\n        property: 'og:title',\r\n        content: title\r\n      },\r\n      {\r\n        property: 'og:type',\r\n        content: 'website'\r\n      },\r\n      {\r\n        property: 'og:image',\r\n        content: `${BASE_URL}/logo.png`\r\n      },\r\n      {\r\n        name: 'author',\r\n        content: AUTHOR_NAME\r\n      }\r\n    ].concat(meta)}\r\n  />\r\n)\r\n\r\nexport default MetaInfo\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  variant: null\n};\nvar CardImg = React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\nfunction (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      variant = _ref.variant,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'img' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"variant\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return React.createElement(Component, _extends({\n    ref: ref,\n    className: classNames(variant ? prefix + \"-\" + variant : prefix, className)\n  }, props));\n});\nCardImg.displayName = 'CardImg';\nCardImg.defaultProps = defaultProps;\nexport default CardImg;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardContext from './CardContext';\nimport CardImg from './CardImg';\nvar DivStyledAsH5 = divWithClassName('h5');\nvar DivStyledAsH6 = divWithClassName('h6');\nvar CardBody = createWithBsPrefix('card-body');\nvar defaultProps = {\n  body: false\n};\nvar Card = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      bg = _ref.bg,\n      text = _ref.text,\n      border = _ref.border,\n      body = _ref.body,\n      children = _ref.children,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"bg\", \"text\", \"border\", \"body\", \"children\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'card');\n  var cardContext = useMemo(function () {\n    return {\n      cardHeaderBsPrefix: prefix + \"-header\"\n    };\n  }, [prefix]);\n  return React.createElement(CardContext.Provider, {\n    value: cardContext\n  }, React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, prefix, bg && \"bg-\" + bg, text && \"text-\" + text, border && \"border-\" + border)\n  }), body ? React.createElement(CardBody, null, children) : children));\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nCard.Img = CardImg;\nCard.Title = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nCard.Subtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nCard.Body = CardBody;\nCard.Link = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nCard.Text = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nCard.Header = createWithBsPrefix('card-header');\nCard.Footer = createWithBsPrefix('card-footer');\nCard.ImgOverlay = createWithBsPrefix('card-img-overlay');\nexport default Card;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar Table = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      striped = _ref.striped,\n      bordered = _ref.bordered,\n      borderless = _ref.borderless,\n      hover = _ref.hover,\n      size = _ref.size,\n      variant = _ref.variant,\n      responsive = _ref.responsive,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"striped\", \"bordered\", \"borderless\", \"hover\", \"size\", \"variant\", \"responsive\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  var classes = classNames(className, decoratedBsPrefix, variant && decoratedBsPrefix + \"-\" + variant, size && decoratedBsPrefix + \"-\" + size, striped && decoratedBsPrefix + \"-striped\", bordered && decoratedBsPrefix + \"-bordered\", borderless && decoratedBsPrefix + \"-borderless\", hover && decoratedBsPrefix + \"-hover\");\n  var table = React.createElement(\"table\", _extends({}, props, {\n    className: classes,\n    ref: ref\n  }));\n\n  if (responsive) {\n    var responsiveClass = decoratedBsPrefix + \"-responsive\";\n\n    if (typeof responsive === 'string') {\n      responsiveClass = responsiveClass + \"-\" + responsive;\n    }\n\n    return React.createElement(\"div\", {\n      className: responsiveClass\n    }, table);\n  }\n\n  return table;\n});\nexport default Table;","import axios from 'axios'\r\nimport * as moment from 'dayjs'\r\nimport * as _ from 'lodash'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Accordion, Badge, Button, Card } from 'react-bootstrap'\r\nimport './timeline.css'\r\n\r\nconst type = [\r\n  'Assignment',\r\n  'Weekly',\r\n  'Monthly',\r\n  'Assesment',\r\n  'Term',\r\n  'Test',\r\n  'Final'\r\n]\r\n\r\nexport default function Timeline() {\r\n  const [userDashExamInfo, setUserDashExamInfo] = useState([])\r\n  useEffect(() => {\r\n    axios\r\n      .get(process.env.REACT_APP_SITE_URL + '/dashboard')\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          setUserDashExamInfo(response.data)\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        console.log(e)\r\n      })\r\n  }, [])\r\n\r\n  const userExamStat = userDashExamInfo.map((examStat) => {\r\n    return {\r\n      examTitles: _.map(examStat.userExamStat.examTitles, 'title'),\r\n      examType: _.map(examStat.userExamStat.examTitles, 'type'),\r\n      marks: _.map(\r\n        examStat.userExamStat.stat,\r\n        (value) => `Mark: ${value.averageScore} Out of ${value.totalMark}`\r\n      ),\r\n      lastAttemptTimes: _.map(examStat.userExamStat.stat, 'lastAttemptTime')\r\n    }\r\n  })\r\n\r\n  // const examTitles = userExamStat ? _.map(userExamStat.examTitles, 'title') : []\r\n  // const examType = userExamStat ? _.map(userExamStat.examTitles, 'type') : []\r\n  // const marks = userExamStat\r\n  //   ? _.map(\r\n  //       userExamStat.stat,\r\n  //       (value) => `Mark: ${value.averageScore} Out of ${value.totalMark}`\r\n  //     )\r\n  //   : []\r\n  // const lastAttemptTimes = userExamStat\r\n  //   ? _.map(userExamStat.stat, 'lastAttemptTime')\r\n  //   : []\r\n\r\n  return (\r\n    <Accordion>\r\n      {userExamStat.map(\r\n        ({ examTitles, examType, marks, lastAttemptTimes }, ind) => (\r\n          <Card>\r\n            <Card.Header>\r\n              <Accordion.Toggle as={Button} variant='link' eventKey={ind}>\r\n                Exams Under{' '}\r\n                <Badge variant='primary' style={{ fontSize: '1rem' }}>\r\n                  {userDashExamInfo[ind].title}\r\n                </Badge>{' '}\r\n                Course\r\n              </Accordion.Toggle>\r\n            </Card.Header>\r\n            <Accordion.Collapse eventKey={ind}>\r\n              <Card.Body>\r\n                <div className='container'>\r\n                  <div className='row'>\r\n                    <div className='col-md-12'>\r\n                      <div className='card'>\r\n                        <div className='card-body'>\r\n                          <div id='content'>\r\n                            <ul className='timeline'>\r\n                              {examTitles.map((value, ind) => (\r\n                                <li\r\n                                  key={value}\r\n                                  className='event'\r\n                                  data-date={moment(\r\n                                    lastAttemptTimes[ind]\r\n                                  ).format('DD-MMM-YYYY, h:mm a')}\r\n                                >\r\n                                  <h3>{value}</h3>\r\n                                  <p className='text-danger'>\r\n                                    {type[examType[ind]]}\r\n                                  </p>\r\n                                  <p className='text-secondary'>{marks[ind]}</p>\r\n                                </li>\r\n                              ))}\r\n                            </ul>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </Card.Body>\r\n            </Accordion.Collapse>\r\n          </Card>\r\n        )\r\n      )}\r\n    </Accordion>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Line } from 'react-chartjs-2'\r\n\r\nexport default function LineCharts({ labels, dataSetFirst, dataSetSec }) {\r\n  const options = {\r\n    responsive: true, // Instruct chart js to respond nicely.\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            beginAtZero: false,\r\n            min: 0,\r\n            max: 100\r\n          }\r\n        }\r\n      ]\r\n    }\r\n  }\r\n  const data = {\r\n    labels: [...labels],\r\n    datasets: [\r\n      {\r\n        label: 'Score(Percentage)', // Name the series\r\n        data: [...dataSetFirst], // Specify the data values array\r\n        fill: false,\r\n        borderColor: '#2196f3', // Add custom color border (Line)\r\n        backgroundColor: '#2196f3', // Add custom color background (Points and Fill)\r\n        borderWidth: 3 // Specify bar border width\r\n      },\r\n      {\r\n        label: 'Wrong Score(Percentage)', // Name the series\r\n        data: [...dataSetSec], // Specify the data values array\r\n        fill: false,\r\n        borderColor: '#FF8C33', // Add custom color border (Line)\r\n        backgroundColor: '#FF8C33', // Add custom color background (Points and Fill)\r\n        borderWidth: 2 // Specify bar border width\r\n        //type: 'bar'\r\n      }\r\n    ]\r\n  }\r\n  return (\r\n    <>\r\n      <Line data={data} options={options} />\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Pie } from 'react-chartjs-2'\r\n\r\nexport default function PieCharts({ labels, dataSetFirst }) {\r\n  const options = {\r\n    responsive: true // Instruct chart js to respond nicely.\r\n    // scales: {\r\n    //   yAxes: [\r\n    //     {\r\n    //       ticks: {\r\n    //         beginAtZero: false,\r\n    //         min: 0,\r\n    //         max: 100\r\n    //       }\r\n    //     }\r\n    //   ]\r\n    // }\r\n  }\r\n  const data = {\r\n    labels: [...labels],\r\n    datasets: [\r\n      {\r\n        label: 'Score(Percentage)', // Name the series\r\n        data: [...dataSetFirst], // Specify the data values array\r\n        backgroundColor: ['#2196f3', '#FF4533', '#706564'], // Add custom color background (Points and Fill)\r\n        hoverOffset: 4\r\n      }\r\n    ]\r\n  }\r\n  return (\r\n    <>\r\n      <Pie data={data} options={options} />\r\n    </>\r\n  )\r\n}\r\n","import axios from 'axios'\r\n//import moment from 'moment'\r\nimport * as moment from 'dayjs'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Badge, Button, Col, Form, Row, Table } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport Timeline from '../../components/result/timeline'\r\nimport MetaInfo from '../../components/seo/metainfo'\r\nimport { RoutesConfig } from '../../config/routes.config'\r\nimport LineCharts from './lineCharts'\r\nimport PieCharts from './pieCharts'\r\n\r\nexport default function Reports() {\r\n  const [isActive, setIsActive] = useState(null)\r\n  const [courses, setCourses] = useState([])\r\n  const [examStats, setExamStats] = useState([])\r\n  const [examDetails, setExamDetails] = useState(null)\r\n  const [advancedAnalyTics, setAdvancedAnalyTics] = useState(false)\r\n  const [showTimeline, setShowTimeline] = useState(false)\r\n  // const [examTitle, setExamTitle] = useState('')\r\n  // const [examTotalMark, setExamTotalMark] = useState(0)\r\n  const [examActivityStat, setExamActivityStat] = useState([])\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(process.env.REACT_APP_SITE_URL + '/courses/enrolled/courses')\r\n      .then((res) => {\r\n        setCourses(res.data)\r\n      })\r\n      .catch((e) => {\r\n        console.log(e)\r\n      })\r\n  }, [])\r\n\r\n  const courseSelectHandler = (e) => {\r\n    axios\r\n      .get(\r\n        process.env.REACT_APP_SITE_URL +\r\n          '/userExamProfile/courses/' +\r\n          e.target.value\r\n      )\r\n      .then((res) => {\r\n        //console.log(res.data)\r\n        setExamStats(res.data)\r\n      })\r\n      .catch((error) => console.log(error))\r\n  }\r\n\r\n  const getExamDetailsById = (examId) => {\r\n    axios\r\n      .get(process.env.REACT_APP_SITE_URL + '/exams/' + examId)\r\n      .then((res) => {\r\n        console.log(res.data)\r\n        setExamDetails(res.data)\r\n      })\r\n      .catch((error) => console.log(error))\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <MetaInfo {...RoutesConfig.Reports.metaInfo} />\r\n      <h3>Reports</h3>\r\n      <Row>\r\n        <Col sm={3}>\r\n          <Form.Control\r\n            as='select'\r\n            className='mr-sm-2'\r\n            id='inlineFormCustomSelect'\r\n            custom\r\n            onChange={courseSelectHandler}\r\n          >\r\n            <option>Select Course</option>\r\n            {courses.map((course) => (\r\n              <option value={course.id}>{course.title}</option>\r\n            ))}\r\n          </Form.Control>\r\n\r\n          <p className='mt-4 mr-1 pl-3'>\r\n            <span className='text-info'>Steps</span>\r\n            <br />\r\n            <span>1. First Select A Course</span>\r\n            <br />\r\n            <span>2. Then click on any</span>{' '}\r\n            <Badge variant='info' className='px-3 py-1 text-info'>\r\n              -\r\n            </Badge>{' '}\r\n            <span>colored 'Exam Title' cell to get details</span>\r\n            <br />\r\n            <span>\r\n              3. Switched to 'Advanced Analytics' to get in depth view\r\n            </span>\r\n          </p>\r\n          <hr />\r\n          <div>\r\n            <p>More Options</p>\r\n            <Form.Check\r\n              type='switch'\r\n              id='custom-switch-timeline'\r\n              label='Show Timeline'\r\n              onChange={() => {\r\n                setShowTimeline(!showTimeline)\r\n              }}\r\n            />\r\n          </div>\r\n        </Col>\r\n        <Col sm={9}>\r\n          {showTimeline && (\r\n            <div className='mb-3'>\r\n              <h4>\r\n                Timeline <Badge>(Click title to expand)</Badge>\r\n              </h4>\r\n              <Timeline />\r\n              <hr />\r\n            </div>\r\n          )}\r\n          <h4>Exams Reports</h4>\r\n          <Table striped bordered hover responsive size='sm'>\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>Exam Title</th>\r\n                <th>Avg Score</th>\r\n                <th>Total Mark</th>\r\n                <th>Attempt</th>\r\n                <th>Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {examStats.length > 0 &&\r\n              examStats[0].courses.length > 0 &&\r\n              examStats[0].courses[0].exams.length > 0 ? (\r\n                examStats[0].courses[0].exams.map((examStat, ind) => (\r\n                  <tr\r\n                    className={\r\n                      isActive === examStat.examId ? 'bg-info text-white' : ''\r\n                    }\r\n                  >\r\n                    <td>{ind + 1}</td>\r\n                    <td\r\n                      onClick={() => {\r\n                        setIsActive(examStat.examId)\r\n                        getExamDetailsById(examStat.examId)\r\n                        // setExamTitle(examStat.examTitle)\r\n                        // setExamTotalMark(examStat.totalMark)\r\n                        setExamActivityStat(examStat.examActivityStat)\r\n                      }}\r\n                      className='bg-info text-white'\r\n                    >\r\n                      {examStat.examTitle}\r\n                    </td>\r\n                    <td>\r\n                      {(\r\n                        examStat.score.reduce(\r\n                          (previousValue, currentValue) =>\r\n                            Number(previousValue) + Number(currentValue)\r\n                        ) / examStat.score.length\r\n                      ).toFixed(2)}\r\n                    </td>\r\n                    <td>{examStat.totalMark}</td>\r\n                    <td>{examStat.attemptNumbers}</td>\r\n                    <td>\r\n                      <Link\r\n                        className='mb-2 mr-2'\r\n                        to={`/reports/actions?courseId=${examStats[0].courses[0].courseId}&examId=${examStat.examId}&answers=0`}\r\n                      >\r\n                        <Button size='sm'>Questions</Button>\r\n                      </Link>\r\n                      <Link\r\n                        to={`/reports/actions?courseId=${examStats[0].courses[0].courseId}&examId=${examStat.examId}&answers=1`}\r\n                      >\r\n                        <Button size='sm'>Questions With Answers</Button>\r\n                      </Link>\r\n                    </td>\r\n                  </tr>\r\n                ))\r\n              ) : (\r\n                <tr>\r\n                  <td colSpan={7} className='text-danger text-center'>\r\n                    You do not take part any exam under the course.\r\n                  </td>\r\n                </tr>\r\n              )}\r\n            </tbody>\r\n          </Table>\r\n          <div className='bg-light pl-3 py-2 my-3'>\r\n            {examDetails && (\r\n              <>\r\n                <h3 className='text-center text-info my-2'>\r\n                  In Depth about: {examDetails.title}{' '}\r\n                </h3>\r\n                <Form.Check\r\n                  type='switch'\r\n                  id='custom-switch'\r\n                  label='Advanced Analytics'\r\n                  onChange={() => {\r\n                    setAdvancedAnalyTics(!advancedAnalyTics)\r\n                  }}\r\n                />\r\n                <Table striped bordered hover responsive className='mt-2'>\r\n                  <thead>\r\n                    <tr>\r\n                      <th>#</th>\r\n                      <th>Score</th>\r\n                      <th>Wrong Score</th>\r\n                      <th>Penalty Score</th>\r\n                      <th>Total Right Stems Number</th>\r\n                      <th>Total Wrong Stems Number</th>\r\n                      <th>Total Right Sba Questions (only Sba) </th>\r\n                      <th>Total Wrong Sba Questions (only Sba) </th>\r\n                      <th>Attempt Time</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {examActivityStat.map((stat, ind) => (\r\n                      <tr>\r\n                        <td>{ind + 1}</td>\r\n                        <td>{stat.totalScore}</td>\r\n                        <td>{stat.totalWrongScore}</td>\r\n                        <td>{stat.totalPenaltyScore}</td>\r\n                        <td>{stat.totalRightStems}</td>\r\n                        <td>{stat.totalWrongStems}</td>\r\n                        <td>{stat.totalRightSbaQuestions}</td>\r\n                        <td>{stat.totalWrongSbaQuestions}</td>\r\n                        <td>\r\n                          {moment(stat.attemptTime).format(\r\n                            'DD-MMM-YYYY, h:mm a'\r\n                          )}\r\n                        </td>\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </Table>\r\n                <p className='text-center'>Table: Summary View</p>\r\n                <hr />\r\n                {advancedAnalyTics && (\r\n                  <>\r\n                    <h5>Score Analytics</h5>\r\n                    <LineCharts\r\n                      labels={examActivityStat.map(\r\n                        (stat, i) => `Attempt No.${i + 1}`\r\n                      )}\r\n                      dataSetFirst={examActivityStat.map((stat) =>\r\n                        (\r\n                          (stat.totalScore * 100) /\r\n                          (examDetails.singleQuestionMark *\r\n                            examDetails.questions.length)\r\n                        ).toFixed(2)\r\n                      )}\r\n                      dataSetSec={examActivityStat.map((stat) =>\r\n                        (\r\n                          (stat.totalWrongScore * 100) /\r\n                          (examDetails.singleQuestionMark *\r\n                            examDetails.questions.length)\r\n                        ).toFixed(2)\r\n                      )}\r\n                    />\r\n                    <p className='text-center'>Fig: Score Analytics</p>\r\n                    <hr />\r\n                    <div>\r\n                      <h5>Stems Analytics</h5>\r\n                      <div className='row'>\r\n                        {examActivityStat.map((stat) => (\r\n                          <div className='col-lg-6 col-md-12 mb-3'>\r\n                            <PieCharts\r\n                              labels={['Right', 'Wrong', 'UnTouched']}\r\n                              dataSetFirst={[\r\n                                stat.totalRightStems,\r\n                                stat.totalWrongStems,\r\n                                examDetails.questionStemLength *\r\n                                  examDetails.questions.length -\r\n                                  (stat.totalRightStems + stat.totalWrongStems)\r\n                              ]}\r\n                            />\r\n                            <p className='text-center'>\r\n                              Fig: Stems Analytics at\r\n                              {' ' +\r\n                                moment(stat.attemptTime).format(\r\n                                  'DD-MMM-YY, h:mm a'\r\n                                )}\r\n                            </p>\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                    </div>\r\n                  </>\r\n                )}\r\n              </>\r\n            )}\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\n"],"sourceRoot":""}