{"version":3,"sources":["../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/Card.js","../node_modules/react-bootstrap/esm/Alert.js","../node_modules/react-bootstrap/esm/ListGroupItem.js","../node_modules/react-bootstrap/esm/ListGroup.js","utils/paginate.js","components/pagination/pagination.jsx","../node_modules/react-bootstrap/esm/PageItem.js","../node_modules/react-bootstrap/esm/Pagination.js","components/examBuilder/card/card.jsx","components/examBuilder/examSpec.jsx","components/examBuilder/filter.jsx","components/examBuilder/selectedQuestionsPreview.jsx","container/examBuilder/examBuilder.js"],"names":["CardImg","React","forwardRef","_ref","ref","bsPrefix","className","variant","_ref$as","as","Component","props","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","createElement","_extends","classNames","displayName","defaultProps","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","Card","bg","text","border","body","children","cardContext","useMemo","cardHeaderBsPrefix","CardContext","Provider","value","Img","Title","Subtitle","Body","Link","Text","Header","Footer","ImgOverlay","show","transition","Fade","closeLabel","controllables","Alert","uncontrolledProps","_useUncontrolled","useUncontrolled","onClose","dismissible","Transition","handleClose","useEventCallback","e","alert","role","undefined","CloseButton","onClick","label","unmountOnExit","in","DivStyledAsH4","SafeAnchor","Heading","ListGroupItem","active","disabled","action","eventKey","handleClick","useCallback","event","preventDefault","stopPropagation","AbstractNavItem","makeEventKey","href","ListGroup","horizontalVariant","activeKey","horizontal","_useUncontrolled$as","controlledProps","AbstractNav","Item","paginate","items","pageNumber","pageSize","startIndex","_","slice","take","pagination","itemsCount","onPageHandler","currentPage","pageCount","Math","ceil","number","push","key","style","width","height","PageItem","activeLabel","createButton","name","defaultValue","_class","_temp","_React$Component","apply","this","arguments","_inheritsLoose","prototype","render","_this$props","First","Prev","Ellipsis","Next","Last","Pagination","size","decoratedBsPrefix","card","header","headerBgColor","showHeader","centeredStyle","position","top","left","transform","zIndex","ExamSpec","categories","courses","selectedQuestionIds","useState","hideMsg","setHideMsg","Date","startDate","setStartDate","endDate","setEndDate","dispatch","useDispatch","loading","useSelector","state","examPaper","successMsg","success","errorMsg","error","Spinner","animation","initialValues","title","type","categoryType","courseType","singleQuestionMark","questionStemLength","penaltyMark","timeLimit","validate","onSubmit","onSubmitHandler","errors","handleChange","handleSubmit","description","questions","length","JSON","stringify","Form","Group","controlId","Label","Control","placeholder","onChange","multiple","map","categorySlug","slug","replace","id","selected","date","showTimeSelect","minDate","dateFormat","Button","values","onLoadingLoader","postExamProfile","validator","isLength","min","max","isInt","isNumeric","filter","SelectedQuestionsPreview","selectedQuestions","selectedQuestionsHandler","question","index","qText","Badge","cursor","ExamPaper","handleShow","setState","checkHandleChange","isChecked","target","checked","actionHandleChange","forEach","onGetQuestionByCategoryLoader","page","onFetchCategoryLoader","onFetchCoursesLoader","onGetQuestionLoader","checkedQuestionIds","Object","keys","isNaN","RoutesConfig","ExamBuilder","metaInfo","Modal","onHide","closeButton","bottom","right","Row","Col","lg","category","q","FormCheck","Check","inline","connect","auth","api","fetchCategory","fetchCourseLoader","getQuestionLoader","getQuestionByCategoryLoader"],"mappings":"4LAQIA,EAAUC,IAAMC,YACpB,SAAUC,EAAMC,GACd,IAAIC,EAAWF,EAAKE,SAChBC,EAAYH,EAAKG,UACjBC,EAAUJ,EAAKI,QACfC,EAAUL,EAAKM,GACfC,OAAwB,IAAZF,EAAqB,MAAQA,EACzCG,EAAQC,YAA8BT,EAAM,CAAC,WAAY,YAAa,UAAW,OAEjFU,EAASC,YAAmBT,EAAU,YAC1C,OAAOJ,IAAMc,cAAcL,EAAWM,YAAS,CAC7CZ,IAAKA,EACLE,UAAWW,IAAWV,EAAUM,EAAS,IAAMN,EAAUM,EAAQP,IAChEK,OAELX,EAAQkB,YAAc,UACtBlB,EAAQmB,aAnBW,CACjBZ,QAAS,MAmBIP,QChBXoB,EAAgBC,YAAiB,MACjCC,EAAgBD,YAAiB,MACjCE,EAAWC,YAAmB,aAI9BC,EAAOxB,IAAMC,YAAW,SAAUC,EAAMC,GAC1C,IAAIC,EAAWF,EAAKE,SAChBC,EAAYH,EAAKG,UACjBoB,EAAKvB,EAAKuB,GACVC,EAAOxB,EAAKwB,KACZC,EAASzB,EAAKyB,OACdC,EAAO1B,EAAK0B,KACZC,EAAW3B,EAAK2B,SAChBtB,EAAUL,EAAKM,GACfC,OAAwB,IAAZF,EAAqB,MAAQA,EACzCG,EAAQC,YAA8BT,EAAM,CAAC,WAAY,YAAa,KAAM,OAAQ,SAAU,OAAQ,WAAY,OAElHU,EAASC,YAAmBT,EAAU,QACtC0B,EAAcC,mBAAQ,WACxB,MAAO,CACLC,mBAAoBpB,EAAS,aAE9B,CAACA,IACJ,OAAOZ,IAAMc,cAAcmB,IAAYC,SAAU,CAC/CC,MAAOL,GACN9B,IAAMc,cAAcL,EAAWM,YAAS,CACzCZ,IAAKA,GACJO,EAAO,CACRL,UAAWW,IAAWX,EAAWO,EAAQa,GAAM,MAAQA,EAAIC,GAAQ,QAAUA,EAAMC,GAAU,UAAYA,KACvGC,EAAO5B,IAAMc,cAAcQ,EAAU,KAAMO,GAAYA,OAE7DL,EAAKP,YAAc,OACnBO,EAAKN,aA9Bc,CACjBU,MAAM,GA8BRJ,EAAKY,IAAMrC,EACXyB,EAAKa,MAAQd,YAAmB,aAAc,CAC5Cd,UAAWU,IAEbK,EAAKc,SAAWf,YAAmB,gBAAiB,CAClDd,UAAWY,IAEbG,EAAKe,KAAOjB,EACZE,EAAKgB,KAAOjB,YAAmB,YAAa,CAC1Cd,UAAW,MAEbe,EAAKiB,KAAOlB,YAAmB,YAAa,CAC1Cd,UAAW,MAEbe,EAAKkB,OAASnB,YAAmB,eACjCC,EAAKmB,OAASpB,YAAmB,eACjCC,EAAKoB,WAAarB,YAAmB,oBACtBC,O,iCC5Df,6HAYIN,EAAe,CACjB2B,MAAM,EACNC,WAAYC,IACZC,WAAY,eAEVC,EAAgB,CAClBJ,KAAM,WAEJK,EAAQlD,IAAMC,YAAW,SAAUkD,EAAmBhD,GACxD,IAAIiD,EAAmBC,YAAgBF,EAAmBF,GACtD7C,EAAWgD,EAAiBhD,SAC5ByC,EAAOO,EAAiBP,KACxBG,EAAaI,EAAiBJ,WAC9B3C,EAAY+C,EAAiB/C,UAC7BwB,EAAWuB,EAAiBvB,SAC5BvB,EAAU8C,EAAiB9C,QAC3BgD,EAAUF,EAAiBE,QAC3BC,EAAcH,EAAiBG,YAC/BC,EAAaJ,EAAiBN,WAC9BpC,EAAQC,YAA8ByC,EAAkB,CAAC,WAAY,OAAQ,aAAc,YAAa,WAAY,UAAW,UAAW,cAAe,eAEzJxC,EAASC,YAAmBT,EAAU,SACtCqD,EAAcC,aAAiB,SAAUC,GAC3CL,GAAQ,EAAOK,MAEbC,EAAQ5D,IAAMc,cAAc,MAAOC,YAAS,CAC9C8C,KAAM,SACLL,EAAa9C,OAAQoD,EAAW,CACjCzD,UAAWW,IAAWX,EAAWO,EAAQN,GAAWM,EAAS,IAAMN,EAASiD,GAAe3C,EAAS,kBAClG2C,GAAevD,IAAMc,cAAciD,IAAa,CAClDC,QAASP,EACTQ,MAAOjB,IACLnB,GACJ,OAAK2B,EACExD,IAAMc,cAAc0C,EAAYzC,YAAS,CAC9CmD,eAAe,EACf/D,IAAKA,GACJO,EAAO,CACRyD,GAAItB,IACFe,GANoBf,EAAOe,EAAQ,QAQrCQ,EAAgBhD,YAAiB,MACrCgD,EAAcnD,YAAc,gBAC5BiC,EAAMjC,YAAc,QACpBiC,EAAMhC,aAAeA,EACrBgC,EAAMV,KAAOjB,YAAmB,aAAc,CAC5Cd,UAAW4D,MAEbnB,EAAMoB,QAAU/C,YAAmB,gBAAiB,CAClDd,UAAW2D,IAEElB,O,4ICnDXqB,EAAgBvE,IAAMC,YAAW,SAAUC,EAAMC,GACnD,IAAIC,EAAWF,EAAKE,SAChBoE,EAAStE,EAAKsE,OACdC,EAAWvE,EAAKuE,SAChBpE,EAAYH,EAAKG,UACjBC,EAAUJ,EAAKI,QACfoE,EAASxE,EAAKwE,OACdlE,EAAKN,EAAKM,GACVmE,EAAWzE,EAAKyE,SAChBX,EAAU9D,EAAK8D,QACftD,EAAQC,YAA8BT,EAAM,CAAC,WAAY,SAAU,WAAY,YAAa,UAAW,SAAU,KAAM,WAAY,YAEvIE,EAAWS,YAAmBT,EAAU,mBACxC,IAAIwE,EAAcC,uBAAY,SAAUC,GACtC,GAAIL,EAGF,OAFAK,EAAMC,sBACND,EAAME,kBAIJhB,GAASA,EAAQc,KACpB,CAACL,EAAUT,IACd,OAAOhE,IAAMc,cAAcmE,IAAiBlE,YAAS,CACnDZ,IAAKA,GACJO,EAAO,CACRiE,SAAUO,YAAaP,EAAUjE,EAAMyE,MAEvC3E,GAAIA,IAAOkE,EAAShE,EAAMyE,KAAO,IAAM,SAAW,OAClDnB,QAASY,EACTvE,UAAWW,IAAWX,EAAWD,EAAUoE,GAAU,SAAUC,GAAY,WAAYnE,GAAWF,EAAW,IAAME,EAASoE,GAAUtE,EAAW,iBAGrJmE,EAAcrD,aArCK,CACjBZ,QAAS,KACTkE,QAAQ,EACRC,UAAU,GAmCZF,EAActD,YAAc,gBACbsD,QCjCXa,EAAYpF,IAAMC,YAAW,SAAUS,EAAOP,GAChD,IAYIkF,EAZAjC,EAAmBC,YAAgB3C,EAAO,CAC5C4E,UAAW,aAETjF,EAAY+C,EAAiB/C,UAC7BD,EAAWgD,EAAiBhD,SAC5BE,EAAU8C,EAAiB9C,QAC3BiF,EAAanC,EAAiBmC,WAC9BC,EAAsBpC,EAAiB5C,GACvCA,OAA6B,IAAxBgF,EAAiC,MAAQA,EAC9CC,EAAkB9E,YAA8ByC,EAAkB,CAAC,YAAa,WAAY,UAAW,aAAc,OAYzH,OAVAhD,EAAWS,YAAmBT,EAAU,cAItCiF,EADEE,GACiC,IAAfA,EAAsB,aAAe,cAAgBA,EAErD,KAIfvF,IAAMc,cAAc4E,IAAa3E,YAAS,CAC/CZ,IAAKA,GACJsF,EAAiB,CAClBjF,GAAIA,EACJH,UAAWW,IAAWX,EAAWD,EAAUE,GAAWF,EAAW,IAAME,EAAS+E,GAAqBjF,EAAW,IAAMiF,SAG1HD,EAAUlE,aAjCS,CACjBZ,QAAS,KACTiF,WAAY,MAgCdH,EAAUnE,YAAc,YACxBmE,EAAUO,KAAOpB,EACFa,O,iCC7Cf,wDAEO,SAASQ,EAASC,EAAOC,EAAYC,GAC1C,IAAMC,GAAcF,EAAa,GAAKC,EACtC,OAAOE,IAAEJ,GAAOK,MAAMF,GAAYG,KAAKJ,GAAU5D,U,iCCJnD,6BA6BeiE,IA1BI,SAAC,GAA0D,IAAxDC,EAAuD,EAAvDA,WAAYN,EAA2C,EAA3CA,SAAUO,EAAiC,EAAjCA,cAAeC,EAAkB,EAAlBA,YACnDC,EAAYC,KAAKC,KAAKL,EAAaN,GACzC,GAAkB,IAAdS,EAAiB,OAAO,KAE5B,IADA,IAAMX,EAAQ,GAH6D,WAIlEc,GACPd,EAAMe,KACJ,kBAAC,IAAWjB,KAAZ,CACEkB,IAAKF,EACL3C,QAAS,WACPsC,EAAcK,IAEhBnC,OAAQmC,IAAWJ,EACnBlG,UAAU,wBACVyG,MAAO,CAAEC,MAAO,OAAQC,OAAQ,SAE/BL,KAXEA,EAAS,EAAGA,GAAUH,EAAWG,IAAW,EAA5CA,GAeT,OACE,kBAAC,IAAD,CAAYtG,UAAU,uDACnBwF,K,gHCXHoB,EAAWjH,IAAMC,YAAW,SAAUC,EAAMC,GAC9C,IAAIqE,EAAStE,EAAKsE,OACdC,EAAWvE,EAAKuE,SAChBpE,EAAYH,EAAKG,UACjByG,EAAQ5G,EAAK4G,MACbI,EAAchH,EAAKgH,YACnBrF,EAAW3B,EAAK2B,SAChBnB,EAAQC,YAA8BT,EAAM,CAAC,SAAU,WAAY,YAAa,QAAS,cAAe,aAExGO,EAAY+D,GAAUC,EAAW,OAASJ,IAC9C,OAAOrE,IAAMc,cAAc,KAAM,CAC/BX,IAAKA,EACL2G,MAAOA,EACPzG,UAAWW,IAAWX,EAAW,YAAa,CAC5CmE,OAAQA,EACRC,SAAUA,KAEXzE,IAAMc,cAAcL,EAAWM,YAAS,CACzCV,UAAW,YACXoE,SAAUA,GACT/D,GAAQmB,EAAU2C,GAAU0C,GAAelH,IAAMc,cAAc,OAAQ,CACxET,UAAW,WACV6G,QAELD,EAAS/F,aA7BU,CACjBsD,QAAQ,EACRC,UAAU,EACVyC,YAAa,aA2BfD,EAAShG,YAAc,WACRgG,QAEf,SAASE,EAAaC,EAAMC,EAAcpD,GACxC,IAAIqD,EAAQC,EAMZ,YAJc,IAAVtD,IACFA,EAAQmD,GAGHG,EAAQD,EAEf,SAAUE,GAGR,SAASF,IACP,OAAOE,EAAiBC,MAAMC,KAAMC,YAAcD,KAkBpD,OArBAE,YAAeN,EAAQE,GAMVF,EAAOO,UAEbC,OAAS,WACd,IAAIC,EAAcL,KAAKhH,MACnBmB,EAAWkG,EAAYlG,SACvBnB,EAAQC,YAA8BoH,EAAa,CAAC,aAGxD,cADOrH,EAAM8D,OACNxE,IAAMc,cAAcmG,EAAUvG,EAAOV,IAAMc,cAAc,OAAQ,CACtE,cAAe,QACde,GAAYwF,GAAerH,IAAMc,cAAc,OAAQ,CACxDT,UAAW,WACV4D,KAGEqD,EAtBT,CAuBEtH,IAAMS,WAAY6G,EAAOrG,YAAcmG,EAAMG,EAG1C,IAAIS,EAAQb,EAAa,QAAS,QAC9Bc,EAAOd,EAAa,OAAQ,SAAK,YACjCe,EAAWf,EAAa,WAAY,SAAK,QACzCgB,EAAOhB,EAAa,OAAQ,UAC5BiB,EAAOjB,EAAa,OAAQ,QCjEnCkB,EAAarI,IAAMC,YAAW,SAAUC,EAAMC,GAChD,IAAIC,EAAWF,EAAKE,SAChBC,EAAYH,EAAKG,UACjBwB,EAAW3B,EAAK2B,SAChByG,EAAOpI,EAAKoI,KACZ5H,EAAQC,YAA8BT,EAAM,CAAC,WAAY,YAAa,WAAY,SAElFqI,EAAoB1H,YAAmBT,EAAU,cACrD,OAAOJ,IAAMc,cAAc,KAAMC,YAAS,CACxCZ,IAAKA,GACJO,EAAO,CACRL,UAAWW,IAAWX,EAAWkI,EAAmBD,GAAQC,EAAoB,IAAMD,KACpFzG,MAENwG,EAAWL,MAAQA,EACnBK,EAAWJ,KAAOA,EAClBI,EAAWH,SAAWA,EACtBG,EAAW1C,KAAOsB,EAClBoB,EAAWF,KAAOA,EAClBE,EAAWD,KAAOA,EACHC,O,uSCjBAG,EAfF,SAAC,GAAqD,IAAnDC,EAAkD,EAAlDA,OAAQ5G,EAA0C,EAA1CA,SAAU6G,EAAgC,EAAhCA,cAAeC,EAAiB,EAAjBA,WAC/C,OACE,kBAACnH,EAAA,EAAD,CAAMnB,UAAU,QACbsI,GACC,kBAACnH,EAAA,EAAKkB,OAAN,CACErC,UAAW,mCAAqCqI,GAE/CD,GAGL,kBAACjH,EAAA,EAAKe,KAAN,KAAYV,KCDZ+G,EAAgB,CAEpBC,SAAU,QACVC,IAAK,MACLC,KAAM,MAENC,UAAW,wBACXC,OAAQ,QA8OKC,EA3OE,SAAC,GAAkD,IAAhDC,EAA+C,EAA/CA,WAAYC,EAAmC,EAAnCA,QAASC,EAA0B,EAA1BA,oBAA0B,EACnCC,oBAAS,GAD0B,mBAC1DC,EAD0D,KACjDC,EADiD,OAE/BF,mBAAS,IAAIG,MAFkB,mBAE1DC,EAF0D,KAE/CC,EAF+C,OAGnCL,mBAAS,IAAIG,MAHsB,mBAG1DG,EAH0D,KAGjDC,EAHiD,KAI3DC,EAAWC,cACXC,EAAUC,aAAY,SAACC,GAAD,OAAWA,EAAMC,UAAUH,WACjDI,EAAaH,aAAY,SAACC,GAAD,OAAWA,EAAMC,UAAUE,WACpDC,EAAWL,aAAY,SAACC,GAAD,OAAWA,EAAMC,UAAUI,SAExD,OACE,oCACGP,GACC,kBAACQ,EAAA,EAAD,CACEC,UAAU,SACV5G,KAAK,SACLvD,QAAQ,OACRD,UAAU,mBAGd,kBAAC,IAAD,CACEqK,cAAe,CACbC,MAAO,GACPC,KAAM,IACNC,aAAc,GACdC,WAAY,GACZC,mBAAoB,IACpBC,mBAAoB,IACpBC,YAAa,IACbC,UAAW,MAEbC,SAAUA,EACVC,SAAUC,EACR3B,EACAE,EACAP,EACAS,EACAN,KAGD,gBAAG8B,EAAH,EAAGA,OAAQC,EAAX,EAAWA,aAAcC,EAAzB,EAAyBA,aAAzB,OACC,kBAAC,EAAD,CAAU/C,OAAO,qBAAqBE,YAAY,GAC/CY,GAAWa,GACV,kBAAClH,EAAA,EAAD,CACE5C,QAAS,UACTD,UAAU,cACVyG,MAAO8B,EACPtF,QAAS,kBAAMkG,GAAW,IAC1BjG,aAAW,GAEV6G,EAAWO,MACV,aACAP,EAAWqB,YACX,aACArB,EAAWsB,UAAUC,OACrB,cAGLpC,GAAWe,GACV,kBAACpH,EAAA,EAAD,CACE5C,QAAS,UACTD,UAAU,cACVyG,MAAO8B,EACPtF,QAAS,kBAAMkG,GAAW,IAC1BjG,aAAW,GAEVqI,KAAKC,UAAUvB,IAGpB,kBAACwB,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,MAAN,CAAYC,UAAU,SACpB,kBAACF,EAAA,EAAKG,MAAN,cACA,kBAACH,EAAA,EAAKI,QAAN,CACEtB,KAAK,OACLuB,YAAY,cACZ/E,KAAK,QACLgF,SAAUb,KAGbD,EAAOX,MACN,yBAAKtK,UAAU,sBAAsBiL,EAAOX,OAC1C,KACJ,kBAACmB,EAAA,EAAKC,MAAN,CAAYC,UAAU,QACpB,kBAACF,EAAA,EAAKG,MAAN,kBACA,kBAACH,EAAA,EAAKI,QAAN,CAAc1L,GAAG,SAAS4G,KAAK,OAAOgF,SAAUb,GAC9C,4BAAQpJ,MAAM,KAAd,cACA,4BAAQA,MAAM,KAAd,UACA,4BAAQA,MAAM,KAAd,WACA,4BAAQA,MAAM,KAAd,aACA,4BAAQA,MAAM,KAAd,QACA,4BAAQA,MAAM,KAAd,QACA,4BAAQA,MAAM,KAAd,WAGJ,kBAAC2J,EAAA,EAAKC,MAAN,CAAYC,UAAU,gBACpB,kBAACF,EAAA,EAAKG,MAAN,sBACA,kBAACH,EAAA,EAAKI,QAAN,CACE1L,GAAG,SACH6L,UAAQ,EACRjF,KAAK,eACLgF,SAAUb,GAJZ,4FAUGpC,EAAWmD,KAAI,SAACnK,GAEf,IAAIoK,EAAepK,EAAMqK,KAAKC,QAAQ,KAAM,OAC5C,GAAmB,kBAAftK,EAAMiF,KACR,OAAO,4BAAQjF,MAAOA,EAAMuK,IAAKH,QAKzC,kBAACT,EAAA,EAAKC,MAAN,CAAYC,UAAU,cACpB,kBAACF,EAAA,EAAKG,MAAN,oBACA,kBAACH,EAAA,EAAKI,QAAN,CACE1L,GAAG,SACH6L,UAAQ,EACRjF,KAAK,aACLgF,SAAUb,GAJZ,4FAUGnC,EAAQkD,KAAI,SAACnK,GAAD,OACX,4BAAQA,MAAOA,EAAMuK,IAAKvK,EAAMwI,YAKtC,kBAACmB,EAAA,EAAKC,MAAN,CAAYC,UAAU,eACpB,kBAACF,EAAA,EAAKG,MAAN,oBACA,kBAACH,EAAA,EAAKI,QAAN,CACEtB,KAAK,WACLuB,YAAY,cACZ/E,KAAK,cACLgF,SAAUb,KAGbD,EAAOG,YACN,yBAAKpL,UAAU,sBAAsBiL,EAAOG,aAC1C,KACJ,6BACE,yBAAKpL,UAAU,QACb,yCACA,kBAAC,IAAD,CACEsM,SAAUjD,EACV0C,SAAU,SAACQ,GAAD,OAAUjD,EAAaiD,IACjCC,gBAAc,EACdC,QAAS,IAAIrD,KACbsD,WAAW,OAEb,kBAAC,IAAD,CAAkBzE,KAAK,YAEzB,yBAAKjI,UAAU,QACb,uCACA,kBAAC,IAAD,CACEsM,SAAU/C,EACVwC,SAAU,SAACQ,GAAD,OAAU/C,EAAW+C,IAC/BC,gBAAc,EACdC,QAAS,IAAIrD,KACbsD,WAAW,OAEb,kBAAC,IAAD,CAAkBzE,KAAK,aAG3B,kBAACwD,EAAA,EAAKC,MAAN,CAAYC,UAAU,sBACpB,kBAACF,EAAA,EAAKG,MAAN,6BACA,kBAACH,EAAA,EAAKI,QAAN,CACEtB,KAAK,OACLuB,YAAY,IACZ/E,KAAK,qBACLgF,SAAUb,IAEZ,kBAACO,EAAA,EAAKrJ,KAAN,CAAWpC,UAAU,cAArB,8DAIDiL,EAAOP,mBACN,yBAAK1K,UAAU,sBACZiL,EAAOP,oBAER,KACJ,kBAACe,EAAA,EAAKC,MAAN,CAAYC,UAAU,sBACpB,kBAACF,EAAA,EAAKG,MAAN,6BACA,kBAACH,EAAA,EAAKI,QAAN,CACEtB,KAAK,OACLuB,YAAY,IACZ/E,KAAK,qBACLgF,SAAUb,KAGbD,EAAON,mBACN,yBAAK3K,UAAU,sBACZiL,EAAON,oBAER,KACJ,kBAACc,EAAA,EAAKC,MAAN,CAAYC,UAAU,eACpB,kBAACF,EAAA,EAAKG,MAAN,qBACA,kBAACH,EAAA,EAAKI,QAAN,CACEtB,KAAK,OACLuB,YAAY,IACZ/E,KAAK,cACLgF,SAAUb,IAEZ,kBAACO,EAAA,EAAKrJ,KAAN,CAAWpC,UAAU,cAArB,0DAIDiL,EAAOL,YACN,yBAAK5K,UAAU,sBAAsBiL,EAAOL,aAC1C,KACJ,kBAACa,EAAA,EAAKC,MAAN,CAAYC,UAAU,aACpB,kBAACF,EAAA,EAAKG,MAAN,4BACA,kBAACH,EAAA,EAAKI,QAAN,CACEtB,KAAK,OACLuB,YAAY,KACZ/E,KAAK,YACLgF,SAAUb,KAGbD,EAAOJ,UACN,yBAAK7K,UAAU,sBAAsBiL,EAAOJ,WAC1C,MAEN,kBAAC8B,EAAA,EAAD,CAAQhJ,QAASwH,GAAjB,gBAUZ,SAASH,EACP3B,EACAE,EACAP,EACAS,EACAN,GAEA,OAAO,SAACyD,GACF5D,EAAoBsC,OAAS,GAC/BsB,EAAOvD,UAAYA,EACnBuD,EAAOrD,QAAUA,EACjBE,EAASoD,eACT1D,GAAW,GACXM,EAASqD,YAAgBF,EAAQ5D,KAEjCzF,MAAM,kCAKZ,IAAMuH,EAAW,SAAC8B,GAChB,IAAM3B,EAAS,GA+Bf,OA9BK2B,EAAOtC,MAEAyC,IAAUC,SAASJ,EAAOtC,MAAO,CAAE2C,IAAK,EAAGC,IAAK,OAC1DjC,EAAOX,MAAQ,2CAFfW,EAAOX,MAAQ,WAIZsC,EAAOxB,YAEA2B,IAAUC,SAASJ,EAAOxB,YAAa,CAAE6B,IAAK,GAAIC,IAAK,QACjEjC,EAAOG,YAAc,mDAFrBH,EAAOG,YAAc,WAIlBwB,EAAOlC,mBAEAqC,IAAUI,MAAMP,EAAOlC,sBACjCO,EAAOP,mBAAqB,gDAF5BO,EAAOP,mBAAqB,WAIzBkC,EAAOjC,mBAEAoC,IAAUK,UAAUR,EAAOjC,sBACrCM,EAAON,mBAAqB,gDAF5BM,EAAON,mBAAqB,WAIzBiC,EAAOhC,YAEAmC,IAAUK,UAAUR,EAAOhC,eACrCK,EAAOL,YAAc,wCAFrBK,EAAOL,YAAc,WAIlBgC,EAAO/B,UAEAkC,IAAUI,MAAMP,EAAO/B,aACjCI,EAAOJ,UAAY,2CAFnBI,EAAOJ,UAAY,WAIdI,GC3RMoC,EAxBA,SAAC,GAAkC,IAAhCnC,EAA+B,EAA/BA,aAAcpC,EAAiB,EAAjBA,WAC9B,OACE,kBAAC,EAAD,CAAUV,OAAO,SAASE,YAAY,GACpC,kBAACmD,EAAA,EAAKC,MAAN,CAAYC,UAAU,kBACpB,kBAACF,EAAA,EAAKG,MAAN,iBACA,kBAACH,EAAA,EAAKI,QAAN,CACE1L,GAAG,SACH6G,aAAa,MACbD,KAAK,aACLgF,SAAUb,GAEV,4BAAQ9G,UAAQ,EAACtC,MAAM,OAAvB,UAGCgH,EAAWmD,KAAI,SAACnK,GACf,IAAIoK,EAAepK,EAAMqK,KAAKC,QAAQ,KAAM,OAC5C,OAAO,4BAAQtK,MAAOA,EAAMuK,IAAKH,UCa9BoB,EA5BkB,SAAC,GAG3B,IAFLC,EAEI,EAFJA,kBACAC,EACI,EADJA,yBAEA,OACE,kBAAC,EAAD,CAAUpF,OAAO,6BAA6BE,YAAY,GAEtD,kBAACvD,EAAA,EAAD,CAAW/E,UAAU,QAClBuN,EAAkBtB,KAAI,SAACwB,EAAUC,GAAX,OACrB,kBAAC3I,EAAA,EAAUO,KAAX,CAAgBkB,IAAKkH,EAAOzN,QAAS,WAArC,UACMyN,EAAQ,EADd,aACoBD,EAASnD,MAD7B,mBAC0CmD,EAASE,OACjD,kBAACC,EAAA,EAAD,CACE3N,QAAQ,cACR0D,QAAS,WACP6J,EAAyBC,EAASpB,KAEpC5F,MAAO,CAAEoH,OAAQ,YAEjB,kBAAC,IAAD,c,4DCKVC,E,YACJ,WAAYzN,GAAQ,IAAD,8BACjB,4CAAMA,KAeR0N,WAAa,WAEX,EAAKC,SAAS,CAAExL,MAAM,KAlBL,EAoBnBY,YAAc,WAEZ,EAAK4K,SAAS,CAAExL,MAAM,KAtBL,EAyBnByL,kBAAoB,SAAC3K,EAAGmK,GACtB,IAAMS,EAAY5K,EAAE6K,OAAOC,QACrBtM,EAAQwB,EAAE6K,OAAOrM,MAEnBoM,EACF,EAAKF,SAAL,eACGlM,EAAQ,CACPsM,SAAS,EACT/B,GAAIoB,EAASpB,GACb/B,MAAOmD,EAASnD,MAChBqD,MAAOF,EAASE,SAIpB,EAAKK,SAAL,eACGlM,EAAQ,CACPsM,SAAS,MAzCE,EA+CnBC,mBAAqB,SAAC/K,GAIpB,QAHAA,EAAIA,EAAE6K,QACMrM,OAGV,IAAK,OACH,EAAKzB,MAAMoN,SAASpC,UAAUiD,SAAQ,SAAChL,GACrC,EAAK0K,SAAL,eACG1K,EAAE+I,GAAK,CAAE+B,SAAS,EAAM/B,GAAI/I,EAAE+I,GAAI/B,MAAOhH,EAAEgH,MAAOqD,MAAOrK,EAAEqK,YAGhE,MACF,IAAK,OACH,EAAKtN,MAAMoN,SAASpC,UAAUiD,SAAQ,SAAChL,GACrC,EAAK0K,SAAL,eAAiB1K,EAAE+I,GAAK,CAAE+B,SAAS,QAErC,MACF,IAAK,MACH7I,YACE,EAAKlF,MAAMoN,SAASpC,UACpB,EAAKxB,MAAM3D,YACX,EAAK2D,MAAMnE,UACX4I,SAAQ,SAAChL,GACT,EAAK0K,SAAL,eACG1K,EAAE+I,GAAK,CAAE+B,SAAS,EAAM/B,GAAI/I,EAAE+I,GAAI/B,MAAOhH,EAAEgH,MAAOqD,MAAOrK,EAAEqK,YAGhE,MACF,IAAK,MACHpI,YACE,EAAKlF,MAAMoN,SAASpC,UACpB,EAAKxB,MAAM3D,YACX,EAAK2D,MAAMnE,UACX4I,SAAQ,SAAChL,GACT,EAAK0K,SAAL,eACG1K,EAAE+I,GAAK,CAAE+B,SAAS,UAlFV,EA2FnBZ,yBAA2B,SAACnB,GAC1B,EAAK2B,SAAL,aACET,kBAAmB,EAAK1D,MAAM0D,kBAAkBF,QAC9C,SAACI,GAAD,OAAcA,EAASpB,IAAMA,MAE9BA,EAAK,CAAE+B,SAAS,MAhGF,EAoGnBlD,aAAe,SAAC5H,GAEdA,EAAIA,EAAE6K,OACN,EAAK9N,MAAMkO,8BAA8BjL,EAAExB,OAC3C,EAAKkM,SAAS,CACZ3B,GAAI/I,EAAExB,SAzGS,EA6GnBmE,cAAgB,SAACuI,GAEf,EAAKR,SAAS,CAAE9H,YAAasI,KA7G7B,EAAK3E,MAAQ,CACXrH,MAAM,EACN+K,kBAAmB,GACnB7H,SAAU,GACVQ,YAAa,GANE,E,iFAWjBmB,KAAKhH,MAAMoO,wBACXpH,KAAKhH,MAAMqO,uBACXrH,KAAKhH,MAAMsO,wB,+BAqGH,IAAD,OACDtD,EAAY9F,YAChB8B,KAAKhH,MAAMoN,SAASpC,UACpBhE,KAAKwC,MAAM3D,YACXmB,KAAKwC,MAAMnE,UAGPkJ,EAAqBC,OAAOC,KAAKzH,KAAKwC,OAAOwD,QACjD,SAAC7G,GAAD,OAAUuI,MAAMvI,IAAQ,EAAKqD,MAAMrD,GAAK4H,WAG1C,OACE,oCACE,kBAAC,IAAaY,IAAaC,YAAYC,UACvC,kBAACC,EAAA,EAAD,CAAO3M,KAAM6E,KAAKwC,MAAMrH,KAAM4M,OAAQ/H,KAAKjE,aACzC,kBAAC+L,EAAA,EAAM9M,OAAP,CAAcgN,aAAW,GACvB,kBAACF,EAAA,EAAMnN,MAAP,oCAGF,kBAACmN,EAAA,EAAMjN,KAAP,KACE,kBAAC,EAAD,CACEqL,kBAAmBlG,KAAKwC,MAAM0D,kBAC9BC,yBAA0BnG,KAAKmG,4BAInC,kBAAC2B,EAAA,EAAM7M,OAAP,KACE,kBAACqK,EAAA,EAAD,CAAQ1M,QAAQ,YAAY0D,QAAS0D,KAAKjE,aAA1C,WAOJ,yBACEqD,MAAO,CACL+B,SAAU,QACV8G,OAAQ,OACRC,MAAO,OACP7I,MAAO,OACPC,OAAQ,OACRiC,OAAQ,OAGV,kBAAC+D,EAAA,EAAD,CAAQhJ,QAAS0D,KAAK0G,WAAYzD,MAAM,oBACtC,kBAAC,IAAD,CAAkBrC,KAAM,UAE1B,0BACEjI,UAAU,uCACVyG,MAAO,CAAE+B,SAAU,WAAYC,IAAK,QAAS8G,MAAO,UAEnDlI,KAAKwC,MAAM0D,kBAAkBjC,SAIlC,kBAACkE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAI,GACP,kBAAC7M,EAAA,EAAD,CAAO5C,QAAS,UAAWD,UAAU,oBAArC,gCAEGqH,KAAKhH,MAAMoN,SAASpC,UAAUC,QAGjC,kBAAC,EAAD,CACEJ,aAAc7D,KAAK6D,aACnBpC,WAAYzB,KAAKhH,MAAMsP,SAAS7G,aAElC,kBAAC,EAAD,CACEA,WAAYzB,KAAKhH,MAAMsP,SAAS7G,WAChCC,QAAS1B,KAAKhH,MAAM0I,QAAQA,QAC5BC,oBAAqB3B,KAAKwC,MAAM0D,kBAAkBtB,KAChD,SAAC2D,GAAD,OAAOA,EAAEvD,SAIf,kBAACoD,EAAA,EAAD,CAAKC,GAAI,GACP,kBAACG,EAAA,EAAD,KACE,kBAAC9K,EAAA,EAAD,CAAW/E,UAAU,QAClBqL,EAAUC,OAAS,GAClB,uBAAGtL,UAAU,eAAb,iCAEDqL,EAAUY,KAAI,SAACwB,EAAUC,GAAX,OACb,kBAAC3I,EAAA,EAAUO,KAAX,CACEkB,IAAKiH,EAASpB,GACdpM,QAASyN,EAAQ,IAAM,EAAI,OAAS,SAGlC,kBAACjC,EAAA,EAAKqE,MAAN,CAEEC,QAAM,EACNxF,KAAK,WACLzI,MAAO2L,EAASpB,GAChBN,SAAU,SAACzI,GACT,EAAK2K,kBAAkB3K,EAAGmK,IAE5BW,QACE,EAAKvE,MAAM4D,EAASpB,KACpB,EAAKxC,MAAM4D,EAASpB,IAAI+B,UAfhC,UAqBIV,EACA,EACA,EAAK7D,MAAMnE,UAAY,EAAKmE,MAAM3D,YAAc,GAvBpD,aAwBOuH,EAASnD,MAxBhB,mBAwB6BmD,EAASE,aAK5C,uBAAG3N,UAAU,cAAb,qCACqC,IACnC,kBAAC4N,EAAA,EAAD,CAAO3N,QAAQ,QAAf,gBAFF,sDAKA,kBAAC,IAAD,CACE+F,WAAYqB,KAAKhH,MAAMoN,SAASpC,UAAUC,OAC1C5F,SAAU2B,KAAKwC,MAAMnE,SACrBQ,YAAamB,KAAKwC,MAAM3D,YACxBD,cAAeoB,KAAKpB,gBAGtB,yBAAKjG,UAAU,oDACb,kBAAC2M,EAAA,EAAD,CACEhJ,QAAS,WACP,EAAKqK,SAAS,CACZT,kBAAmBqB,EAAmB3C,KACpC,SAACI,GAAD,OAAQ,EAAKxC,MAAMwC,SAIzBrM,UAAU,qBARZ,iCAaA,kBAACyL,EAAA,EAAKC,MAAN,CAAYC,UAAU,kBACpB,kBAACF,EAAA,EAAKG,MAAN,gBACA,kBAACH,EAAA,EAAKI,QAAN,CACE1L,GAAG,SACH4G,KAAK,SACLgF,SAAU1E,KAAKgH,oBAEf,6CACA,4BAAQvM,MAAM,QAAd,YACA,4BAAQA,MAAM,QAAd,cACA,4BAAQA,MAAM,OAAd,kCACA,4BAAQA,MAAM,OAAd,6C,GAtQM1B,aAoST4P,uBAVS,SAACnG,GACvB,MAAO,CACLoG,KAAMpG,EAAMoG,KACZxC,SAAU5D,EAAM4D,SAChBkC,SAAU9F,EAAM8F,SAChBO,IAAKrG,EAAMqG,IACXnH,QAASc,EAAMd,YAfQ,SAACU,GAC1B,MAAO,CACLgF,sBAAuB,kBAAMhF,EAAS0G,gBACtCzB,qBAAsB,kBAAMjF,EAAS2G,gBACrCzB,oBAAqB,kBAAMlF,EAAS4G,gBACpC9B,8BAA+B,SAAClC,GAAD,OAC7B5C,EAAS6G,YAA4BjE,QAa5B2D,CAA6ClC","file":"static/js/28.de75751b.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  variant: null\n};\nvar CardImg = React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\nfunction (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      variant = _ref.variant,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'img' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"variant\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return React.createElement(Component, _extends({\n    ref: ref,\n    className: classNames(variant ? prefix + \"-\" + variant : prefix, className)\n  }, props));\n});\nCardImg.displayName = 'CardImg';\nCardImg.defaultProps = defaultProps;\nexport default CardImg;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardContext from './CardContext';\nimport CardImg from './CardImg';\nvar DivStyledAsH5 = divWithClassName('h5');\nvar DivStyledAsH6 = divWithClassName('h6');\nvar CardBody = createWithBsPrefix('card-body');\nvar defaultProps = {\n  body: false\n};\nvar Card = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      bg = _ref.bg,\n      text = _ref.text,\n      border = _ref.border,\n      body = _ref.body,\n      children = _ref.children,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"bg\", \"text\", \"border\", \"body\", \"children\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'card');\n  var cardContext = useMemo(function () {\n    return {\n      cardHeaderBsPrefix: prefix + \"-header\"\n    };\n  }, [prefix]);\n  return React.createElement(CardContext.Provider, {\n    value: cardContext\n  }, React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, prefix, bg && \"bg-\" + bg, text && \"text-\" + text, border && \"border-\" + border)\n  }), body ? React.createElement(CardBody, null, children) : children));\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nCard.Img = CardImg;\nCard.Title = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nCard.Subtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nCard.Body = CardBody;\nCard.Link = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nCard.Text = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nCard.Header = createWithBsPrefix('card-header');\nCard.Footer = createWithBsPrefix('card-footer');\nCard.ImgOverlay = createWithBsPrefix('card-img-overlay');\nexport default Card;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport Fade from './Fade';\nimport CloseButton from './CloseButton';\nimport SafeAnchor from './SafeAnchor';\nvar defaultProps = {\n  show: true,\n  transition: Fade,\n  closeLabel: 'Close alert'\n};\nvar controllables = {\n  show: 'onClose'\n};\nvar Alert = React.forwardRef(function (uncontrolledProps, ref) {\n  var _useUncontrolled = useUncontrolled(uncontrolledProps, controllables),\n      bsPrefix = _useUncontrolled.bsPrefix,\n      show = _useUncontrolled.show,\n      closeLabel = _useUncontrolled.closeLabel,\n      className = _useUncontrolled.className,\n      children = _useUncontrolled.children,\n      variant = _useUncontrolled.variant,\n      onClose = _useUncontrolled.onClose,\n      dismissible = _useUncontrolled.dismissible,\n      Transition = _useUncontrolled.transition,\n      props = _objectWithoutPropertiesLoose(_useUncontrolled, [\"bsPrefix\", \"show\", \"closeLabel\", \"className\", \"children\", \"variant\", \"onClose\", \"dismissible\", \"transition\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'alert');\n  var handleClose = useEventCallback(function (e) {\n    onClose(false, e);\n  });\n  var alert = React.createElement(\"div\", _extends({\n    role: \"alert\"\n  }, Transition ? props : undefined, {\n    className: classNames(className, prefix, variant && prefix + \"-\" + variant, dismissible && prefix + \"-dismissible\")\n  }), dismissible && React.createElement(CloseButton, {\n    onClick: handleClose,\n    label: closeLabel\n  }), children);\n  if (!Transition) return show ? alert : null;\n  return React.createElement(Transition, _extends({\n    unmountOnExit: true,\n    ref: ref\n  }, props, {\n    in: show\n  }), alert);\n});\nvar DivStyledAsH4 = divWithClassName('h4');\nDivStyledAsH4.displayName = 'DivStyledAsH4';\nAlert.displayName = 'Alert';\nAlert.defaultProps = defaultProps;\nAlert.Link = createWithBsPrefix('alert-link', {\n  Component: SafeAnchor\n});\nAlert.Heading = createWithBsPrefix('alert-heading', {\n  Component: DivStyledAsH4\n});\nexport default Alert;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useCallback } from 'react';\nimport AbstractNavItem from './AbstractNavItem';\nimport { makeEventKey } from './SelectableContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  variant: null,\n  active: false,\n  disabled: false\n};\nvar ListGroupItem = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      active = _ref.active,\n      disabled = _ref.disabled,\n      className = _ref.className,\n      variant = _ref.variant,\n      action = _ref.action,\n      as = _ref.as,\n      eventKey = _ref.eventKey,\n      onClick = _ref.onClick,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"active\", \"disabled\", \"className\", \"variant\", \"action\", \"as\", \"eventKey\", \"onClick\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'list-group-item');\n  var handleClick = useCallback(function (event) {\n    if (disabled) {\n      event.preventDefault();\n      event.stopPropagation();\n      return;\n    }\n\n    if (onClick) onClick(event);\n  }, [disabled, onClick]);\n  return React.createElement(AbstractNavItem, _extends({\n    ref: ref\n  }, props, {\n    eventKey: makeEventKey(eventKey, props.href) // eslint-disable-next-line\n    ,\n    as: as || (action ? props.href ? 'a' : 'button' : 'div'),\n    onClick: handleClick,\n    className: classNames(className, bsPrefix, active && 'active', disabled && 'disabled', variant && bsPrefix + \"-\" + variant, action && bsPrefix + \"-action\")\n  }));\n});\nListGroupItem.defaultProps = defaultProps;\nListGroupItem.displayName = 'ListGroupItem';\nexport default ListGroupItem;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport warning from 'warning';\nimport { useUncontrolled } from 'uncontrollable';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractNav from './AbstractNav';\nimport ListGroupItem from './ListGroupItem';\nvar defaultProps = {\n  variant: null,\n  horizontal: null\n};\nvar ListGroup = React.forwardRef(function (props, ref) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      className = _useUncontrolled.className,\n      bsPrefix = _useUncontrolled.bsPrefix,\n      variant = _useUncontrolled.variant,\n      horizontal = _useUncontrolled.horizontal,\n      _useUncontrolled$as = _useUncontrolled.as,\n      as = _useUncontrolled$as === void 0 ? 'div' : _useUncontrolled$as,\n      controlledProps = _objectWithoutPropertiesLoose(_useUncontrolled, [\"className\", \"bsPrefix\", \"variant\", \"horizontal\", \"as\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'list-group');\n  var horizontalVariant;\n\n  if (horizontal) {\n    horizontalVariant = horizontal === true ? 'horizontal' : \"horizontal-\" + horizontal;\n  } else {\n    horizontalVariant = null;\n  }\n\n  process.env.NODE_ENV !== \"production\" ? warning(!(horizontal && variant === 'flush'), '`variant=\"flush\"` and `horizontal` should not be used together.') : void 0;\n  return React.createElement(AbstractNav, _extends({\n    ref: ref\n  }, controlledProps, {\n    as: as,\n    className: classNames(className, bsPrefix, variant && bsPrefix + \"-\" + variant, horizontalVariant && bsPrefix + \"-\" + horizontalVariant)\n  }));\n});\nListGroup.defaultProps = defaultProps;\nListGroup.displayName = 'ListGroup';\nListGroup.Item = ListGroupItem;\nexport default ListGroup;","import _ from 'lodash'\r\n\r\nexport function paginate(items, pageNumber, pageSize) {\r\n  const startIndex = (pageNumber - 1) * pageSize\r\n  return _(items).slice(startIndex).take(pageSize).value()\r\n}\r\n","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\n\r\nconst pagination = ({ itemsCount, pageSize, onPageHandler, currentPage }) => {\r\n  const pageCount = Math.ceil(itemsCount / pageSize)\r\n  if (pageCount === 1) return null\r\n  const items = []\r\n  for (let number = 1; number <= pageCount; number++) {\r\n    items.push(\r\n      <Pagination.Item\r\n        key={number}\r\n        onClick={() => {\r\n          onPageHandler(number)\r\n        }}\r\n        active={number === currentPage}\r\n        className='my-2 mr-2 text-center'\r\n        style={{ width: '40px', height: '30px' }}\r\n      >\r\n        {number}\r\n      </Pagination.Item>\r\n    )\r\n  }\r\n  return (\r\n    <Pagination className='justify-content-start align-content-start flex-wrap'>\r\n      {items}\r\n    </Pagination>\r\n  )\r\n}\r\n\r\nexport default pagination\r\n","import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\n\n/* eslint-disable react/no-multi-comp */\nimport classNames from 'classnames';\nimport React from 'react';\nimport SafeAnchor from './SafeAnchor';\nvar defaultProps = {\n  active: false,\n  disabled: false,\n  activeLabel: '(current)'\n};\nvar PageItem = React.forwardRef(function (_ref, ref) {\n  var active = _ref.active,\n      disabled = _ref.disabled,\n      className = _ref.className,\n      style = _ref.style,\n      activeLabel = _ref.activeLabel,\n      children = _ref.children,\n      props = _objectWithoutPropertiesLoose(_ref, [\"active\", \"disabled\", \"className\", \"style\", \"activeLabel\", \"children\"]);\n\n  var Component = active || disabled ? 'span' : SafeAnchor;\n  return React.createElement(\"li\", {\n    ref: ref,\n    style: style,\n    className: classNames(className, 'page-item', {\n      active: active,\n      disabled: disabled\n    })\n  }, React.createElement(Component, _extends({\n    className: \"page-link\",\n    disabled: disabled\n  }, props), children, active && activeLabel && React.createElement(\"span\", {\n    className: \"sr-only\"\n  }, activeLabel)));\n});\nPageItem.defaultProps = defaultProps;\nPageItem.displayName = 'PageItem';\nexport default PageItem;\n\nfunction createButton(name, defaultValue, label) {\n  var _class, _temp;\n\n  if (label === void 0) {\n    label = name;\n  }\n\n  return _temp = _class =\n  /*#__PURE__*/\n  function (_React$Component) {\n    _inheritsLoose(_class, _React$Component);\n\n    function _class() {\n      return _React$Component.apply(this, arguments) || this;\n    }\n\n    var _proto = _class.prototype;\n\n    _proto.render = function render() {\n      var _this$props = this.props,\n          children = _this$props.children,\n          props = _objectWithoutPropertiesLoose(_this$props, [\"children\"]);\n\n      delete props.active;\n      return React.createElement(PageItem, props, React.createElement(\"span\", {\n        \"aria-hidden\": \"true\"\n      }, children || defaultValue), React.createElement(\"span\", {\n        className: \"sr-only\"\n      }, label));\n    };\n\n    return _class;\n  }(React.Component), _class.displayName = name, _temp;\n}\n\nexport var First = createButton('First', '«');\nexport var Prev = createButton('Prev', '‹', 'Previous');\nexport var Ellipsis = createButton('Ellipsis', '…', 'More');\nexport var Next = createButton('Next', '›');\nexport var Last = createButton('Last', '»');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport PageItem, { First, Prev, Ellipsis, Next, Last } from './PageItem';\n\n/**\n * @property {PageItem} Item\n * @property {PageItem} First\n * @property {PageItem} Prev\n * @property {PageItem} Ellipsis\n * @property {PageItem} Next\n * @property {PageItem} Last\n */\nvar Pagination = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      children = _ref.children,\n      size = _ref.size,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"children\", \"size\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'pagination');\n  return React.createElement(\"ul\", _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, decoratedBsPrefix, size && decoratedBsPrefix + \"-\" + size)\n  }), children);\n});\nPagination.First = First;\nPagination.Prev = Prev;\nPagination.Ellipsis = Ellipsis;\nPagination.Item = PageItem;\nPagination.Next = Next;\nPagination.Last = Last;\nexport default Pagination;","import React from 'react'\r\nimport { Card } from 'react-bootstrap'\r\n\r\nconst card = ({ header, children, headerBgColor, showHeader }) => {\r\n  return (\r\n    <Card className='mt-5'>\r\n      {showHeader && (\r\n        <Card.Header\r\n          className={'text-center font-weight-bold bg-' + headerBgColor}\r\n        >\r\n          {header}\r\n        </Card.Header>\r\n      )}\r\n      <Card.Body>{children}</Card.Body>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default card\r\n","import { Formik } from 'formik'\r\nimport React, { useState } from 'react'\r\nimport { Alert, Button, Form, Spinner } from 'react-bootstrap'\r\nimport DatePicker from 'react-datepicker'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport { FaRegCalendarAlt } from 'react-icons/fa'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n//import { useFormik } from \"formik\";\r\nimport validator from 'validator'\r\nimport { onLoadingLoader, postExamProfile } from '../../store/examPaper'\r\nimport ExamCard from './card/card'\r\n\r\nconst centeredStyle = {\r\n  // styling to display server response in middle of screen\r\n  position: 'fixed',\r\n  top: '50%',\r\n  left: '50%',\r\n  /* bring your own prefixes */\r\n  transform: 'translate(-50%, -50%)',\r\n  zIndex: '1000'\r\n}\r\n\r\nconst ExamSpec = ({ categories, courses, selectedQuestionIds }) => {\r\n  const [hideMsg, setHideMsg] = useState(true)\r\n  const [startDate, setStartDate] = useState(new Date())\r\n  const [endDate, setEndDate] = useState(new Date())\r\n  const dispatch = useDispatch()\r\n  const loading = useSelector((state) => state.examPaper.loading)\r\n  const successMsg = useSelector((state) => state.examPaper.success)\r\n  const errorMsg = useSelector((state) => state.examPaper.error)\r\n\r\n  return (\r\n    <>\r\n      {loading && (\r\n        <Spinner\r\n          animation='border'\r\n          role='status'\r\n          variant='dark'\r\n          className='content-center'\r\n        ></Spinner>\r\n      )}\r\n      <Formik\r\n        initialValues={{\r\n          title: '',\r\n          type: '0',\r\n          categoryType: [],\r\n          courseType: [],\r\n          singleQuestionMark: '1',\r\n          questionStemLength: '5',\r\n          penaltyMark: '0',\r\n          timeLimit: '40'\r\n        }}\r\n        validate={validate}\r\n        onSubmit={onSubmitHandler(\r\n          startDate,\r\n          endDate,\r\n          selectedQuestionIds,\r\n          dispatch,\r\n          setHideMsg\r\n        )}\r\n      >\r\n        {({ errors, handleChange, handleSubmit }) => (\r\n          <ExamCard header='Exam Specification' showHeader={true}>\r\n            {hideMsg && successMsg && (\r\n              <Alert //\r\n                variant={'success'}\r\n                className='text-center'\r\n                style={centeredStyle}\r\n                onClose={() => setHideMsg(false)}\r\n                dismissible\r\n              >\r\n                {successMsg.title +\r\n                  ' --->  ' +\r\n                  successMsg.description +\r\n                  ' --->  ' +\r\n                  successMsg.questions.length +\r\n                  ' questions'}\r\n              </Alert>\r\n            )}\r\n            {hideMsg && errorMsg && (\r\n              <Alert //\r\n                variant={'success'}\r\n                className='text-center'\r\n                style={centeredStyle}\r\n                onClose={() => setHideMsg(false)}\r\n                dismissible\r\n              >\r\n                {JSON.stringify(errorMsg)}\r\n              </Alert>\r\n            )}\r\n            <Form>\r\n              <Form.Group controlId='title'>\r\n                <Form.Label>Title</Form.Label>\r\n                <Form.Control\r\n                  type='text'\r\n                  placeholder='Enter title'\r\n                  name='title'\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Group>\r\n              {errors.title ? (\r\n                <div className='alert alert-danger'>{errors.title}</div>\r\n              ) : null}\r\n              <Form.Group controlId='type'>\r\n                <Form.Label>Exam Type</Form.Label>\r\n                <Form.Control as='select' name='type' onChange={handleChange}>\r\n                  <option value='0'>Assignment</option>\r\n                  <option value='1'>Weekly</option>\r\n                  <option value='2'>Monthly</option>\r\n                  <option value='3'>Assesment</option>\r\n                  <option value='4'>Term</option>\r\n                  <option value='5'>Test</option>\r\n                  <option value='6'>Final</option>\r\n                </Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId='categoryType'>\r\n                <Form.Label>Category Type</Form.Label>\r\n                <Form.Control\r\n                  as='select'\r\n                  multiple\r\n                  name='categoryType'\r\n                  onChange={handleChange}\r\n                  //value={categories[0] && categories[0].id}\r\n                  // eslint-disable-next-line react/jsx-no-comment-textnodes\r\n                >\r\n                  // eslint-disable-next-line react/prop-types //\r\n                  eslint-disable-next-line react/prop-types\r\n                  {categories.map((value) => {\r\n                    //console.log(categories[0].id);\r\n                    let categorySlug = value.slug.replace(/_/g, ' / ')\r\n                    if (value.name !== 'Uncategorized')\r\n                      return <option value={value.id}>{categorySlug}</option>\r\n                  })}\r\n                </Form.Control>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId='courseType'>\r\n                <Form.Label>Course Type</Form.Label>\r\n                <Form.Control\r\n                  as='select'\r\n                  multiple\r\n                  name='courseType'\r\n                  onChange={handleChange}\r\n                  //value={categories[0] && categories[0].id}\r\n                  // eslint-disable-next-line react/jsx-no-comment-textnodes\r\n                >\r\n                  // eslint-disable-next-line react/prop-types //\r\n                  eslint-disable-next-line react/prop-types\r\n                  {courses.map((value) => (\r\n                    <option value={value.id}>{value.title}</option>\r\n                  ))}\r\n                </Form.Control>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId='description'>\r\n                <Form.Label>Description</Form.Label>\r\n                <Form.Control\r\n                  type='textarea'\r\n                  placeholder='description'\r\n                  name='description'\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Group>\r\n              {errors.description ? (\r\n                <div className='alert alert-danger'>{errors.description}</div>\r\n              ) : null}\r\n              <div>\r\n                <div className='my-3'>\r\n                  <p>Start Date</p>\r\n                  <DatePicker\r\n                    selected={startDate}\r\n                    onChange={(date) => setStartDate(date)}\r\n                    showTimeSelect\r\n                    minDate={new Date()}\r\n                    dateFormat='Pp'\r\n                  />\r\n                  <FaRegCalendarAlt size='1.7rem' />\r\n                </div>\r\n                <div className='my-3'>\r\n                  <p>End Date</p>\r\n                  <DatePicker\r\n                    selected={endDate}\r\n                    onChange={(date) => setEndDate(date)}\r\n                    showTimeSelect\r\n                    minDate={new Date()}\r\n                    dateFormat='Pp'\r\n                  />\r\n                  <FaRegCalendarAlt size='1.7rem' />\r\n                </div>\r\n              </div>\r\n              <Form.Group controlId='singleQuestionMark'>\r\n                <Form.Label>Single Question Mark</Form.Label>\r\n                <Form.Control\r\n                  type='text'\r\n                  placeholder='1'\r\n                  name='singleQuestionMark'\r\n                  onChange={handleChange}\r\n                />\r\n                <Form.Text className='text-muted'>\r\n                  ** It is value for the question, not for the single stem.\r\n                </Form.Text>\r\n              </Form.Group>\r\n              {errors.singleQuestionMark ? (\r\n                <div className='alert alert-danger'>\r\n                  {errors.singleQuestionMark}\r\n                </div>\r\n              ) : null}\r\n              <Form.Group controlId='questionStemLength'>\r\n                <Form.Label>Question Stem Length</Form.Label>\r\n                <Form.Control\r\n                  type='text'\r\n                  placeholder='5'\r\n                  name='questionStemLength'\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Group>\r\n              {errors.questionStemLength ? (\r\n                <div className='alert alert-danger'>\r\n                  {errors.questionStemLength}\r\n                </div>\r\n              ) : null}\r\n              <Form.Group controlId='penaltyMark'>\r\n                <Form.Label>Penalty Mark</Form.Label>\r\n                <Form.Control\r\n                  type='text'\r\n                  placeholder='0'\r\n                  name='penaltyMark'\r\n                  onChange={handleChange}\r\n                />\r\n                <Form.Text className='text-muted'>\r\n                  ** It is value for single stem, not for the question.\r\n                </Form.Text>\r\n              </Form.Group>\r\n              {errors.penaltyMark ? (\r\n                <div className='alert alert-danger'>{errors.penaltyMark}</div>\r\n              ) : null}\r\n              <Form.Group controlId='timeLimit'>\r\n                <Form.Label>Time Limit(Minutes)</Form.Label>\r\n                <Form.Control\r\n                  type='text'\r\n                  placeholder='40'\r\n                  name='timeLimit'\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Group>\r\n              {errors.timeLimit ? (\r\n                <div className='alert alert-danger'>{errors.timeLimit}</div>\r\n              ) : null}\r\n            </Form>\r\n            <Button onClick={handleSubmit}>Submit</Button>\r\n          </ExamCard>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ExamSpec\r\n\r\nfunction onSubmitHandler(\r\n  startDate,\r\n  endDate,\r\n  selectedQuestionIds,\r\n  dispatch,\r\n  setHideMsg\r\n) {\r\n  return (values) => {\r\n    if (selectedQuestionIds.length > 0) {\r\n      values.startDate = startDate\r\n      values.endDate = endDate\r\n      dispatch(onLoadingLoader())\r\n      setHideMsg(true)\r\n      dispatch(postExamProfile(values, selectedQuestionIds))\r\n    } else {\r\n      alert('Their is no selected Question')\r\n    }\r\n  }\r\n}\r\n\r\nconst validate = (values) => {\r\n  const errors = {}\r\n  if (!values.title) {\r\n    errors.title = 'Required'\r\n  } else if (!validator.isLength(values.title, { min: 5, max: 50 })) {\r\n    errors.title = 'Title should be between 5-50 characters'\r\n  }\r\n  if (!values.description) {\r\n    errors.description = 'Required'\r\n  } else if (!validator.isLength(values.description, { min: 15, max: 255 })) {\r\n    errors.description = 'Description should be between 15-255 characters'\r\n  }\r\n  if (!values.singleQuestionMark) {\r\n    errors.singleQuestionMark = 'Required'\r\n  } else if (!validator.isInt(values.singleQuestionMark)) {\r\n    errors.singleQuestionMark = 'Single Question Mark should be Integer value'\r\n  }\r\n  if (!values.questionStemLength) {\r\n    errors.questionStemLength = 'Required'\r\n  } else if (!validator.isNumeric(values.questionStemLength)) {\r\n    errors.questionStemLength = 'Question stem length should be Numeric value'\r\n  }\r\n  if (!values.penaltyMark) {\r\n    errors.penaltyMark = 'Required'\r\n  } else if (!validator.isNumeric(values.penaltyMark)) {\r\n    errors.penaltyMark = 'penalty Mark should be Numeric value'\r\n  }\r\n  if (!values.timeLimit) {\r\n    errors.timeLimit = 'Required'\r\n  } else if (!validator.isInt(values.timeLimit)) {\r\n    errors.timeLimit = 'Timelimit Mark should be Interger Value'\r\n  }\r\n  return errors\r\n}\r\n","import React from 'react'\r\nimport { Form } from 'react-bootstrap'\r\nimport ExamCard from './card/card'\r\n\r\nconst filter = ({ handleChange, categories }) => {\r\n  return (\r\n    <ExamCard header='Filter' showHeader={true}>\r\n      <Form.Group controlId='formGridParent'>\r\n        <Form.Label>Category</Form.Label>\r\n        <Form.Control\r\n          as='select'\r\n          defaultValue='top'\r\n          name='categoryId'\r\n          onChange={handleChange}\r\n        >\r\n          <option disabled value='top'>\r\n            Top...\r\n          </option>\r\n          {categories.map((value) => {\r\n            let categorySlug = value.slug.replace(/_/g, ' / ')\r\n            return <option value={value.id}>{categorySlug}</option>\r\n          })}\r\n        </Form.Control>\r\n      </Form.Group>\r\n    </ExamCard>\r\n  )\r\n}\r\n\r\nexport default filter\r\n","import React from 'react'\r\nimport { Badge, ListGroup } from 'react-bootstrap'\r\nimport { FaTimes } from 'react-icons/fa'\r\nimport ExamCard from './card/card'\r\n\r\nconst SelectedQuestionsPreview = ({\r\n  selectedQuestions,\r\n  selectedQuestionsHandler\r\n}) => {\r\n  return (\r\n    <ExamCard header='Selected Questions Preview' showHeader={false}>\r\n      {\r\n        <ListGroup className='my-2'>\r\n          {selectedQuestions.map((question, index) => (\r\n            <ListGroup.Item key={index} variant={'success'}>\r\n              {`${index + 1}. ${question.title} --> ${question.qText}`}\r\n              <Badge\r\n                variant='danger ml-2'\r\n                onClick={() => {\r\n                  selectedQuestionsHandler(question.id)\r\n                }}\r\n                style={{ cursor: 'pointer' }}\r\n              >\r\n                <FaTimes />\r\n              </Badge>\r\n            </ListGroup.Item>\r\n          ))}\r\n        </ListGroup>\r\n      }\r\n    </ExamCard>\r\n  )\r\n}\r\n\r\nexport default SelectedQuestionsPreview\r\n","import React, { Component } from 'react'\r\nimport {\r\n  Alert,\r\n  Badge,\r\n  Button,\r\n  Col,\r\n  Form,\r\n  FormCheck,\r\n  ListGroup,\r\n  Modal,\r\n  Row\r\n} from 'react-bootstrap'\r\nimport { FaShoppingBasket } from 'react-icons/fa'\r\nimport { connect } from 'react-redux'\r\nimport ExamSpec from '../../components/examBuilder/examSpec'\r\nimport Filter from '../../components/examBuilder/filter'\r\nimport SelectedQuestionsPreview from '../../components/examBuilder/selectedQuestionsPreview'\r\nimport Pagination from '../../components/pagination/pagination'\r\nimport MetaInfo from '../../components/seo/metainfo'\r\nimport { RoutesConfig } from '../../config/routes.config'\r\nimport { fetchCategory } from '../../store/category'\r\nimport { fetchCourseLoader } from '../../store/courses'\r\nimport {\r\n  getQuestionByCategoryLoader,\r\n  getQuestionLoader\r\n} from '../../store/question'\r\nimport { paginate } from '../../utils/paginate'\r\n\r\nclass ExamPaper extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      show: false,\r\n      selectedQuestions: [],\r\n      pageSize: 10,\r\n      currentPage: 1\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.onFetchCategoryLoader()\r\n    this.props.onFetchCoursesLoader()\r\n    this.props.onGetQuestionLoader()\r\n  }\r\n\r\n  handleShow = () => {\r\n    //control modal show state\r\n    this.setState({ show: true })\r\n  }\r\n  handleClose = () => {\r\n    //control modal show state\r\n    this.setState({ show: false })\r\n  }\r\n\r\n  checkHandleChange = (e, question) => {\r\n    const isChecked = e.target.checked\r\n    const value = e.target.value\r\n\r\n    if (isChecked) {\r\n      this.setState({\r\n        [value]: {\r\n          checked: true,\r\n          id: question.id,\r\n          title: question.title,\r\n          qText: question.qText\r\n        }\r\n      })\r\n    } else {\r\n      this.setState({\r\n        [value]: {\r\n          checked: false\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  actionHandleChange = (e) => {\r\n    e = e.target\r\n    const v = e.value\r\n\r\n    switch (v) {\r\n      case 'mAll':\r\n        this.props.question.questions.forEach((e) => {\r\n          this.setState({\r\n            [e.id]: { checked: true, id: e.id, title: e.title, qText: e.qText }\r\n          })\r\n        })\r\n        break\r\n      case 'uAll':\r\n        this.props.question.questions.forEach((e) => {\r\n          this.setState({ [e.id]: { checked: false } })\r\n        })\r\n        break\r\n      case 'mPQ':\r\n        paginate(\r\n          this.props.question.questions,\r\n          this.state.currentPage,\r\n          this.state.pageSize\r\n        ).forEach((e) => {\r\n          this.setState({\r\n            [e.id]: { checked: true, id: e.id, title: e.title, qText: e.qText }\r\n          })\r\n        })\r\n        break\r\n      case 'uPQ':\r\n        paginate(\r\n          this.props.question.questions,\r\n          this.state.currentPage,\r\n          this.state.pageSize\r\n        ).forEach((e) => {\r\n          this.setState({\r\n            [e.id]: { checked: false }\r\n          })\r\n        })\r\n        break\r\n      default:\r\n        break\r\n    }\r\n  }\r\n\r\n  selectedQuestionsHandler = (id) => {\r\n    this.setState({\r\n      selectedQuestions: this.state.selectedQuestions.filter(\r\n        (question) => question.id != id\r\n      ),\r\n      [id]: { checked: false }\r\n    })\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    // the category controller\r\n    e = e.target\r\n    this.props.onGetQuestionByCategoryLoader(e.value)\r\n    this.setState({\r\n      id: e.value\r\n    })\r\n  }\r\n\r\n  onPageHandler = (page) => {\r\n    // for pagination\r\n    this.setState({ currentPage: page })\r\n  }\r\n\r\n  render() {\r\n    const questions = paginate(\r\n      this.props.question.questions,\r\n      this.state.currentPage,\r\n      this.state.pageSize\r\n    )\r\n\r\n    const checkedQuestionIds = Object.keys(this.state).filter(\r\n      (key) => !isNaN(key) && this.state[key].checked\r\n    )\r\n\r\n    return (\r\n      <>\r\n        <MetaInfo {...RoutesConfig.ExamBuilder.metaInfo} />\r\n        <Modal show={this.state.show} onHide={this.handleClose}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Selected Questions Preview</Modal.Title>\r\n          </Modal.Header>\r\n\r\n          <Modal.Body>\r\n            <SelectedQuestionsPreview\r\n              selectedQuestions={this.state.selectedQuestions}\r\n              selectedQuestionsHandler={this.selectedQuestionsHandler}\r\n            />\r\n          </Modal.Body>\r\n\r\n          <Modal.Footer>\r\n            <Button variant='secondary' onClick={this.handleClose}>\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n\r\n        {/* Preview questions cart */}\r\n        <div\r\n          style={{\r\n            position: 'fixed',\r\n            bottom: '50px',\r\n            right: '20px',\r\n            width: '50px',\r\n            height: '35px',\r\n            zIndex: '99'\r\n          }}\r\n        >\r\n          <Button onClick={this.handleShow} title='Questions Busket'>\r\n            <FaShoppingBasket size={'2rem'} />\r\n          </Button>\r\n          <span\r\n            className='bg-danger text-white p-1 text-center'\r\n            style={{ position: 'absolute', top: '-15px', right: '-10px' }}\r\n          >\r\n            {this.state.selectedQuestions.length}\r\n          </span>\r\n        </div>\r\n\r\n        <Row>\r\n          <Col lg={4}>\r\n            <Alert variant={'primary'} className='text-center mt-3'>\r\n              Total number of Question is :\r\n              {this.props.question.questions.length}\r\n            </Alert>\r\n\r\n            <Filter\r\n              handleChange={this.handleChange}\r\n              categories={this.props.category.categories}\r\n            />\r\n            <ExamSpec\r\n              categories={this.props.category.categories}\r\n              courses={this.props.courses.courses}\r\n              selectedQuestionIds={this.state.selectedQuestions.map(\r\n                (q) => q.id\r\n              )}\r\n            />\r\n          </Col>\r\n          <Col lg={8}>\r\n            <FormCheck>\r\n              <ListGroup className='my-2'>\r\n                {questions.length < 1 && (\r\n                  <p className='text-danger'>No Question in this category.</p>\r\n                )}\r\n                {questions.map((question, index) => (\r\n                  <ListGroup.Item\r\n                    key={question.id}\r\n                    variant={index % 2 === 0 ? 'dark' : 'light'}\r\n                  >\r\n                    {\r\n                      <Form.Check\r\n                        //ref={this.state.input}\r\n                        inline\r\n                        type='checkbox'\r\n                        value={question.id}\r\n                        onChange={(e) => {\r\n                          this.checkHandleChange(e, question)\r\n                        }}\r\n                        checked={\r\n                          this.state[question.id] &&\r\n                          this.state[question.id].checked\r\n                        }\r\n                      />\r\n                    }\r\n\r\n                    {`${\r\n                      index +\r\n                      1 +\r\n                      this.state.pageSize * (this.state.currentPage - 1)\r\n                    }. ${question.title} --> ${question.qText}`}\r\n                  </ListGroup.Item>\r\n                ))}\r\n              </ListGroup>\r\n            </FormCheck>\r\n            <p className='text-muted'>\r\n              ** Please add checked questions to{' '}\r\n              <Badge variant='info'>Preview Cart</Badge>. Otherwise no questions\r\n              will be avaiable in exam.\r\n            </p>\r\n            <Pagination\r\n              itemsCount={this.props.question.questions.length}\r\n              pageSize={this.state.pageSize}\r\n              currentPage={this.state.currentPage}\r\n              onPageHandler={this.onPageHandler}\r\n            />\r\n\r\n            <div className='d-flex justify-content-center align-items-center'>\r\n              <Button\r\n                onClick={() => {\r\n                  this.setState({\r\n                    selectedQuestions: checkedQuestionIds.map(\r\n                      (id) => this.state[id]\r\n                    )\r\n                  })\r\n                }}\r\n                className='mr-5 mb-2 mb-sm-0'\r\n              >\r\n                Add Questions to Preview Cart\r\n              </Button>\r\n\r\n              <Form.Group controlId='formGridParent'>\r\n                <Form.Label>Actions</Form.Label>\r\n                <Form.Control\r\n                  as='select'\r\n                  name='action'\r\n                  onChange={this.actionHandleChange}\r\n                >\r\n                  <option>Select...</option>\r\n                  <option value='mAll'>Mark All</option>\r\n                  <option value='uAll'>UnMark All</option>\r\n                  <option value='mPQ'>Mark The On Page's Questiones </option>\r\n                  <option value='uPQ'>UnMark The On Page's Questiones</option>\r\n                </Form.Control>\r\n              </Form.Group>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onFetchCategoryLoader: () => dispatch(fetchCategory()),\r\n    onFetchCoursesLoader: () => dispatch(fetchCourseLoader()),\r\n    onGetQuestionLoader: () => dispatch(getQuestionLoader()),\r\n    onGetQuestionByCategoryLoader: (id) =>\r\n      dispatch(getQuestionByCategoryLoader(id))\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.auth,\r\n    question: state.question,\r\n    category: state.category,\r\n    api: state.api,\r\n    courses: state.courses\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ExamPaper)\r\n"],"sourceRoot":""}