{"version":3,"sources":["config/routes.config.js","config/env.config.js","components/seo/metainfo.js","components/shared/spinner/spinner.js","components/socialShare/socialShare.js","components/exams/gallary/examCard.js","components/exams/gallary/gallaryCard.js","container/exams/examLists.js"],"names":["RoutesConfig","Home","metaInfo","title","description","Exams","Dashboard","Course","Reports","Profile","Settings","Category","Question","CourseBuilder","RoutineBuilder","ExamBuilder","ExamEdit","Login","Signup","AUTHOR_NAME","process","_defaultTitle","_defaultDescription","MetaInfo","meta","defer","lang","Helmet","htmlAttributes","titleTemplate","name","content","property","concat","contentCenter","position","top","left","zIndex","SpinnerCustom","animation","role","variant","style","iconStyle","SocialShare","url","props","className","fontSize","quote","hashtag","size","round","body","source","EditExam","React","lazy","categoryTypeVariant","ExamCard","width","height","examId","courseId","imgSrc","categoryType","createdAt","endDate","free","examLoader","authToken","landing","dispatch","useDispatch","token","useSelector","state","auth","intl","useIntl","useState","res","setRes","editExam","setEditExam","key","canActivate","rolePermitted","coordinator","Img","src","Body","Title","fontWeight","Subtitle","map","category","formatMessage","id","defaultMessage","moment","format","to","onClick","resetExamResultLoader","disabled","fallback","editExamHandleClose","trigger","placement","overlay","PopoverWrapper","forwardRef","ref","as","Content","axios","baseURL","method","then","response","catch","error","JSON","stringify","getRndInteger","min","max","Math","floor","random","ListCard","exams","show","setShow","handleClose","onHide","Header","closeButton","toUpperCase","slice","exam","length","imageUrl","filter","cat","Footer","marginTop","i","startDate","examType","ExamLists","this","onGetAllExamsLoader","Object","keys","Component","injectIntl","connect","getAllExamsLoader"],"mappings":"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","file":"static/js/43.5662b88f.chunk.js","sourcesContent":["export const RoutesConfig = {\r\n  Home: {\r\n    metaInfo: {\r\n      title: 'Online Exam Platform',\r\n      description:\r\n        'Online Exam Platform - participate into exam from anywhere anytime with extensive solve immediately. Question and answer is authentic with help of talented mentor.'\r\n    }\r\n  },\r\n  Exams: {\r\n    metaInfo: {\r\n      title: 'Lists Of Exams',\r\n      description:\r\n        'Lists of all available exams. Participate into the exams. Test your skill and find the gap.'\r\n    }\r\n  },\r\n  Dashboard: {\r\n    metaInfo: {\r\n      title: 'Dashboard',\r\n      description:\r\n        'Get all contents at one place. Your routine, reports, activity, featured & latest exam and many more.'\r\n    }\r\n  },\r\n  Course: {\r\n    metaInfo: {\r\n      title: 'Course',\r\n      description:\r\n        'Enroll for your desire courses and prepare for upcoming exams.'\r\n    }\r\n  },\r\n  Reports: {\r\n    metaInfo: {\r\n      title: 'Reports',\r\n      description:\r\n        'In depth reports all of your exam. Take a look and get the gap.'\r\n    }\r\n  },\r\n  Profile: {\r\n    metaInfo: {\r\n      title: 'Profile',\r\n      description: 'Update the profile and get a better user exprience.'\r\n    }\r\n  },\r\n  Settings: {\r\n    metaInfo: {\r\n      title: 'Settings'\r\n    }\r\n  },\r\n  Category: {\r\n    metaInfo: {\r\n      title: 'CategoryBuilder'\r\n    }\r\n  },\r\n  Question: {\r\n    metaInfo: {\r\n      title: 'QuestionBuilder'\r\n    }\r\n  },\r\n  CourseBuilder: {\r\n    metaInfo: {\r\n      title: 'CourseBuilder'\r\n    }\r\n  },\r\n  RoutineBuilder: {\r\n    metaInfo: {\r\n      title: 'RoutineBuilder'\r\n    }\r\n  },\r\n  ExamBuilder: {\r\n    metaInfo: {\r\n      title: 'ExamBuilder'\r\n    }\r\n  },\r\n  ExamEdit: {\r\n    metaInfo: {\r\n      title: 'ExamEdit'\r\n    }\r\n  },\r\n  Login: {\r\n    metaInfo: {\r\n      title: 'Login',\r\n      description: 'Login to access the app.'\r\n    }\r\n  },\r\n  Signup: {\r\n    metaInfo: {\r\n      title: 'Signup',\r\n      description: 'To use the app fully, You have to signup '\r\n    }\r\n  }\r\n}\r\n","export const APP_NAME = process.env.REACT_APP_NAME\r\nexport const DEFAULT_LOCALE = process.env.REACT_APP_LANG\r\nexport const BASE_URL = process.env.REACT_APP_BASE_URL\r\nexport const AUTHOR_NAME = process.env.REACT_APP_AUTHOR_NAME\r\n","import React from 'react'\r\nimport Helmet from 'react-helmet'\r\nimport {\r\n  APP_NAME,\r\n  AUTHOR_NAME,\r\n  BASE_URL,\r\n  DEFAULT_LOCALE\r\n} from '../../config/env.config'\r\nimport { RoutesConfig } from '../../config/routes.config'\r\n\r\nconst {\r\n  title: _defaultTitle,\r\n  description: _defaultDescription\r\n} = RoutesConfig.Home.metaInfo\r\n\r\nconst MetaInfo = ({\r\n  meta = [],\r\n  defer = false,\r\n  lang = DEFAULT_LOCALE,\r\n  title = _defaultTitle,\r\n  description = _defaultDescription\r\n}) => (\r\n  <Helmet\r\n    defer={defer}\r\n    title={title}\r\n    htmlAttributes={{ lang }}\r\n    titleTemplate={`%s | ${APP_NAME}`}\r\n    meta={[\r\n      {\r\n        name: 'description',\r\n        content: description\r\n      },\r\n      {\r\n        property: 'og:description',\r\n        content: description\r\n      },\r\n      {\r\n        property: 'og:title',\r\n        content: title\r\n      },\r\n      {\r\n        property: 'og:type',\r\n        content: 'website'\r\n      },\r\n      {\r\n        property: 'og:image',\r\n        content: `${BASE_URL}/logo.png`\r\n      },\r\n      {\r\n        name: 'author',\r\n        content: AUTHOR_NAME\r\n      }\r\n    ].concat(meta)}\r\n  />\r\n)\r\n\r\nexport default MetaInfo\r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nconst contentCenter = {\r\n  //styling to display server response in middle of screen\r\n  position: 'fixed',\r\n  top: '45vh',\r\n  left: '50%',\r\n  zIndex: '10000000000'\r\n}\r\n\r\nexport default function SpinnerCustom() {\r\n  return (\r\n    <Spinner\r\n      animation='grow'\r\n      role='status'\r\n      variant='dark'\r\n      style={contentCenter}\r\n    ></Spinner>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Badge } from 'react-bootstrap'\r\nimport {\r\n  EmailIcon,\r\n  EmailShareButton,\r\n  FacebookIcon,\r\n  FacebookShareButton,\r\n  LinkedinIcon,\r\n  LinkedinShareButton,\r\n  TwitterIcon,\r\n  TwitterShareButton\r\n} from 'react-share'\r\n\r\nconst iconStyle = {\r\n  size: 35,\r\n  round: true\r\n}\r\n\r\nexport default function SocialShare({ title, description, url, ...props }) {\r\n  url = process.env.REACT_APP_BASE_URL + url\r\n\r\n  return (\r\n    <div className='mt-3' {...props}>\r\n      <Badge\r\n        variant='success'\r\n        className='mr-1 p-1'\r\n        style={{ fontSize: '.8rem' }}\r\n      >\r\n        Share on\r\n      </Badge>\r\n\r\n      <FacebookShareButton\r\n        url={url}\r\n        quote={description}\r\n        hashtag={title}\r\n        className='mr-1'\r\n      >\r\n        <FacebookIcon size={iconStyle.size} round={iconStyle.round} />\r\n      </FacebookShareButton>\r\n\r\n      <TwitterShareButton\r\n        url={url}\r\n        title={description}\r\n        hashtag={title}\r\n        className='mr-1'\r\n      >\r\n        <TwitterIcon size={iconStyle.size} round={iconStyle.round} />\r\n      </TwitterShareButton>\r\n\r\n      <EmailShareButton\r\n        url={url}\r\n        body={description}\r\n        title={title}\r\n        className='mr-1'\r\n      >\r\n        <EmailIcon size={iconStyle.size} round={iconStyle.round} />\r\n      </EmailShareButton>\r\n\r\n      <LinkedinShareButton\r\n        url={url}\r\n        source={url}\r\n        body={description}\r\n        title={title}\r\n        className='mr-1'\r\n      >\r\n        <LinkedinIcon size={iconStyle.size} round={iconStyle.round} />\r\n      </LinkedinShareButton>\r\n    </div>\r\n  )\r\n}\r\n","import axios from 'axios'\r\n//import moment from 'moment'\r\nimport * as moment from 'dayjs'\r\nimport React, { Suspense, useState } from 'react'\r\nimport {\r\n  Alert,\r\n  Badge,\r\n  Button,\r\n  Card,\r\n  OverlayTrigger,\r\n  Popover\r\n} from 'react-bootstrap'\r\nimport { FormattedMessage, useIntl } from 'react-intl'\r\nimport { LazyLoadComponent } from 'react-lazy-load-image-component'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { resetExamResultLoader } from '../../../store/exams'\r\nimport { canActivate, rolePermitted } from '../../../utils/canActivate'\r\nimport SocialShare from '../../socialShare/socialShare'\r\nconst EditExam = React.lazy(() =>\r\n  import('../../../container/examBuilder/editExam')\r\n)\r\n\r\nconst categoryTypeVariant = (name) => {\r\n  let variant = 'primary'\r\n  switch (name) {\r\n    case 'Featured':\r\n      variant = 'warning'\r\n      break\r\n    case 'Free':\r\n      variant = 'secondary'\r\n      break\r\n\r\n    default:\r\n      break\r\n  }\r\n  return variant\r\n}\r\n\r\nexport default function ExamCard({\r\n  width = '350',\r\n  height = '180',\r\n  examId,\r\n  courseId,\r\n  imgSrc,\r\n  title,\r\n  categoryType,\r\n  description,\r\n  createdAt,\r\n  endDate,\r\n  free,\r\n  examLoader,\r\n  landing,\r\n  authToken\r\n}) {\r\n  const dispatch = useDispatch()\r\n  const token = useSelector((state) => state.auth.token)\r\n  const intl = useIntl()\r\n  const [res, setRes] = useState(null)\r\n  const [editExam, setEditExam] = useState(false)\r\n\r\n  function editExamHandleClose() {\r\n    setEditExam(false)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Card key={examId} className='mr-2 mb-2' style={{ width: width + 'px' }}>\r\n        <LazyLoadComponent>\r\n          {!canActivate(rolePermitted.coordinator, token) && (\r\n            <Card.Img\r\n              variant='top'\r\n              src={imgSrc}\r\n              width={width}\r\n              height={height}\r\n            />\r\n          )}\r\n        </LazyLoadComponent>\r\n        <Card.Body>\r\n          <div>\r\n            <Card.Title style={{ fontSize: '1.4rem', fontWeight: '900' }}>\r\n              {title}\r\n            </Card.Title>\r\n\r\n            <Card.Subtitle>\r\n              {categoryType &&\r\n                categoryType.map((category) => (\r\n                  <Badge\r\n                    key={category.name}\r\n                    variant={categoryTypeVariant(category.name)}\r\n                    className='mr-1'\r\n                  >\r\n                    {category.name}\r\n                  </Badge>\r\n                ))}\r\n            </Card.Subtitle>\r\n          </div>\r\n\r\n          <div className='mt-1 pt-2'>\r\n            <p className=''>{description} </p>\r\n\r\n            <p className='text-right'>\r\n              <span className='text-muted'>\r\n                {intl.formatMessage({\r\n                  id: 'db.so',\r\n                  defaultMessage: 'Start on'\r\n                })}{' '}\r\n                : {moment(createdAt).format('YYYY-MMM-DD hh:mm A')}\r\n              </span>\r\n              <br />\r\n              {\r\n                <span className='text-danger'>\r\n                  {intl.formatMessage({\r\n                    id: 'db.eo',\r\n                    defaultMessage: 'Ends on'\r\n                  })}{' '}\r\n                  : {moment(endDate).format('YYYY-MMM-DD hh:mm A')}\r\n                </span>\r\n              }\r\n            </p>\r\n          </div>\r\n\r\n          <div className='d-flex justify-content-around'>\r\n            <Link\r\n              className='text-white'\r\n              to={\r\n                courseId\r\n                  ? `/exams/${examId}_${courseId}`\r\n                  : free\r\n                  ? `/exams/free/${examId}`\r\n                  : ''\r\n              }\r\n            >\r\n              <Button\r\n                variant='outline-primary'\r\n                onClick={() => {\r\n                  dispatch(resetExamResultLoader())\r\n                }}\r\n                disabled={!free}\r\n              >\r\n                <FormattedMessage id='btn.start' defaultMessage='Start Exam' />\r\n              </Button>\r\n            </Link>\r\n            <Link className='text-white' to={'/result/rank/' + examId}>\r\n              <Button\r\n                onClick={() => {\r\n                  dispatch(resetExamResultLoader())\r\n                }}\r\n                variant='outline-dark'\r\n              >\r\n                <FormattedMessage id='btn.rank' defaultMessage='Rank' />\r\n              </Button>\r\n            </Link>\r\n          </div>\r\n          {authToken &&\r\n            (free ? (\r\n              <Alert variant='warning' className='mt-2'>\r\n                Taking part to this exam will not be added to your exam profile.{' '}\r\n              </Alert>\r\n            ) : (\r\n              <Alert variant='danger' className='mt-2'>\r\n                You can not take part this exam. Go to{' '}\r\n                <Link to='/exams'>avaiable exams </Link>\r\n              </Alert>\r\n            ))}\r\n          <SocialShare\r\n            url={'/exams/' + examId}\r\n            title={title}\r\n            description={description}\r\n          />\r\n\r\n          {canActivate(rolePermitted.coordinator, token) && (\r\n            <div className='mt-2'>\r\n              {editExam && (\r\n                <Suspense fallback={<div>Loading...</div>}>\r\n                  <EditExam\r\n                    editExam={editExam}\r\n                    editExamHandleClose={editExamHandleClose}\r\n                  />\r\n                </Suspense>\r\n              )}\r\n              <Button\r\n                variant='primary'\r\n                className='mr-3'\r\n                onClick={() => {\r\n                  setEditExam(true)\r\n                }}\r\n              >\r\n                Edit\r\n              </Button>\r\n\r\n              <OverlayTrigger\r\n                trigger='click'\r\n                placement='top'\r\n                overlay={\r\n                  <PopoverWrapper\r\n                    id={examId}\r\n                    res={res}\r\n                    setRes={setRes}\r\n                    token={token}\r\n                    examLoader={examLoader}\r\n                  />\r\n                }\r\n              >\r\n                <Button\r\n                  onClick={() => {\r\n                    dispatch(resetExamResultLoader())\r\n                  }}\r\n                  variant='danger'\r\n                >\r\n                  Delete\r\n                </Button>\r\n              </OverlayTrigger>\r\n            </div>\r\n          )}\r\n        </Card.Body>\r\n      </Card>\r\n    </>\r\n  )\r\n}\r\n\r\nconst PopoverWrapper = React.forwardRef(\r\n  ({ id, res, setRes, token, examLoader, ...props }, ref) => (\r\n    <Popover id='popover-basic' ref={ref} {...props}>\r\n      <Popover.Title as='h3'>Are You Sure To delete The Exam</Popover.Title>\r\n      <Popover.Content>\r\n        <p>{res}</p>\r\n        <Button\r\n          variant='danger'\r\n          onClick={() => {\r\n            //setAuthorizationToken(token);\r\n            axios({\r\n              baseURL: process.env.REACT_APP_SITE_URL,\r\n              url: '/exams/' + id,\r\n              method: 'delete'\r\n            })\r\n              .then((response) => {\r\n                examLoader()\r\n                setRes('Successfully Deleted')\r\n              })\r\n              .catch((error) => {\r\n                setRes('Can not delete the exam' + JSON.stringify(error))\r\n              })\r\n          }}\r\n        >\r\n          Yes\r\n        </Button>\r\n      </Popover.Content>\r\n    </Popover>\r\n  )\r\n)\r\n","import React, { useState } from 'react'\r\nimport { Badge, Button, Col, Modal, Row } from 'react-bootstrap'\r\nimport { useIntl } from 'react-intl'\r\nimport { useSelector } from 'react-redux'\r\nimport ExamCard from './examCard'\r\n\r\nfunction getRndInteger(min, max) {\r\n  return Math.floor(Math.random() * (max - min)) + min\r\n}\r\n\r\nexport default function ListCard({ title, exams, landing, examLoader }) {\r\n  const authToken = useSelector((state) => (state.auth.token ? true : false))\r\n  const intl = useIntl()\r\n\r\n  const [show, setShow] = useState(false)\r\n  const handleClose = () => setShow(false)\r\n  const handleShow = () => setShow(true)\r\n  return (\r\n    <>\r\n      <Modal show={show} onHide={handleClose} size={'xl'}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n            {intl.formatMessage({ id: 'btn.more', defaultMessage: 'More' })}\r\n            <Badge variant='warning'>{' ' + title.toUpperCase() + ' '}</Badge>\r\n            {intl.formatMessage({ id: 'btn.exams', defaultMessage: 'Exams' })}\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {\r\n            <Row className='mt-3 ml-3'>\r\n              <Col className='d-flex justify-content-center flex-wrap'>\r\n                {exams.slice(2).map((exam) => (\r\n                  <ExamCard\r\n                    key={exam.id}\r\n                    examId={exam.id}\r\n                    imgSrc={\r\n                      exam.categoryType.length > 0\r\n                        ? process.env.REACT_APP_SITE_URL +\r\n                          '/' +\r\n                          exam.categoryType[\r\n                            getRndInteger(0, exam.categoryType.length)\r\n                          ].imageUrl\r\n                        : '/assets/image/uncat.jpg'\r\n                    }\r\n                    title={exam.title}\r\n                    categoryType={\r\n                      exam.categoryType.length > 0\r\n                        ? exam.categoryType\r\n                        : [{ name: 'Uncategorized' }]\r\n                    }\r\n                    description={exam.description}\r\n                    createdAt={exam.createdAt}\r\n                    endDate={exam.endDate}\r\n                    free={\r\n                      exam.categoryType.filter((cat) => cat.name === 'Free')\r\n                        .length > 0\r\n                    }\r\n                    examLoader={examLoader}\r\n                  />\r\n                ))}\r\n              </Col>\r\n            </Row>\r\n          }\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant='secondary' onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n      <div\r\n        className='mb-2 border position-relative'\r\n        style={{ marginTop: '100px' }}\r\n      >\r\n        <h3\r\n          className='text-center bg-warning text-light px-2 py-1'\r\n          style={{\r\n            position: 'absolute',\r\n            top: '-30px',\r\n            left: '50px',\r\n            zIndex: '100'\r\n          }}\r\n        >\r\n          {title.toUpperCase() + ' '}{' '}\r\n          {!landing && (\r\n            <Badge variant='light' className='ml-2'>\r\n              {' '}\r\n              {exams.length}\r\n            </Badge>\r\n          )}{' '}\r\n        </h3>\r\n        <div className='mt-4'>\r\n          <div className='d-flex justify-content-around flex-wrap'>\r\n            {exams.length < 1 && (\r\n              <p className='lead text-danger'>\r\n                {' '}\r\n                {title +\r\n                  ' ' +\r\n                  intl.formatMessage({\r\n                    id: 'noExamCreated',\r\n                    defaultMessage: 'are not created'\r\n                  })}{' '}\r\n              </p>\r\n            )}\r\n            {exams.map((exam, i) =>\r\n              i < 3 ? (\r\n                <ExamCard\r\n                  key={exam.id}\r\n                  examId={exam.id}\r\n                  imgSrc={\r\n                    exam.categoryType.length > 0\r\n                      ? process.env.REACT_APP_SITE_URL +\r\n                        '/' +\r\n                        exam.categoryType[\r\n                          getRndInteger(0, exam.categoryType.length)\r\n                        ].imageUrl\r\n                      : '/assets/image/uncat.jpg'\r\n                  }\r\n                  title={exam.title}\r\n                  categoryType={\r\n                    exam.categoryType.length > 0\r\n                      ? exam.categoryType\r\n                      : [{ name: 'Uncategorized' }]\r\n                  }\r\n                  description={exam.description}\r\n                  createdAt={exam.startDate}\r\n                  endDate={exam.endDate}\r\n                  free={\r\n                    exam.categoryType.filter((cat) => cat.name === 'Free')\r\n                      .length > 0\r\n                  }\r\n                  examLoader={examLoader}\r\n                  landing={landing}\r\n                  authToken={authToken}\r\n                />\r\n              ) : (\r\n                ''\r\n              )\r\n            )}\r\n          </div>\r\n          {!landing && (\r\n            <div className='my-2 d-flex justify-content-center'>\r\n              {exams.length > 2 ? (\r\n                <Button\r\n                  style={{ height: '50px', width: '150px' }}\r\n                  onClick={() => {\r\n                    handleShow()\r\n                  }}\r\n                >\r\n                  {intl.formatMessage({\r\n                    id: 'btn.more',\r\n                    defaultMessage: 'More...'\r\n                  })}\r\n                  .\r\n                </Button>\r\n              ) : (\r\n                ''\r\n              )}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import React, { Component } from 'react'\r\nimport { injectIntl } from 'react-intl'\r\nimport { connect } from 'react-redux'\r\nimport GallaryCard from '../../components/exams/gallary/gallaryCard'\r\nimport MetaInfo from '../../components/seo/metainfo'\r\nimport Spinner from '../../components/shared/spinner/spinner'\r\nimport { RoutesConfig } from '../../config/routes.config'\r\nimport { getAllExamsLoader } from '../../store/exams'\r\n\r\nexport const examType = [\r\n  'Assignment',\r\n  'Weekly',\r\n  'Monthly',\r\n  'Assesment',\r\n  'Term',\r\n  'Test',\r\n  'Final'\r\n]\r\n\r\nclass ExamLists extends Component {\r\n  componentDidMount() {\r\n    this.props.onGetAllExamsLoader()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <MetaInfo {...RoutesConfig.Exams.metaInfo} />\r\n        {this.props.exams.exams.length < 1 && <Spinner />}\r\n        {Object.keys(this.props.exams.exams).map(\r\n          (key) =>\r\n            this.props.exams.exams[key] && (\r\n              <GallaryCard\r\n                key={key}\r\n                title={this.props.intl.formatMessage({\r\n                  id: key,\r\n                  defaultMessage: key\r\n                })}\r\n                exams={this.props.exams.exams[key]}\r\n                examLoader={this.props.onGetAllExamsLoader}\r\n              />\r\n            )\r\n        )}\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onGetAllExamsLoader: () => dispatch(getAllExamsLoader())\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    exams: state.exams\r\n  }\r\n}\r\n\r\nexport default injectIntl(\r\n  connect(mapStateToProps, mapDispatchToProps)(ExamLists)\r\n)\r\n"],"sourceRoot":""}