{"version":3,"sources":["config/routes.config.js","config/env.config.js","components/seo/metainfo.js","container/category/categoryForm.js","container/category/category.jsx"],"names":["RoutesConfig","Home","metaInfo","title","description","Exams","Dashboard","Course","Reports","Profile","Settings","Category","Question","CourseBuilder","RoutineBuilder","ExamBuilder","ExamEdit","Login","Signup","AUTHOR_NAME","process","_defaultTitle","_defaultDescription","MetaInfo","meta","defer","lang","Helmet","htmlAttributes","titleTemplate","name","content","property","concat","CategoryForm","props","submitHandler","handleChange","formErrors","categories","selectOptionValueRef","category","showEditCategoryAccordionStateHandler","Accordion","className","defaultActiveKey","Toggle","as","Card","Header","eventKey","Collapse","Form","onSubmit","enctype","Group","controlId","Label","Control","type","placeholder","value","onChange","length","ref","map","categorySlug","slug","replace","id","selected","parentId","order","image","Button","variant","onClick","formValid","rest","valid","error","Object","values","forEach","v","resetState","setState","isEditCategory","popover","Popover","Title","Content","deleteCategory","hideResponse","response","e","preventDefault","state","current","data","FormData","keys","key","append","setAuthorizationToken","auth","token","loading","axios","request","baseURL","url","method","then","res","responseClass","onFetchCategoryLoader","setTimeout","catch","errorHandler","toUpperCase","editCategorysubmitHandler","target","files","validator","isLength","min","max","contains","isInt","isMongoId","isNumeric","showEditCategoryComponent","React","createRef","this","delete","Spinner","animation","role","Alert","OverlayTrigger","trigger","placement","rootClose","overlay","disabled","Component","connect","dispatch","fetchCategory","onCreateCategoryloader","createCategory"],"mappings":"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","file":"static/js/56.02931c63.chunk.js","sourcesContent":["export const RoutesConfig = {\r\n  Home: {\r\n    metaInfo: {\r\n      title: 'Online Exam Platform',\r\n      description:\r\n        'Online Exam Platform - participate into exam from anywhere anytime with extensive solve immediately. Question and answer is authentic with help of talented mentor.'\r\n    }\r\n  },\r\n  Exams: {\r\n    metaInfo: {\r\n      title: 'Lists Of Exams',\r\n      description:\r\n        'Lists of all available exams. Participate into the exams. Test your skill and find the gap.'\r\n    }\r\n  },\r\n  Dashboard: {\r\n    metaInfo: {\r\n      title: 'Dashboard',\r\n      description:\r\n        'Get all contents at one place. Your routine, reports, activity, featured & latest exam and many more.'\r\n    }\r\n  },\r\n  Course: {\r\n    metaInfo: {\r\n      title: 'Course',\r\n      description:\r\n        'Enroll for your desire courses and prepare for upcoming exams.'\r\n    }\r\n  },\r\n  Reports: {\r\n    metaInfo: {\r\n      title: 'Reports',\r\n      description:\r\n        'In depth reports all of your exam. Take a look and get the gap.'\r\n    }\r\n  },\r\n  Profile: {\r\n    metaInfo: {\r\n      title: 'Profile',\r\n      description: 'Update the profile and get a better user exprience.'\r\n    }\r\n  },\r\n  Settings: {\r\n    metaInfo: {\r\n      title: 'Settings'\r\n    }\r\n  },\r\n  Category: {\r\n    metaInfo: {\r\n      title: 'CategoryBuilder'\r\n    }\r\n  },\r\n  Question: {\r\n    metaInfo: {\r\n      title: 'QuestionBuilder'\r\n    }\r\n  },\r\n  CourseBuilder: {\r\n    metaInfo: {\r\n      title: 'CourseBuilder'\r\n    }\r\n  },\r\n  RoutineBuilder: {\r\n    metaInfo: {\r\n      title: 'RoutineBuilder'\r\n    }\r\n  },\r\n  ExamBuilder: {\r\n    metaInfo: {\r\n      title: 'ExamBuilder'\r\n    }\r\n  },\r\n  ExamEdit: {\r\n    metaInfo: {\r\n      title: 'ExamEdit'\r\n    }\r\n  },\r\n  Login: {\r\n    metaInfo: {\r\n      title: 'Login',\r\n      description: 'Login to access the app.'\r\n    }\r\n  },\r\n  Signup: {\r\n    metaInfo: {\r\n      title: 'Signup',\r\n      description: 'To use the app fully, You have to signup '\r\n    }\r\n  }\r\n}\r\n","export const APP_NAME = process.env.REACT_APP_NAME\r\nexport const DEFAULT_LOCALE = process.env.REACT_APP_LANG\r\nexport const BASE_URL = process.env.REACT_APP_BASE_URL\r\nexport const AUTHOR_NAME = process.env.REACT_APP_AUTHOR_NAME\r\n","import React from 'react'\r\nimport Helmet from 'react-helmet'\r\nimport {\r\n  APP_NAME,\r\n  AUTHOR_NAME,\r\n  BASE_URL,\r\n  DEFAULT_LOCALE\r\n} from '../../config/env.config'\r\nimport { RoutesConfig } from '../../config/routes.config'\r\n\r\nconst {\r\n  title: _defaultTitle,\r\n  description: _defaultDescription\r\n} = RoutesConfig.Home.metaInfo\r\n\r\nconst MetaInfo = ({\r\n  meta = [],\r\n  defer = false,\r\n  lang = DEFAULT_LOCALE,\r\n  title = _defaultTitle,\r\n  description = _defaultDescription\r\n}) => (\r\n  <Helmet\r\n    defer={defer}\r\n    title={title}\r\n    htmlAttributes={{ lang }}\r\n    titleTemplate={`%s | ${APP_NAME}`}\r\n    meta={[\r\n      {\r\n        name: 'description',\r\n        content: description\r\n      },\r\n      {\r\n        property: 'og:description',\r\n        content: description\r\n      },\r\n      {\r\n        property: 'og:title',\r\n        content: title\r\n      },\r\n      {\r\n        property: 'og:type',\r\n        content: 'website'\r\n      },\r\n      {\r\n        property: 'og:image',\r\n        content: `${BASE_URL}/logo.png`\r\n      },\r\n      {\r\n        name: 'author',\r\n        content: AUTHOR_NAME\r\n      }\r\n    ].concat(meta)}\r\n  />\r\n)\r\n\r\nexport default MetaInfo\r\n","import React from 'react'\r\nimport { Accordion, Button, Card, Form } from 'react-bootstrap'\r\n\r\nconst CategoryForm = (props) => {\r\n  const {\r\n    submitHandler,\r\n    handleChange,\r\n    formErrors,\r\n    categories,\r\n    name,\r\n    //slug,\r\n    selectOptionValueRef,\r\n    category,\r\n    showEditCategoryAccordionStateHandler\r\n  } = props\r\n  return (\r\n    <Accordion className='mt-3' defaultActiveKey={name && '0'}>\r\n      <Accordion.Toggle as={Card.Header} eventKey='0'>\r\n        <h3> {name ? 'Edit ' + name : 'Create A New'} Category</h3>\r\n      </Accordion.Toggle>\r\n      <Accordion.Collapse eventKey='0'>\r\n        <Form\r\n          className='mt-2'\r\n          onSubmit={submitHandler}\r\n          enctype='multipart/form-data'\r\n        >\r\n          <Form.Group controlId='formGroupCategoryName'>\r\n            <Form.Label>Category Name</Form.Label>\r\n            <Form.Control\r\n              type='text'\r\n              placeholder='Category Name'\r\n              name='name'\r\n              value={category ? category.name : null}\r\n              onChange={handleChange}\r\n            />\r\n            {formErrors.name.length > 0 && (\r\n              <span className='errorMessage'>{formErrors.name}</span>\r\n            )}\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId='formGridParent'>\r\n            <Form.Label>Parent Category</Form.Label>\r\n            <Form.Control\r\n              as='select'\r\n              name='parentId'\r\n              onChange={handleChange}\r\n              ref={selectOptionValueRef}\r\n            >\r\n              <option value='Top'>Top</option>\r\n              {categories.map((value) => {\r\n                let categorySlug = value.slug.replace(/_/g, ' / ')\r\n                return (\r\n                  <option\r\n                    value={value.id}\r\n                    selected={category && value.id === category.parentId}\r\n                  >\r\n                    {categorySlug}\r\n                  </option>\r\n                )\r\n              })}\r\n            </Form.Control>\r\n            {formErrors.parentId.length > 0 && (\r\n              <span className='errorMessage'>{formErrors.parentId}</span>\r\n            )}\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId='formGroupCategoryOrder'>\r\n            <Form.Label>Category Order</Form.Label>\r\n            <Form.Control\r\n              type='text'\r\n              name='order'\r\n              value={category && category.order}\r\n              placeholder='e.g. 5 <..Order makes priority. Lower value higher order..>'\r\n              onChange={handleChange}\r\n            />\r\n            {formErrors.order.length > 0 && (\r\n              <span className='errorMessage'>{formErrors.order}</span>\r\n            )}\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId='formGroupCategoryDes'>\r\n            <Form.Label>Description</Form.Label>\r\n            <Form.Control\r\n              type='textarea'\r\n              placeholder='Enter short description'\r\n              name='description'\r\n              value={category && category.description}\r\n              onChange={handleChange}\r\n            />\r\n            {formErrors.description.length > 0 && (\r\n              <span className='errorMessage'>{formErrors.description}</span>\r\n            )}\r\n          </Form.Group>\r\n\r\n          <Form.Group>\r\n            <Form.Label>Upload Image</Form.Label>\r\n            <input\r\n              type='file'\r\n              name='image'\r\n              className={'form-control-file'}\r\n              onChange={handleChange}\r\n            />\r\n            {formErrors.image.length > 0 && (\r\n              <span className='errorMessage'>{formErrors.image}</span>\r\n            )}\r\n          </Form.Group>\r\n\r\n          <Button type='submit' className='btn-submit'>\r\n            Submit\r\n          </Button>\r\n          {name && (\r\n            <Button\r\n              variant='success'\r\n              className='ml-3'\r\n              onClick={showEditCategoryAccordionStateHandler}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          )}\r\n        </Form>\r\n      </Accordion.Collapse>\r\n    </Accordion>\r\n  )\r\n}\r\n\r\nexport default CategoryForm\r\n","import axios from 'axios'\r\nimport React, { Component } from 'react'\r\nimport { OverlayTrigger, Popover } from 'react-bootstrap'\r\nimport Accordion from 'react-bootstrap/Accordion'\r\nimport Alert from 'react-bootstrap/Alert'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Card from 'react-bootstrap/Card'\r\nimport Spinner from 'react-bootstrap/Spinner'\r\nimport { connect } from 'react-redux'\r\nimport validator from 'validator'\r\nimport MetaInfo from '../../components/seo/metainfo'\r\nimport { RoutesConfig } from '../../config/routes.config'\r\nimport { createCategory, fetchCategory } from '../../store/category'\r\nimport errorHandler from '../../utils/errorHandler'\r\nimport setAuthorizationToken from '../../utils/setAuthorizationToken'\r\nimport CategoryForm from './categoryForm'\r\n\r\nconst formValid = ({ formErrors, rest }) => {\r\n  //to check if form fields are null or contain error\r\n  let valid = true\r\n  let error = ''\r\n  Object.values(formErrors).forEach((v) => {\r\n    v.length > 0 && (valid = false) && (error = v)\r\n    v.length > 0 && (error = v)\r\n  })\r\n\r\n  Object.values(rest).forEach((v) => {\r\n    v === null && (valid = false)\r\n  })\r\n  return { valid, error } // valid: is it valid ; error: what is the error message\r\n}\r\n\r\nclass Category extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      loading: false, // controlls spinner state\r\n      //isEditCategory: false,\r\n      id: null, // need to pass id in edit or delete category section\r\n      name: null, // used in editCategory component to display the category name in heading\r\n      slug: null,\r\n      parentId: 'Top',\r\n      description: null,\r\n      order: null,\r\n      image: null, // required in create, optional in edit and no need delete section\r\n      response: null, // to display response message\r\n      responseClass: 'success', // depends on response type\r\n      showEditCategoryComponent: false, // show or hide editCategory component\r\n      formErrors: {\r\n        // for storing form feilds error on handle change\r\n        name: '',\r\n        parentId: '',\r\n        description: '',\r\n        order: '',\r\n        image: ''\r\n      }\r\n    }\r\n    this.selectOptionValueRef = React.createRef()\r\n  }\r\n  resetState = () => {\r\n    this.setState({\r\n      id: null,\r\n      name: null,\r\n      slug: null,\r\n      parentId: 'Top',\r\n      description: null,\r\n      order: null,\r\n      image: null,\r\n      isEditCategory: false\r\n    })\r\n  }\r\n  popover = (\r\n    category // function to deliver popover\r\n  ) => (\r\n    <Popover id='popover-basic'>\r\n      <Popover.Title as='h3' className='bg-warning text-white'>\r\n        Warning Message\r\n      </Popover.Title>\r\n      <Popover.Content>\r\n        Are you sure You want to delete category.\r\n        <Button\r\n          variant='danger ml-3'\r\n          onClick={() => {\r\n            this.deleteCategory(category)\r\n          }}\r\n        >\r\n          Yes\r\n        </Button>\r\n      </Popover.Content>\r\n    </Popover>\r\n  )\r\n\r\n  hideResponse = () => {\r\n    // hide the response message\r\n    this.setState({ response: null })\r\n  }\r\n\r\n  submitHandler = (e) => {\r\n    e.preventDefault()\r\n\r\n    const { formErrors, name, order, description } = this.state\r\n\r\n    const parentId =\r\n      this.state.parentId || this.selectOptionValueRef.current.value\r\n\r\n    const rest = { name, parentId, order, description }\r\n\r\n    const { valid, error } = formValid({ rest, formErrors })\r\n\r\n    if (valid) {\r\n      //this.resetState();\r\n      const data = new FormData()\r\n      Object.keys(rest).forEach((key) => {\r\n        rest[key] && data.append(key, rest[key])\r\n      })\r\n      setAuthorizationToken(this.props.auth.token)\r\n      this.setState({ loading: true })\r\n\r\n      axios\r\n        .request({\r\n          baseURL: process.env.REACT_APP_SITE_URL,\r\n          url: '/categories',\r\n          method: 'post',\r\n          data\r\n        })\r\n        .then((res) => {\r\n          this.setState({\r\n            loading: false,\r\n            response: 'Successfully created Category',\r\n            responseClass: 'success'\r\n          })\r\n          this.props.onFetchCategoryLoader() // update the category upon creating or updating of category\r\n          setTimeout(this.hideResponse, 2000) // after 2s respones message will disaper\r\n        })\r\n        .catch((e) => {\r\n          const response = errorHandler(e)\r\n          this.setState({ loading: false, response, responseClass: 'danger' })\r\n          setTimeout(this.hideResponse, 2000)\r\n        })\r\n    } else {\r\n      this.setState({\r\n        response:\r\n          'Please fill form corectly' +\r\n          (error ? ' __ ' + error.toUpperCase() + ' __' : ''),\r\n        responseClass: 'danger'\r\n      })\r\n      setTimeout(this.hideResponse, 2000)\r\n    }\r\n  }\r\n\r\n  editCategorysubmitHandler = (e) => {\r\n    e.preventDefault()\r\n\r\n    const { formErrors, id, name, order, description, image, slug } = this.state\r\n    const parentId =\r\n      this.state.parentId || this.selectOptionValueRef.current.value\r\n\r\n    const rest = image\r\n      ? { id, name, slug, parentId, order, description, image }\r\n      : { id, name, slug, parentId, order, description }\r\n\r\n    const { valid, error } = formValid({ rest, formErrors })\r\n\r\n    if (valid) {\r\n      this.resetState()\r\n      const data = new FormData()\r\n      Object.keys(rest).forEach((key) => {\r\n        rest[key] && data.append(key, rest[key])\r\n      })\r\n\r\n      setAuthorizationToken(this.props.auth.token)\r\n      this.setState({ loading: true })\r\n\r\n      axios\r\n        .request({\r\n          baseURL: process.env.REACT_APP_SITE_URL,\r\n          url: '/categories',\r\n          method: 'patch',\r\n          data\r\n        })\r\n        .then((res) => {\r\n          this.setState({\r\n            loading: false,\r\n            response: 'Successfully Updated Category',\r\n            responseClass: 'success'\r\n          })\r\n          this.props.onFetchCategoryLoader() // update the category upon creating or updating of category\r\n          setTimeout(this.hideResponse, 2000) // after 2s respones message will disaper\r\n        })\r\n        .catch((e) => {\r\n          const response = errorHandler(e)\r\n          this.setState({ loading: false, response, responseClass: 'danger' })\r\n          setTimeout(this.hideResponse, 2000)\r\n        })\r\n      this.resetState()\r\n    } else {\r\n      this.setState({\r\n        response:\r\n          'Please fill form corectly' +\r\n          (error ? ' __ ' + error.toUpperCase() + ' __' : ''),\r\n        responseClass: 'danger'\r\n      })\r\n      setTimeout(this.hideResponse, 2000)\r\n    }\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    const { name, value, files } = e.target\r\n    let formErrors = this.state.formErrors\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        formErrors.name =\r\n          validator.isLength(value, { min: 1, max: 25 }) &&\r\n          !validator.contains(value, '_') &&\r\n          !validator.contains(value, '/')\r\n            ? ''\r\n            : \"Category Name should not be emty, more than 25 charecter and contain '_,/'\"\r\n        break\r\n      case 'description':\r\n        formErrors.description = validator.isLength(value, {\r\n          min: 30,\r\n          max: 300\r\n        })\r\n          ? ''\r\n          : 'Description should be minimum 30 or maximum 300 characters'\r\n        break\r\n      case 'parentId':\r\n        formErrors.parentId =\r\n          value === 'Top' ||\r\n          validator.isInt(value) ||\r\n          validator.isMongoId(value)\r\n            ? ''\r\n            : 'ParentId is not valid'\r\n        break\r\n      case 'order':\r\n        formErrors.order = validator.isNumeric(value)\r\n          ? ''\r\n          : 'Order should be only number'\r\n        break\r\n      // case 'image':\r\n      //   formErrors.image = !validator.isEmpty(value)\r\n      //     ? ''\r\n      //     : 'Choose a valid image'\r\n      //   break\r\n      default:\r\n        break\r\n    }\r\n\r\n    this.setState({\r\n      formErrors: formErrors,\r\n      [name]: files ? files[0] : value\r\n    })\r\n  }\r\n\r\n  deleteCategory(category) {\r\n    setAuthorizationToken(this.props.auth.token)\r\n    this.setState({ loading: true })\r\n\r\n    axios\r\n      .delete(process.env.REACT_APP_SITE_URL + '/categories', {\r\n        data: { id: category.id }\r\n      })\r\n      .then((res) => {\r\n        this.setState({\r\n          loading: false,\r\n          response: category.name + ' deleted successfully',\r\n          responseClass: 'success'\r\n        })\r\n        this.props.onFetchCategoryLoader()\r\n        setTimeout(this.hideResponse, 2000)\r\n      })\r\n      .catch((e) => {\r\n        const response = errorHandler(e)\r\n        this.setState({\r\n          loading: false,\r\n          response,\r\n          responseClass: 'danger'\r\n        })\r\n        setTimeout(this.hideResponse, 2000)\r\n      })\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.onFetchCategoryLoader()\r\n  }\r\n\r\n  render() {\r\n    const { categories } = this.props.category\r\n    return (\r\n      <>\r\n        <MetaInfo {...RoutesConfig.Category.metaInfo} />\r\n        {this.state.loading && (\r\n          <Spinner\r\n            animation='border'\r\n            role='status'\r\n            variant='dark'\r\n            className='content-center'\r\n          ></Spinner>\r\n        )}\r\n\r\n        {this.state.response && (\r\n          <Alert\r\n            variant={this.state.responseClass}\r\n            className='text-center content-center'\r\n          >\r\n            {this.state.response}\r\n          </Alert>\r\n        )}\r\n\r\n        <CategoryForm\r\n          submitHandler={this.submitHandler}\r\n          handleChange={this.handleChange}\r\n          formErrors={this.state.formErrors}\r\n          categories={categories}\r\n          category={{\r\n            name: this.state.name,\r\n            parentId: this.state.parentId,\r\n            order: this.state.order,\r\n            description: this.state.description\r\n          }}\r\n        />\r\n\r\n        <div className='mt-3'>\r\n          <Accordion>\r\n            <Accordion.Toggle as={Card.Header} eventKey='1'>\r\n              <h3>Edit Category</h3>\r\n            </Accordion.Toggle>\r\n            <Accordion.Collapse eventKey='1'>\r\n              <div className='mt-2 p-2'>\r\n                {categories.map((e) => {\r\n                  return (\r\n                    <Alert variant='primary'>\r\n                      {e.slug}\r\n                      <Button\r\n                        className='ml-2'\r\n                        onClick={() => {\r\n                          this.setState({\r\n                            id: e.id,\r\n                            slug: e.slug,\r\n                            name: e.name,\r\n                            parentId: e.parentId,\r\n                            order: e.order,\r\n                            description: e.description,\r\n                            showEditCategoryComponent: e.slug\r\n                          })\r\n                        }}\r\n                      >\r\n                        Edit\r\n                      </Button>\r\n                      <OverlayTrigger\r\n                        trigger={['click']}\r\n                        placement='right'\r\n                        rootClose\r\n                        overlay={this.popover(e)}\r\n                      >\r\n                        <Button\r\n                          className='ml-2'\r\n                          variant='danger'\r\n                          disabled={this.state.showEditCategoryComponent}\r\n                        >\r\n                          Delete\r\n                        </Button>\r\n                      </OverlayTrigger>\r\n                      <div>\r\n                        {this.state.showEditCategoryComponent === e.slug && (\r\n                          <CategoryForm\r\n                            submitHandler={this.editCategorysubmitHandler}\r\n                            handleChange={this.handleChange}\r\n                            loading={this.state.loading}\r\n                            formErrors={this.state.formErrors}\r\n                            categories={categories}\r\n                            name={e.name}\r\n                            //slug={e.slug}\r\n                            selectOptionValueRef={this.selectOptionValueRef}\r\n                            category={{\r\n                              name: this.state.name,\r\n                              parentId: this.state.parentId,\r\n                              order: this.state.order,\r\n                              description: this.state.description\r\n                            }}\r\n                            showEditCategoryAccordionStateHandler={() => {\r\n                              this.setState({\r\n                                showEditCategoryComponent: false\r\n                              })\r\n                            }}\r\n                          />\r\n                        )}\r\n                      </div>\r\n                    </Alert>\r\n                  )\r\n                })}\r\n              </div>\r\n            </Accordion.Collapse>\r\n          </Accordion>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onFetchCategoryLoader: () => dispatch(fetchCategory()),\r\n    onCreateCategoryloader: (data) => dispatch(createCategory(data))\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.auth,\r\n    category: state.category\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Category)\r\n"],"sourceRoot":""}