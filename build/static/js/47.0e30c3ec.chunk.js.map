{"version":3,"sources":["config/routes.config.js","config/env.config.js","components/seo/metainfo.js","components/socialShare/socialShare.js","container/courses/index.js","container/exams/examListByCourse.js"],"names":["RoutesConfig","Home","metaInfo","title","description","Exams","Dashboard","Course","Reports","Profile","Settings","Category","Question","CourseBuilder","RoutineBuilder","ExamBuilder","ExamEdit","Login","Signup","AUTHOR_NAME","process","_defaultTitle","_defaultDescription","MetaInfo","meta","defer","lang","Helmet","htmlAttributes","titleTemplate","name","content","property","concat","iconStyle","SocialShare","url","props","className","variant","style","fontSize","quote","hashtag","size","round","body","source","duration","require","relativeTime","moment","styles","position","top","right","zIndex","Index","landing","dispatch","useDispatch","coursesStore","useSelector","state","courses","isAuthenticated","auth","token","useState","res","setRes","showModalMsg","setShowModalMsg","filter","course","id","useEffect","fetchCourseLoader","handleModalClose","show","onHide","Header","closeButton","Title","Body","remarkPlugins","remarkGfm","Footer","onClick","onClose","src","alt","loading","animation","role","map","width","Img","imageUrl","fontWeight","Text","substring","price","endDate","diff","startDate","humanize","to","height","axios","baseURL","method","then","response","data","message","catch","error","fromNow","ExamListsByCat","fetchCourseEnrolledByStuLoader","coursesEnrolledByStu","length","isAfter"],"mappings":"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","file":"static/js/47.0e30c3ec.chunk.js","sourcesContent":["export const RoutesConfig = {\r\n  Home: {\r\n    metaInfo: {\r\n      title: 'Online Exam Platform',\r\n      description:\r\n        'Online Exam Platform - participate into exam from anywhere anytime with extensive solve immediately. Question and answer is authentic with help of talented mentor.'\r\n    }\r\n  },\r\n  Exams: {\r\n    metaInfo: {\r\n      title: 'Lists Of Exams',\r\n      description:\r\n        'Lists of all available exams. Participate into the exams. Test your skill and find the gap.'\r\n    }\r\n  },\r\n  Dashboard: {\r\n    metaInfo: {\r\n      title: 'Dashboard',\r\n      description:\r\n        'Get all contents at one place. Your routine, reports, activity, featured & latest exam and many more.'\r\n    }\r\n  },\r\n  Course: {\r\n    metaInfo: {\r\n      title: 'Course',\r\n      description:\r\n        'Enroll for your desire courses and prepare for upcoming exams.'\r\n    }\r\n  },\r\n  Reports: {\r\n    metaInfo: {\r\n      title: 'Reports',\r\n      description:\r\n        'In depth reports all of your exam. Take a look and get the gap.'\r\n    }\r\n  },\r\n  Profile: {\r\n    metaInfo: {\r\n      title: 'Profile',\r\n      description: 'Update the profile and get a better user exprience.'\r\n    }\r\n  },\r\n  Settings: {\r\n    metaInfo: {\r\n      title: 'Settings'\r\n    }\r\n  },\r\n  Category: {\r\n    metaInfo: {\r\n      title: 'CategoryBuilder'\r\n    }\r\n  },\r\n  Question: {\r\n    metaInfo: {\r\n      title: 'QuestionBuilder'\r\n    }\r\n  },\r\n  CourseBuilder: {\r\n    metaInfo: {\r\n      title: 'CourseBuilder'\r\n    }\r\n  },\r\n  RoutineBuilder: {\r\n    metaInfo: {\r\n      title: 'RoutineBuilder'\r\n    }\r\n  },\r\n  ExamBuilder: {\r\n    metaInfo: {\r\n      title: 'ExamBuilder'\r\n    }\r\n  },\r\n  ExamEdit: {\r\n    metaInfo: {\r\n      title: 'ExamEdit'\r\n    }\r\n  },\r\n  Login: {\r\n    metaInfo: {\r\n      title: 'Login',\r\n      description: 'Login to access the app.'\r\n    }\r\n  },\r\n  Signup: {\r\n    metaInfo: {\r\n      title: 'Signup',\r\n      description: 'To use the app fully, You have to signup '\r\n    }\r\n  }\r\n}\r\n","export const APP_NAME = process.env.REACT_APP_NAME\r\nexport const DEFAULT_LOCALE = process.env.REACT_APP_LANG\r\nexport const BASE_URL = process.env.REACT_APP_BASE_URL\r\nexport const AUTHOR_NAME = process.env.REACT_APP_AUTHOR_NAME\r\n","import React from 'react'\r\nimport Helmet from 'react-helmet'\r\nimport {\r\n  APP_NAME,\r\n  AUTHOR_NAME,\r\n  BASE_URL,\r\n  DEFAULT_LOCALE\r\n} from '../../config/env.config'\r\nimport { RoutesConfig } from '../../config/routes.config'\r\n\r\nconst {\r\n  title: _defaultTitle,\r\n  description: _defaultDescription\r\n} = RoutesConfig.Home.metaInfo\r\n\r\nconst MetaInfo = ({\r\n  meta = [],\r\n  defer = false,\r\n  lang = DEFAULT_LOCALE,\r\n  title = _defaultTitle,\r\n  description = _defaultDescription\r\n}) => (\r\n  <Helmet\r\n    defer={defer}\r\n    title={title}\r\n    htmlAttributes={{ lang }}\r\n    titleTemplate={`%s | ${APP_NAME}`}\r\n    meta={[\r\n      {\r\n        name: 'description',\r\n        content: description\r\n      },\r\n      {\r\n        property: 'og:description',\r\n        content: description\r\n      },\r\n      {\r\n        property: 'og:title',\r\n        content: title\r\n      },\r\n      {\r\n        property: 'og:type',\r\n        content: 'website'\r\n      },\r\n      {\r\n        property: 'og:image',\r\n        content: `${BASE_URL}/logo.png`\r\n      },\r\n      {\r\n        name: 'author',\r\n        content: AUTHOR_NAME\r\n      }\r\n    ].concat(meta)}\r\n  />\r\n)\r\n\r\nexport default MetaInfo\r\n","import React from 'react'\r\nimport { Badge } from 'react-bootstrap'\r\nimport {\r\n  EmailIcon,\r\n  EmailShareButton,\r\n  FacebookIcon,\r\n  FacebookShareButton,\r\n  LinkedinIcon,\r\n  LinkedinShareButton,\r\n  TwitterIcon,\r\n  TwitterShareButton\r\n} from 'react-share'\r\n\r\nconst iconStyle = {\r\n  size: 35,\r\n  round: true\r\n}\r\n\r\nexport default function SocialShare({ title, description, url, ...props }) {\r\n  url = process.env.REACT_APP_BASE_URL + url\r\n\r\n  return (\r\n    <div className='mt-3' {...props}>\r\n      <Badge\r\n        variant='success'\r\n        className='mr-1 p-1'\r\n        style={{ fontSize: '.8rem' }}\r\n      >\r\n        Share on\r\n      </Badge>\r\n\r\n      <FacebookShareButton\r\n        url={url}\r\n        quote={description}\r\n        hashtag={title}\r\n        className='mr-1'\r\n      >\r\n        <FacebookIcon size={iconStyle.size} round={iconStyle.round} />\r\n      </FacebookShareButton>\r\n\r\n      <TwitterShareButton\r\n        url={url}\r\n        title={description}\r\n        hashtag={title}\r\n        className='mr-1'\r\n      >\r\n        <TwitterIcon size={iconStyle.size} round={iconStyle.round} />\r\n      </TwitterShareButton>\r\n\r\n      <EmailShareButton\r\n        url={url}\r\n        body={description}\r\n        title={title}\r\n        className='mr-1'\r\n      >\r\n        <EmailIcon size={iconStyle.size} round={iconStyle.round} />\r\n      </EmailShareButton>\r\n\r\n      <LinkedinShareButton\r\n        url={url}\r\n        source={url}\r\n        body={description}\r\n        title={title}\r\n        className='mr-1'\r\n      >\r\n        <LinkedinIcon size={iconStyle.size} round={iconStyle.round} />\r\n      </LinkedinShareButton>\r\n    </div>\r\n  )\r\n}\r\n","import axios from 'axios'\r\n//import moment from 'moment'\r\nimport * as moment from 'dayjs'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Badge, Button, Card, Modal, Spinner, Toast } from 'react-bootstrap'\r\nimport { FaCalendarAlt, FaMoneyCheckAlt } from 'react-icons/fa'\r\nimport { LazyLoadComponent } from 'react-lazy-load-image-component'\r\nimport ReactMarkdown from 'react-markdown'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport remarkGfm from 'remark-gfm'\r\nimport MetaInfo from '../../components/seo/metainfo'\r\nimport SocialShare from '../../components/socialShare/socialShare'\r\nimport { RoutesConfig } from '../../config/routes.config'\r\nimport { fetchCourseLoader } from '../../store/courses'\r\nconst duration = require('dayjs/plugin/duration')\r\nconst relativeTime = require('dayjs/plugin/relativeTime')\r\nmoment.extend(relativeTime)\r\nmoment.extend(duration)\r\n\r\nconst styles = {\r\n  position: 'fixed',\r\n  top: '70px',\r\n  right: '10px',\r\n  zIndex: 100\r\n}\r\n\r\nexport default function Index({ landing = null }) {\r\n  const dispatch = useDispatch()\r\n  const coursesStore = useSelector((state) => state.courses)\r\n  const isAuthenticated = useSelector((state) => state.auth.token !== null)\r\n  const [res, setRes] = useState(null)\r\n  const [showModalMsg, setShowModalMsg] = useState(null)\r\n  let courses = coursesStore\r\n    ? landing\r\n      ? coursesStore.courses.filter((course, id) => id < 3)\r\n      : coursesStore.courses\r\n    : []\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchCourseLoader())\r\n  }, [dispatch])\r\n\r\n  const handleClose = () => {\r\n    setRes(null)\r\n  }\r\n\r\n  const handleModalClose = () => {\r\n    setShowModalMsg(null)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {!landing && <MetaInfo {...RoutesConfig.Course.metaInfo} />}\r\n      <Modal show={showModalMsg} onHide={handleModalClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Details</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <ReactMarkdown remarkPlugins={[remarkGfm]}>\r\n            {showModalMsg}\r\n          </ReactMarkdown>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant='secondary ' onClick={handleModalClose}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n      <Toast show={res} onClose={handleClose} style={styles}>\r\n        <Toast.Header className='bg-warning text-white'>\r\n          <img src='holder.js/20x20?text=%20' className='rounded me-2' alt='' />\r\n          <strong className='me-auto'>Server Response</strong>\r\n        </Toast.Header>\r\n        <Toast.Body>{res}</Toast.Body>\r\n      </Toast>\r\n\r\n      <h3 className='text-center heading'>Available Courses</h3>\r\n      {landing && <div className='heading-underline'></div>}\r\n      {coursesStore.loading &&\r\n        (landing ? (\r\n          <div className='text-center'>\r\n            <span>Please wait. Courses are loading </span>\r\n          </div>\r\n        ) : (\r\n          <Spinner\r\n            animation='border'\r\n            role='status'\r\n            variant='dark'\r\n            className='content-center'\r\n          />\r\n        ))}\r\n      <div className='d-flex justify-content-around flex-wrap'>\r\n        {courses.map((course) => (\r\n          <Card className='my-3' style={{ width: '350px' }}>\r\n            <LazyLoadComponent>\r\n              <Card.Img\r\n                variant='top'\r\n                src={\r\n                  course.imageUrl\r\n                    ? `${process.env.REACT_APP_SITE_URL}/${course.imageUrl}`\r\n                    : `${process.env.REACT_APP_SITE_URL}/images/courses/index.png`\r\n                }\r\n              />\r\n            </LazyLoadComponent>\r\n            <Card.Body>\r\n              <Card.Title style={{ fontSize: '1.4rem', fontWeight: '900' }}>\r\n                {course.title}\r\n              </Card.Title>\r\n              <Card.Text>\r\n                <ReactMarkdown remarkPlugins={[remarkGfm]}>\r\n                  {course.description.substring(0, 250) + ' ...'}\r\n                </ReactMarkdown>\r\n                <p className='text-center'>\r\n                  <Button\r\n                    variant='outline-primary'\r\n                    onClick={() => {\r\n                      setShowModalMsg(course.description)\r\n                    }}\r\n                  >\r\n                    More\r\n                  </Button>\r\n                </p>\r\n              </Card.Text>\r\n              <Card.Text className='d-flex justify-content-between'>\r\n                <div>\r\n                  <FaMoneyCheckAlt size='1.5rem' />{' '}\r\n                  <span className='bg-info text-white px-3 py-1'>\r\n                    {course.price ? course.price + ' Taka' : 'Free'}\r\n                  </span>\r\n                </div>\r\n                <div>\r\n                  <FaCalendarAlt size='1.5rem' />{' '}\r\n                  <span className='bg-secondary text-white px-3 py-1'>\r\n                    {moment\r\n                      .duration(moment(course.endDate).diff(course.startDate))\r\n                      .humanize()}\r\n                  </span>\r\n                </div>\r\n              </Card.Text>\r\n              {isAuthenticated && (\r\n                <Card.Text className='text-center mt-2'>\r\n                  <Link to={'/exams/courses/' + course.id}>\r\n                    <Button variant='primary'>Go to Exams</Button>\r\n                  </Link>\r\n                </Card.Text>\r\n              )}\r\n              <hr />\r\n              {isAuthenticated ? (\r\n                <Button\r\n                  variant='primary'\r\n                  style={{ width: '320px', height: '55px', fontSize: '18px' }}\r\n                  onClick={() => {\r\n                    //setAuthorizationToken(token);\r\n                    axios({\r\n                      baseURL: process.env.REACT_APP_SITE_URL,\r\n                      url: '/courses/enroll/' + course.id,\r\n                      method: 'patch'\r\n                    })\r\n                      .then((response) => {\r\n                        setRes(response.data.message)\r\n                      })\r\n                      .catch((error) => {\r\n                        setRes(\r\n                          'Sorry. Enrollment to this course is not possible due to server error. Please contact with admin.'\r\n                        )\r\n                      })\r\n                  }}\r\n                >\r\n                  Enroll\r\n                </Button>\r\n              ) : (\r\n                <Badge variant='warning' className='p-2'>\r\n                  Please Login to Enroll.\r\n                </Badge>\r\n              )}\r\n              <hr />\r\n              <Card.Text className='text-muted text-center'>\r\n                <span>Start: {moment(course.startDate).fromNow()}</span>\r\n              </Card.Text>\r\n            </Card.Body>\r\n            <Card.Footer>\r\n              <SocialShare\r\n                title={course.title}\r\n                description={course.description}\r\n                url=''\r\n              />\r\n            </Card.Footer>\r\n          </Card>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","//import moment from 'moment'\r\nimport * as moment from 'dayjs'\r\nimport React, { useEffect } from 'react'\r\nimport { Badge } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport MetaInfo from '../../components/seo/metainfo'\r\nimport { RoutesConfig } from '../../config/routes.config'\r\nimport { fetchCourseEnrolledByStuLoader } from '../../store/courses'\r\nimport CoursesComponent from '../courses/'\r\n\r\nexport default function ExamListsByCat() {\r\n  const dispatch = useDispatch()\r\n  const courses = useSelector((state) => state.courses)\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchCourseEnrolledByStuLoader())\r\n  }, [dispatch])\r\n\r\n  return (\r\n    <div className=''>\r\n      <h2 className='text-center'>Enrolled Courses</h2>\r\n      <div className='m-3 d-flex justify-content-around flex-wrap'>\r\n        {courses.coursesEnrolledByStu.length < 1 ? (\r\n          <div>\r\n            <p className='text-center text-danger'>\r\n              {' '}\r\n              You have not enrolled for any course yet. Please enroll for course\r\n              first.\r\n            </p>\r\n            <CoursesComponent />\r\n          </div>\r\n        ) : (\r\n          courses.coursesEnrolledByStu.map((course) => (\r\n            <div className='mt-3 mr-3 px-5 pt-5 pb-3 bg-dark text-white'>\r\n              <h4>{course.title}</h4>\r\n              <p className='mt-5 text-center'>\r\n                {moment().isAfter(course.endDate) ? (\r\n                  <Badge variant='danger' className='p-3'>\r\n                    This Course is ended\r\n                  </Badge>\r\n                ) : (\r\n                  <Link to={'/exams/courses/' + course.id}>\r\n                    <Badge variant='light' className='p-3'>\r\n                      Go to Exams\r\n                    </Badge>\r\n                  </Link>\r\n                )}\r\n              </p>\r\n            </div>\r\n          ))\r\n        )}\r\n      </div>\r\n      <MetaInfo {...RoutesConfig.Exams.metaInfo} />\r\n    </div>\r\n  )\r\n}\r\n"],"sourceRoot":""}