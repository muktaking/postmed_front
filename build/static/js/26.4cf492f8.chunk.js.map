{"version":3,"sources":["components/shared/spinner/spinner.js","components/exams/gallary/examCard.js","components/exams/gallary/gallaryCard.js","container/exams/examLists.js","container/exams/component/examByCat.js","../node_modules/react-bootstrap/esm/Tooltip.js","container/exams/component/latest.js","container/exams/examListsByCat.js","container/exams/examsLists.index.js"],"names":["contentCenter","position","top","left","zIndex","SpinnerCustom","animation","role","variant","style","iconStyle","SocialShare","title","description","url","props","process","className","fontSize","quote","hashtag","size","round","body","source","categoryTypeVariant","name","ExamCard","width","height","examId","imgSrc","categoryType","createdAt","endDate","free","examLoader","dispatch","landing","useDispatch","token","useSelector","state","auth","intl","useIntl","useState","res","setRes","key","canActivate","rolePermitted","admin","Img","src","Body","Title","fontWeight","Subtitle","map","category","formatMessage","id","defaultMessage","moment","format","to","onClick","resetExamResultLoader","disabled","trigger","placement","overlay","PopoverWrapper","React","forwardRef","ref","as","Content","axios","baseURL","method","then","response","catch","error","JSON","stringify","getRndInteger","min","max","Math","floor","random","ListCard","exams","authToken","show","setShow","handleClose","onHide","Header","closeButton","toUpperCase","slice","exam","length","imageUrl","filter","cat","Footer","marginTop","i","startDate","examType","ExamLists","this","onGetAllExamsLoader","RoutesConfig","Exams","metaInfo","Object","keys","Component","injectIntl","connect","getAllExamsLoader","ExamByCat","sm","Tooltip","_ref","bsPrefix","children","arrowProps","scheduleUpdate","outOfBoundaries","_objectWithoutPropertiesLoose","useBootstrapPrefix","createElement","_extends","classNames","defaultProps","displayName","Latest","setExam","useEffect","get","data","e","console","log","Row","ExamListsByCat","catHierarchy","fetchCategory","catExtractor","child","CatCard","Badge","whatToshowFirst","tooltip","DefaultView","handler","OverlayTrigger","marginLeft","ExamsListsIndex","setId","viewHandler"],"mappings":"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","file":"static/js/26.4cf492f8.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nconst contentCenter = {\r\n  //styling to display server response in middle of screen\r\n  position: 'fixed',\r\n  top: '45vh',\r\n  left: '50%',\r\n  zIndex: '10000000000'\r\n}\r\n\r\nexport default function SpinnerCustom() {\r\n  return (\r\n    <Spinner\r\n      animation='grow'\r\n      role='status'\r\n      variant='dark'\r\n      style={contentCenter}\r\n    ></Spinner>\r\n  )\r\n}\r\n","import axios from 'axios'\r\nimport moment from 'moment'\r\nimport React, { useState } from 'react'\r\nimport { Badge, Button, Card, OverlayTrigger, Popover } from 'react-bootstrap'\r\nimport { FormattedMessage, useIntl } from 'react-intl'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport {\r\n  EmailIcon,\r\n  EmailShareButton,\r\n  FacebookIcon,\r\n  FacebookShareButton,\r\n  LinkedinIcon,\r\n  LinkedinShareButton,\r\n  TwitterIcon,\r\n  TwitterShareButton\r\n} from 'react-share'\r\nimport { resetExamResultLoader } from '../../../store/exams'\r\nimport { canActivate, rolePermitted } from '../../../utils/canActivate'\r\n\r\nconst iconStyle = {\r\n  size: 35,\r\n  round: true\r\n}\r\n\r\nconst SocialShare = ({ title, description, url, ...props }) => {\r\n  url = process.env.REACT_APP_BASE_URL + url\r\n\r\n  return (\r\n    <div className='mt-3' {...props}>\r\n      <hr />\r\n\r\n      <Badge\r\n        variant='success'\r\n        className='mr-1 p-1'\r\n        style={{ fontSize: '.8rem' }}\r\n      >\r\n        Share on\r\n      </Badge>\r\n\r\n      <FacebookShareButton\r\n        url={url}\r\n        quote={description}\r\n        hashtag={title}\r\n        className='mr-1'\r\n      >\r\n        <FacebookIcon size={iconStyle.size} round={iconStyle.round} />\r\n      </FacebookShareButton>\r\n\r\n      <TwitterShareButton\r\n        url={url}\r\n        title={description}\r\n        hashtag={title}\r\n        className='mr-1'\r\n      >\r\n        <TwitterIcon size={iconStyle.size} round={iconStyle.round} />\r\n      </TwitterShareButton>\r\n\r\n      <EmailShareButton\r\n        url={url}\r\n        body={description}\r\n        title={title}\r\n        className='mr-1'\r\n      >\r\n        <EmailIcon size={iconStyle.size} round={iconStyle.round} />\r\n      </EmailShareButton>\r\n\r\n      <LinkedinShareButton\r\n        url={url}\r\n        source={url}\r\n        body={description}\r\n        title={title}\r\n        className='mr-1'\r\n      >\r\n        <LinkedinIcon size={iconStyle.size} round={iconStyle.round} />\r\n      </LinkedinShareButton>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst categoryTypeVariant = (name) => {\r\n  let variant = 'primary'\r\n  switch (name) {\r\n    case 'Featured':\r\n      variant = 'warning'\r\n      break\r\n    case 'Free':\r\n      variant = 'secondary'\r\n      break\r\n\r\n    default:\r\n      break\r\n  }\r\n  return variant\r\n}\r\n\r\nexport default function ExamCard({\r\n  width = '350',\r\n  height = '180',\r\n  examId,\r\n  imgSrc,\r\n  title,\r\n  categoryType,\r\n  description,\r\n  createdAt,\r\n  endDate,\r\n  free,\r\n  examLoader,\r\n  landing\r\n}) {\r\n  const dispatch = useDispatch()\r\n  const token = useSelector((state) => state.auth.token)\r\n  const intl = useIntl()\r\n  const [res, setRes] = useState(null)\r\n\r\n  return (\r\n    <>\r\n      <Card key={examId} className='mr-2 mb-2' style={{ width: width + 'px' }}>\r\n        {!canActivate(rolePermitted.admin, token) && (\r\n          <Card.Img variant='top' src={imgSrc} width={width} height={height} />\r\n        )}\r\n        <Card.Body>\r\n          <div>\r\n            <Card.Title style={{ fontSize: '1.4rem', fontWeight: '900' }}>\r\n              {title}\r\n            </Card.Title>\r\n\r\n            <Card.Subtitle>\r\n              {categoryType &&\r\n                categoryType.map((category) => (\r\n                  <Badge\r\n                    key={category.name}\r\n                    variant={categoryTypeVariant(category.name)}\r\n                    className='mr-1'\r\n                  >\r\n                    {category.name}\r\n                  </Badge>\r\n                ))}\r\n            </Card.Subtitle>\r\n          </div>\r\n\r\n          <div className='mt-1 pt-2'>\r\n            <p className=''>{description} </p>\r\n\r\n            <p className='text-right'>\r\n              <span className='text-muted'>\r\n                {intl.formatMessage({\r\n                  id: 'db.so',\r\n                  defaultMessage: 'Start on'\r\n                })}{' '}\r\n                : {moment(createdAt).format('YYYY-MMM-DD hh:mm A')}\r\n              </span>\r\n              <br />\r\n              {\r\n                <span className='text-danger'>\r\n                  {intl.formatMessage({\r\n                    id: 'db.eo',\r\n                    defaultMessage: 'Ends on'\r\n                  })}{' '}\r\n                  : {moment(endDate).format('YYYY-MMM-DD hh:mm A')}\r\n                </span>\r\n              }\r\n            </p>\r\n          </div>\r\n\r\n          {!canActivate(rolePermitted.admin, token) && (\r\n            <>\r\n              <div className='d-flex justify-content-around'>\r\n                <Link\r\n                  className='text-white'\r\n                  to={(free ? '/exams/free/' : '/exams/') + examId}\r\n                >\r\n                  <Button\r\n                    variant='outline-primary'\r\n                    onClick={() => {\r\n                      dispatch(resetExamResultLoader())\r\n                    }}\r\n                  >\r\n                    <FormattedMessage\r\n                      id='btn.start'\r\n                      defaultMessage='Start Exam'\r\n                    />\r\n                  </Button>\r\n                </Link>\r\n                <Link className='text-white' to={'/result/rank/' + examId}>\r\n                  <Button\r\n                    onClick={() => {\r\n                      dispatch(resetExamResultLoader())\r\n                    }}\r\n                    variant='outline-dark'\r\n                  >\r\n                    <FormattedMessage id='btn.rank' defaultMessage='Rank' />\r\n                  </Button>\r\n                </Link>\r\n              </div>\r\n              <SocialShare\r\n                url={'/exams/' + examId}\r\n                title={title}\r\n                description={description}\r\n              />\r\n            </>\r\n          )}\r\n\r\n          {canActivate(rolePermitted.admin, token) && (\r\n            <div>\r\n              <Button disabled={true} variant='primary' className='mr-3'>\r\n                Edit\r\n              </Button>\r\n              <OverlayTrigger\r\n                trigger='click'\r\n                placement='top'\r\n                overlay={\r\n                  <PopoverWrapper\r\n                    id={examId}\r\n                    res={res}\r\n                    setRes={setRes}\r\n                    token={token}\r\n                    examLoader={examLoader}\r\n                  />\r\n                }\r\n              >\r\n                <Button\r\n                  onClick={() => {\r\n                    dispatch(resetExamResultLoader())\r\n                  }}\r\n                  variant='danger'\r\n                >\r\n                  Delete\r\n                </Button>\r\n              </OverlayTrigger>\r\n            </div>\r\n          )}\r\n        </Card.Body>\r\n      </Card>\r\n    </>\r\n  )\r\n}\r\n\r\nconst PopoverWrapper = React.forwardRef(\r\n  ({ id, res, setRes, token, examLoader, ...props }, ref) => (\r\n    <Popover id='popover-basic' ref={ref} {...props}>\r\n      <Popover.Title as='h3'>Are You Sure To delete The Exam</Popover.Title>\r\n      <Popover.Content>\r\n        <p>{res}</p>\r\n        <Button\r\n          variant='danger'\r\n          onClick={() => {\r\n            //setAuthorizationToken(token);\r\n            axios({\r\n              baseURL: process.env.REACT_APP_SITE_URL,\r\n              url: '/exams/' + id,\r\n              method: 'delete'\r\n            })\r\n              .then((response) => {\r\n                examLoader()\r\n                setRes('Successfully Deleted')\r\n              })\r\n              .catch((error) => {\r\n                setRes('Can not delete the exam' + JSON.stringify(error))\r\n              })\r\n          }}\r\n        >\r\n          Yes\r\n        </Button>\r\n      </Popover.Content>\r\n    </Popover>\r\n  )\r\n)\r\n","import React, { useState } from 'react'\r\nimport { Badge, Button, Col, Modal, Row } from 'react-bootstrap'\r\nimport { useIntl } from 'react-intl'\r\nimport { useSelector } from 'react-redux'\r\nimport ExamCard from './examCard'\r\n\r\nfunction getRndInteger(min, max) {\r\n  return Math.floor(Math.random() * (max - min)) + min\r\n}\r\n\r\nexport default function ListCard({ title, exams, landing, examLoader }) {\r\n  const authToken = useSelector((state) => (state.auth.token ? true : false))\r\n  const intl = useIntl()\r\n\r\n  const [show, setShow] = useState(false)\r\n  const handleClose = () => setShow(false)\r\n  const handleShow = () => setShow(true)\r\n  return (\r\n    <>\r\n      <Modal show={show} onHide={handleClose} size={'xl'}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n            {intl.formatMessage({ id: 'btn.more', defaultMessage: 'More' })}\r\n            <Badge variant='warning'>{' ' + title.toUpperCase() + ' '}</Badge>\r\n            {intl.formatMessage({ id: 'btn.exams', defaultMessage: 'Exams' })}\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {\r\n            <Row className='mt-3 ml-3'>\r\n              <Col className='d-flex justify-content-center flex-wrap'>\r\n                {exams.slice(2).map((exam) => (\r\n                  <ExamCard\r\n                    key={exam.id}\r\n                    examId={exam.id}\r\n                    imgSrc={\r\n                      exam.categoryType.length > 0\r\n                        ? process.env.REACT_APP_SITE_URL +\r\n                          '/' +\r\n                          exam.categoryType[\r\n                            getRndInteger(0, exam.categoryType.length)\r\n                          ].imageUrl\r\n                        : '/assets/image/uncat.jpg'\r\n                    }\r\n                    title={exam.title}\r\n                    categoryType={\r\n                      exam.categoryType.length > 0\r\n                        ? exam.categoryType\r\n                        : [{ name: 'Uncategorized' }]\r\n                    }\r\n                    description={exam.description}\r\n                    createdAt={exam.createdAt}\r\n                    endDate={exam.endDate}\r\n                    free={\r\n                      !authToken &&\r\n                      exam.categoryType.filter((cat) => cat.name === 'Free')\r\n                        .length > 0\r\n                    }\r\n                    examLoader={examLoader}\r\n                  />\r\n                ))}\r\n              </Col>\r\n            </Row>\r\n          }\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant='secondary' onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n      <div\r\n        className='mb-2 border position-relative'\r\n        style={{ marginTop: '100px' }}\r\n      >\r\n        <h3\r\n          className='text-center bg-warning text-light px-2 py-1'\r\n          style={{ position: 'absolute', top: '-30px', left: '50px' }}\r\n        >\r\n          {title.toUpperCase() + ' '}{' '}\r\n          {!landing && (\r\n            <Badge variant='light' className='ml-2'>\r\n              {' '}\r\n              {exams.length}\r\n            </Badge>\r\n          )}{' '}\r\n        </h3>\r\n        <div className='mt-4'>\r\n          <div className='d-flex justify-content-around flex-wrap'>\r\n            {exams.length < 1 && (\r\n              <p className='lead text-danger'>\r\n                {' '}\r\n                {title +\r\n                  ' ' +\r\n                  intl.formatMessage({\r\n                    id: 'noExamCreated',\r\n                    defaultMessage: 'Exams is not created'\r\n                  })}{' '}\r\n              </p>\r\n            )}\r\n            {exams.map((exam, i) =>\r\n              i < 3 ? (\r\n                <ExamCard\r\n                  key={exam.id}\r\n                  examId={exam.id}\r\n                  imgSrc={\r\n                    exam.categoryType.length > 0\r\n                      ? process.env.REACT_APP_SITE_URL +\r\n                        '/' +\r\n                        exam.categoryType[\r\n                          getRndInteger(0, exam.categoryType.length)\r\n                        ].imageUrl\r\n                      : '/assets/image/uncat.jpg'\r\n                  }\r\n                  title={exam.title}\r\n                  categoryType={\r\n                    exam.categoryType.length > 0\r\n                      ? exam.categoryType\r\n                      : [{ name: 'Uncategorized' }]\r\n                  }\r\n                  description={exam.description}\r\n                  createdAt={exam.startDate}\r\n                  endDate={exam.endDate}\r\n                  free={\r\n                    !authToken &&\r\n                    exam.categoryType.filter((cat) => cat.name === 'Free')\r\n                      .length > 0\r\n                  }\r\n                  examLoader={examLoader}\r\n                />\r\n              ) : (\r\n                ''\r\n              )\r\n            )}\r\n          </div>\r\n          {!landing && (\r\n            <div className='my-2 d-flex justify-content-center'>\r\n              {exams.length > 2 ? (\r\n                <Button\r\n                  style={{ height: '50px', width: '150px' }}\r\n                  onClick={() => {\r\n                    handleShow()\r\n                  }}\r\n                >\r\n                  {intl.formatMessage({\r\n                    id: 'btn.more',\r\n                    defaultMessage: 'More...'\r\n                  })}\r\n                  .\r\n                </Button>\r\n              ) : (\r\n                ''\r\n              )}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import React, { Component } from 'react'\r\nimport { injectIntl } from 'react-intl'\r\nimport { connect } from 'react-redux'\r\nimport GallaryCard from '../../components/exams/gallary/gallaryCard'\r\nimport MetaInfo from '../../components/seo/metainfo'\r\nimport Spinner from '../../components/shared/spinner/spinner'\r\nimport { RoutesConfig } from '../../config/routes.config'\r\nimport { getAllExamsLoader } from '../../store/exams'\r\n\r\nexport const examType = [\r\n  'Assignment',\r\n  'Weekly',\r\n  'Monthly',\r\n  'Assesment',\r\n  'Term',\r\n  'Test',\r\n  'Final'\r\n]\r\n\r\nclass ExamLists extends Component {\r\n  componentDidMount() {\r\n    this.props.onGetAllExamsLoader()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <MetaInfo {...RoutesConfig.Exams.metaInfo} />\r\n        {this.props.exams.exams.length < 1 && <Spinner />}\r\n        {/* {this.props.exams.exams.length < 1 && (\r\n          <Spinner\r\n            animation=\"border\"\r\n            role=\"status\"\r\n            variant=\"dark\"\r\n            className=\"content-center\"\r\n          ></Spinner>\r\n        )} */}\r\n        {Object.keys(this.props.exams.exams).map(\r\n          (key) =>\r\n            this.props.exams.exams[key] && (\r\n              <GallaryCard\r\n                key={key}\r\n                title={this.props.intl.formatMessage({\r\n                  id: key,\r\n                  defaultMessage: key\r\n                })}\r\n                exams={this.props.exams.exams[key]}\r\n                examLoader={this.props.onGetAllExamsLoader}\r\n              />\r\n            )\r\n        )}\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onGetAllExamsLoader: () => dispatch(getAllExamsLoader())\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    exams: state.exams\r\n  }\r\n}\r\n\r\nexport default injectIntl(\r\n  connect(mapStateToProps, mapDispatchToProps)(ExamLists)\r\n)\r\n","import moment from 'moment'\r\nimport React from 'react'\r\nimport { Badge, Button, Col } from 'react-bootstrap'\r\nimport { BsFileText } from 'react-icons/bs'\r\nimport { FormattedMessage } from 'react-intl'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { resetExamResultLoader } from '../../../store/exams'\r\n\r\nexport default function ExamByCat({ exam }) {\r\n  const dispatch = useDispatch()\r\n  const authToken = useSelector((state) => (state.auth.token ? true : false))\r\n  return (\r\n    <>\r\n      <Col sm={12}>\r\n        <h4 className=''>\r\n          {/* <BsLayersFill size='1.5rem' /> */}\r\n          <span className=''>{exam.title}</span>\r\n        </h4>\r\n        <div className=''>\r\n          {/* <BsClock size='1.5rem' /> */}\r\n          <span>Start on: </span>\r\n          <Badge className='' variant='light'>\r\n            {moment(exam.startDate).format('YYYY-MMM-DD hh:mm A')}\r\n          </Badge>\r\n        </div>\r\n      </Col>\r\n      <Col sm={12} className='mt-1'>\r\n        <p className=''>\r\n          <BsFileText size='1.5rem' className='m-1' />\r\n          <span className='ml-2'>{exam.description}</span>\r\n        </p>\r\n        <p className='text-right'>\r\n          Ends on:{' '}\r\n          <Badge className='ml-2' variant='danger'>\r\n            {moment(exam.endDate).format('YYYY-MMM-DD hh:mm A')}\r\n          </Badge>\r\n        </p>\r\n        {/* <Badge variant='light' className='mt-3'>\r\n          {!authToken &&\r\n            exam.categoryType.filter((cat) => cat.name === 'Free').length > 0 &&\r\n            'Free'}\r\n        </Badge> */}\r\n        <hr />\r\n        <div>\r\n          <Link\r\n            className='text-white'\r\n            to={\r\n              (!authToken &&\r\n              exam.categoryType.filter((cat) => cat.name === 'Free').length > 0\r\n                ? '/exams/free/'\r\n                : '/exams/') + exam.id\r\n            }\r\n          >\r\n            <Button\r\n              variant='outline-primary'\r\n              onClick={() => {\r\n                dispatch(resetExamResultLoader())\r\n              }}\r\n            >\r\n              <FormattedMessage id='btn.start' defaultMessage='Start Exam' />\r\n            </Button>\r\n          </Link>\r\n          <Link className='text-white' to={'/result/rank/' + exam.id}>\r\n            <Button\r\n              onClick={() => {\r\n                dispatch(resetExamResultLoader())\r\n              }}\r\n              variant='outline-primary'\r\n              className='ml-2'\r\n            >\r\n              <FormattedMessage id='btn.rank' defaultMessage='Rank' />\r\n            </Button>\r\n          </Link>\r\n        </div>\r\n      </Col>\r\n    </>\r\n  )\r\n}\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport isRequiredForA11y from 'prop-types-extra/lib/isRequiredForA11y';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  placement: 'right'\n};\nvar Tooltip = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      placement = _ref.placement,\n      className = _ref.className,\n      style = _ref.style,\n      children = _ref.children,\n      arrowProps = _ref.arrowProps,\n      _ = _ref.scheduleUpdate,\n      _1 = _ref.outOfBoundaries,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"placement\", \"className\", \"style\", \"children\", \"arrowProps\", \"scheduleUpdate\", \"outOfBoundaries\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'tooltip');\n  return React.createElement(\"div\", _extends({\n    ref: ref,\n    style: style,\n    role: \"tooltip\",\n    \"x-placement\": placement,\n    className: classNames(className, bsPrefix, \"bs-tooltip-\" + placement)\n  }, props), React.createElement(\"div\", _extends({\n    className: \"arrow\"\n  }, arrowProps)), React.createElement(\"div\", {\n    className: bsPrefix + \"-inner\"\n  }, children));\n});\nTooltip.defaultProps = defaultProps;\nTooltip.displayName = 'Tooltip';\nexport default Tooltip;","import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Row } from 'react-bootstrap'\r\nimport ExamByCat from './examByCat'\r\n\r\nexport default function Latest() {\r\n  const [exam, setExam] = useState(null)\r\n  useEffect(() => {\r\n    axios\r\n      .get(process.env.REACT_APP_SITE_URL + '/exams/current')\r\n      .then((res) => {\r\n        setExam(res.data)\r\n      })\r\n      .catch((e) => {\r\n        console.log(e)\r\n      })\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <h3 className='text-center'>Current Exam</h3>\r\n      <Row\r\n        className='mx-auto mb-5 py-3 pl-2 border border-secondary'\r\n        style={{ width: '350px' }}\r\n      >\r\n        {exam ? <ExamByCat exam={exam} /> : <p>No current exam</p>}\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Badge } from 'react-bootstrap'\r\nimport { BsFillDashCircleFill, BsPlusCircleFill } from 'react-icons/bs'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport Spinner from '../../components/shared/spinner/spinner'\r\nimport { fetchCategory } from '../../store/category'\r\n\r\nexport default function ExamListsByCat() {\r\n  const dispatch = useDispatch()\r\n  const catHierarchy = useSelector((state) => state.category.catHierarchy)\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchCategory())\r\n  }, [dispatch])\r\n\r\n  return (\r\n    <div className='my-5'>\r\n      {catHierarchy.length < 1 && <Spinner />}\r\n      <h2 className='text-center'>Exam Categories</h2>\r\n      <div>{catExtractor(catHierarchy)}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction catExtractor(catHierarchy) {\r\n  return catHierarchy.map((cat) => {\r\n    let child = null\r\n    if (cat.child) {\r\n      child = catExtractor(cat.child)\r\n    }\r\n    return <CatCard key={cat.id} cat={cat} child={child} />\r\n  })\r\n}\r\n\r\nfunction CatCard({ cat, child, ...props }) {\r\n  const [show, setShow] = useState(false)\r\n\r\n  return (\r\n    <div\r\n      className='cat-card mt-1 ml-3 border-top-0 border-warning'\r\n      props={{ ...props }}\r\n    >\r\n      {/* <Image width={80}  src={process.env.REACT_APP_SITE_URL + \"/\" + cat.imageUrl} thumbnail /> */}\r\n      <div\r\n        className='p-3 bg-warning text-white parent'\r\n        style={{ fontSize: '1.2rem' }}\r\n      >\r\n        <Badge variant='light' className='p-2'>\r\n          <Link to={'/exams/category/' + cat.name + '-' + cat.id}>\r\n            {cat.name}\r\n          </Link>\r\n        </Badge>\r\n        {child &&\r\n          (show ? (\r\n            <BsFillDashCircleFill\r\n              size={'1.5rem'}\r\n              onClick={() => {\r\n                setShow(!show)\r\n              }}\r\n            />\r\n          ) : (\r\n            <BsPlusCircleFill\r\n              size={'1.5rem'}\r\n              onClick={() => {\r\n                setShow(!show)\r\n              }}\r\n            />\r\n          ))}\r\n      </div>\r\n      <div>{show && child}</div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap'\r\nimport { FaFlickr, FaListAlt } from 'react-icons/fa'\r\nimport LatestExam from './component/latest'\r\nimport ExamLists from './examLists'\r\nimport ExamListsByCat from './examListsByCat'\r\n\r\nconst whatToshowFirst =\r\n  process.env.REACT_APP_APP_TYPE === 'public' ? [2, 1] : [1, 2]\r\nconst tooltip =\r\n  whatToshowFirst[0] === 1\r\n    ? ['Browse By Exam Type', 'Browse By Exam Categories']\r\n    : ['Browse By Exam Categories', 'Browse By Exam Type']\r\n\r\nfunction DefaultView({ handler, id }) {\r\n  return (\r\n    <>\r\n      <LatestExam />\r\n      <div className='text-center'>\r\n        <OverlayTrigger\r\n          placement='bottom'\r\n          overlay={<Tooltip>{tooltip[0]}</Tooltip>}\r\n        >\r\n          <FaListAlt\r\n            size='2.2rem'\r\n            style={{ marginLeft: '10px' }}\r\n            className={id === 2 && 'bg-danger text-white p-2'}\r\n            onClick={() => {\r\n              handler(whatToshowFirst[0])\r\n            }}\r\n          />\r\n        </OverlayTrigger>\r\n        <OverlayTrigger\r\n          placement='bottom'\r\n          overlay={<Tooltip>{tooltip[1]}</Tooltip>}\r\n        >\r\n          <FaFlickr\r\n            size='2.2rem'\r\n            style={{ marginLeft: '10px' }}\r\n            className={id === 1 && 'bg-danger text-white p-2'}\r\n            onClick={() => {\r\n              handler(whatToshowFirst[1])\r\n            }}\r\n          />\r\n        </OverlayTrigger>\r\n\r\n        <hr className='w-50' />\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default function ExamsListsIndex() {\r\n  const [id, setId] = useState(whatToshowFirst[0])\r\n  const viewHandler = (id) => {\r\n    setId(id)\r\n  }\r\n  switch (id) {\r\n    case 1:\r\n      return (\r\n        <>\r\n          <DefaultView handler={viewHandler} id={id} /> <ExamLists />{' '}\r\n        </>\r\n      )\r\n    case 2:\r\n      return (\r\n        <>\r\n          <DefaultView handler={viewHandler} id={id} /> <ExamListsByCat />{' '}\r\n        </>\r\n      )\r\n\r\n    default:\r\n      return (\r\n        <>\r\n          <DefaultView handler={viewHandler} id={id} /> <ExamLists />{' '}\r\n        </>\r\n      )\r\n  }\r\n}\r\n"],"sourceRoot":""}