{"version":3,"sources":["store/api.js","components/scrollToTopPage/scrollToTopPage.js","container/routePages.jsx","App.jsx","store/index.js","index.js","store/middleware/index.js","utils/canActivate.js","store/auth.js","store/notification.js","store/exams.js","store/question.js","store/category.js","store/courses.js","store/examPaper.js","store/user.js","utils/errorHandler.js","store/dashboard.js","utils/setAuthorizationToken.js"],"names":["slice","createSlice","name","initialState","result","error","reducers","apiCallBegun","api","action","apiCallSuccess","payload","apiCallFail","apiCallReset","actions","ScrollToTopPage","pathname","useLocation","useEffect","window","scrollTo","NotFoundPage","lazy","pMinDelay","Landing","InnerContent","Login","LogoutPage","Signup","Reset","override","css","connect","state","token","auth","isAuthenticated","props","routes","fallback","path","component","exact","render","canActivate","rolePermitted","student","to","mentor","moderator","coordinator","App","this","onTryAutologin","Component","dispatch","checkAuthState","appReducer","combineReducers","apiReducer","authReducer","user","userReducer","category","categoryReducer","question","questionReducer","examPaper","examPaperReducer","exams","examsReducer","dashboard","dashboardReducer","courses","coursesReducer","notification","notificationReducer","rootReducer","type","undefined","store","configureStore","reducer","rootReducers","middleware","getDefaultMiddleware","getState","next","a","async","url","method","data","config","onStart","onSuccess","onError","sendToken","setAuthorizationToken","axios","request","baseURL","process","response","authSuccess","expirationDate","Date","getTime","expireIn","localStorage","setItem","accessToken","id","checkAuthTimeOut","getNotification","fetchFreshNotification","errorHandler","ReactDOM","locale","defaultLocale","messages","document","getElementById","guest","admin","roleArray","roleToString","num","identityStatusToString","loginProviderToString","role","jwtDecode","loading","userId","authStart","authFail","logout","username","password","authData","expirationTime","setTimeout","logoutLoader","getItem","removeItem","freshNoti","getFreshNotification","loadingStart","fetchNotificationLoader","nStore","JSON","parse","noti","expiry","filter","n","value","includes","questions","questionIdsByOrder","examId","singleQuestionMark","singleStemMark","penaltyMark","timeLimit","examResult","totalMark","totalScore","totalPenaltyMark","totalScorePercentage","timeTakenToComplete","rank","exam","examError","disableQuestions","resetExamResult","getAllExams","getExamById","forEach","e","push","getFreeExamById","getExamError","resetExamError","postExamById","resultArray","examRankById","postExamError","disableQuestionsAdd","resetDisableQuestions","getAllExamsLoader","getExamByIdLoader","getFreeExamByIdLoader","postExamByIdLoader","postFreeExamByIdLoader","examRankByIdLoader","courseId","resetExamResultLoader","getQuestions","getResponse","resetResponse","resetResponseLoader","getQuestionLoader","getQuestionByCategoryLoader","createQuestionLoader","questionData","FormData","Object","keys","key","append","headers","editQuestionLoader","deleteQuestionLoader","categories","catHierarchy","getCategory","fetchCategory","createCategory","coursesEnrolledByStu","expectedEnrolledStuIds","getCourses","getCoursesEnrolledByStu","fetchCourseLoader","fetchCourseEnrolledByStuLoader","ids","success","selectedQuestions","onLoading","onLoadingLoader","postExamProfile","examSpec","firstName","lastName","userName","email","mobile","userFrom","now","address","avatar","gender","faculty","institution","getUser","createdAt","getUserLoader","responseData","statusCode","message","featuredExams","userExamInfo","totalExam","upcomingExam","userExamStat","dashboardStudent","userExamStatLoader","defaults","common"],"mappings":"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","file":"static/js/main.3dc6b4f0.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst slice = createSlice({\r\n  name: 'api',\r\n  initialState: { result: null, error: null },\r\n  reducers: {\r\n    apiCallBegun: (api, action) => {\r\n      //api.loading = true;\r\n    },\r\n    apiCallSuccess: (api, action) => {\r\n      //api.loading = false;\r\n      api.result = action.payload\r\n    },\r\n    apiCallFail: (api, action) => {\r\n      api.error = action.payload\r\n    },\r\n    apiCallReset: (api) => {\r\n      api.result = null\r\n      api.error = null\r\n    }\r\n  }\r\n})\r\n\r\nexport const {\r\n  apiCallBegun,\r\n  apiCallSuccess,\r\n  apiCallFail,\r\n  apiCallReset\r\n} = slice.actions\r\n\r\nexport default slice.reducer\r\n","import { useEffect } from 'react'\r\nimport { useLocation } from 'react-router-dom'\r\n\r\nexport default function ScrollToTopPage() {\r\n  const { pathname } = useLocation()\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0)\r\n  }, [pathname])\r\n\r\n  return null\r\n}\r\n\r\n/*\r\nHow to use:\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <ScrollToTop />\r\n      <App />\r\n    </Router>\r\n  );\r\n}\r\n*/\r\n","import { css } from '@emotion/core'\r\nimport pMinDelay from 'p-min-delay'\r\nimport React, { lazy, Suspense } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect, Route, Switch } from 'react-router-dom'\r\nimport ClimbingBoxLoader from 'react-spinners/ClimbingBoxLoader'\r\nimport { canActivate, rolePermitted } from '../utils/canActivate'\r\n//import NotFoundPage from \"./404\";\r\nconst mDelay = 500\r\n\r\nconst NotFoundPage = lazy(() => pMinDelay(import('./404'), mDelay))\r\n//import Landing from \"./landing/landing\";\r\nconst Landing = lazy(() => pMinDelay(import('./landing/landing'), mDelay))\r\n//import InnerContent from \"./layout\";\r\nconst InnerContent = lazy(() => pMinDelay(import('./layout'), mDelay))\r\n//import Login from \"./registration/login\";\r\nconst Login = lazy(() => pMinDelay(import('./registration/login'), mDelay))\r\n//import LogoutPage from \"./registration/logout\";\r\nconst LogoutPage = lazy(() =>\r\n  pMinDelay(import('./registration/logout'), mDelay)\r\n)\r\n//import Signup from \"./registration/signup\";\r\nconst Signup = lazy(() => pMinDelay(import('./registration/signup'), mDelay))\r\n\r\nconst Reset = lazy(() => pMinDelay(import('./registration/reset'), mDelay))\r\n\r\nconst override = css`\r\n  display: block;\r\n  margin: 45vh auto;\r\n  bordeClimbingBoxLoader\r\n  r-color: red;\r\n`\r\n\r\nconst RoutePages = (props) => {\r\n  // const tokenRole = props.token ? jwtDecode(props.token).role : -1;\r\n  let routes = (\r\n    <Suspense fallback={<ClimbingBoxLoader css={override} />}>\r\n      <Switch>\r\n        <Route path='/login' component={Login} />\r\n        <Route path='/signup' component={Signup} />\r\n        <Route path='/reset/:id' component={Reset} />\r\n        <Route path='/exams' exact component={InnerContent} />\r\n        {/* <Route path='/exams/:id' exact component={InnerContent} /> */}\r\n        <Route path='/courses' exact component={InnerContent} />\r\n        <Route path='/exams/category/:id' exact component={InnerContent} />\r\n        <Route path='/exams/free/:id' component={InnerContent} />\r\n        <Route path='/result' component={InnerContent} />\r\n        <Route path='/result/rank/:id' component={InnerContent} />\r\n        <Route path='/help' component={InnerContent} />\r\n        <Route path='/terms' component={InnerContent} />\r\n        <Route path='/error' render={(props) => <NotFoundPage {...props} />} />\r\n        <Route path='/' exact component={Landing} />\r\n        <Route render={(props) => <NotFoundPage {...props} />} />\r\n      </Switch>\r\n    </Suspense>\r\n  )\r\n  if (\r\n    props.isAuthenticated &&\r\n    canActivate(rolePermitted.student, props.token)\r\n  ) {\r\n    routes = (\r\n      <Suspense fallback={<ClimbingBoxLoader css={override} />}>\r\n        <Switch>\r\n          <Route path='/dashboard' component={InnerContent} />\r\n          <Route path='/courses' component={InnerContent} />\r\n          <Route path='/reports' component={InnerContent} />\r\n          <Route path='/reports/actions' component={InnerContent} />\r\n          <Route path='/profile' component={InnerContent} />\r\n          <Route path='/exams' component={InnerContent} />\r\n          <Route path='/notification' component={InnerContent} />\r\n          <Route path='/exams/:id' component={InnerContent} />\r\n          <Route path='/result' component={InnerContent} />\r\n          <Route path='/rank' component={InnerContent} />\r\n          <Route path='/settings' component={InnerContent} />\r\n          <Route path='/print' component={InnerContent} />\r\n          <Route path='/logout' component={LogoutPage} />\r\n          <Route path='/help' component={InnerContent} />\r\n          <Route path='/terms' component={InnerContent} />\r\n          <Route path='/' exact component={Landing} />\r\n          <Redirect to='/dashboard' />\r\n        </Switch>\r\n      </Suspense>\r\n    )\r\n  }\r\n\r\n  if (canActivate(rolePermitted.mentor, props.token)) {\r\n    routes = (\r\n      <Suspense fallback={<ClimbingBoxLoader css={override} />}>\r\n        <Switch>\r\n          <Route path='/dashboard' component={InnerContent} />\r\n          <Route path='/profile' component={InnerContent} />\r\n          <Route path='/question' component={InnerContent} />\r\n          {/* <Route path='/exambuilder' component={InnerContent} /> */}\r\n          <Route path='/settings' component={InnerContent} />\r\n          <Route path='/print' component={InnerContent} />\r\n          <Route path='/logout' component={LogoutPage} />\r\n          <Route path='/help' component={InnerContent} />\r\n          <Route path='/terms' component={InnerContent} />\r\n          <Route path='/' exact component={Landing} />\r\n          <Redirect to='/dashboard' />\r\n        </Switch>\r\n      </Suspense>\r\n    )\r\n  }\r\n\r\n  if (canActivate(rolePermitted.moderator, props.token)) {\r\n    routes = (\r\n      <Suspense fallback={<ClimbingBoxLoader css={override} />}>\r\n        <Switch>\r\n          <Route path='/dashboard' component={InnerContent} />\r\n          <Route path='/profile' component={InnerContent} />\r\n          <Route path='/category' component={InnerContent} />\r\n          <Route path='/question' component={InnerContent} />\r\n          <Route path='/reports/actions' component={InnerContent} />\r\n          <Route path='/routine' exact component={InnerContent} />\r\n          <Route path='/exambuilder' component={InnerContent} />\r\n          <Route path='/settings' component={InnerContent} />\r\n          <Route path='/print' component={InnerContent} />\r\n          <Route path='/logout' component={LogoutPage} />\r\n          <Route path='/help' component={InnerContent} />\r\n          <Route path='/terms' component={InnerContent} />\r\n          <Route path='/' exact component={Landing} />\r\n          <Redirect to='/dashboard' />\r\n        </Switch>\r\n      </Suspense>\r\n    )\r\n  }\r\n\r\n  if (canActivate(rolePermitted.coordinator, props.token)) {\r\n    routes = (\r\n      <Suspense fallback={<ClimbingBoxLoader css={override} />}>\r\n        <Switch>\r\n          <Route path='/dashboard' component={InnerContent} />\r\n          <Route path='/profile' component={InnerContent} />\r\n          <Route path='/category' component={InnerContent} />\r\n          <Route path='/routine' exact component={InnerContent} />\r\n          <Route path='/reports/actions' component={InnerContent} />\r\n          <Route path='/question' component={InnerContent} />\r\n          <Route path='/coursebuilder' component={InnerContent} />\r\n          <Route path='/exambuilder' component={InnerContent} />\r\n          <Route path='/examedit' component={InnerContent} />\r\n          <Route path='/settings' component={InnerContent} />\r\n          <Route path='/print' component={InnerContent} />\r\n          <Route path='/logout' component={LogoutPage} />\r\n          <Route path='/help' component={InnerContent} />\r\n          <Route path='/terms' component={InnerContent} />\r\n          <Route path='/notificationbuilder' component={InnerContent} />\r\n          <Route path='/' exact component={Landing} />\r\n          <Redirect to='/dashboard' />\r\n        </Switch>\r\n      </Suspense>\r\n    )\r\n  }\r\n\r\n  return routes\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    token: state.auth.token,\r\n    isAuthenticated: state.auth.token !== null\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(RoutePages)\r\n//export default RoutePages;\r\n","/* eslint-disable no-undef */\r\n/* eslint-disable react/prop-types */\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport './assets/scss/style.scss'\r\nimport ScrollToTopPage from './components/scrollToTopPage/scrollToTopPage'\r\nimport RoutePages from './container/routePages'\r\nimport { checkAuthState } from './store/auth'\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.onTryAutologin()\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <BrowserRouter>\r\n          <ScrollToTopPage />\r\n          <RoutePages />\r\n        </BrowserRouter>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onTryAutologin: () => {\r\n      dispatch(checkAuthState())\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(App)\r\n","import { combineReducers } from 'redux'\r\nimport apiReducer from './api'\r\nimport authReducer from './auth'\r\nimport categoryReducer from './category'\r\nimport coursesReducer from './courses'\r\nimport dashboardReducer from './dashboard'\r\nimport examPaperReducer from './examPaper'\r\nimport examsReducer from './exams'\r\nimport notificationReducer from './notification'\r\nimport questionReducer from './question'\r\nimport userReducer from './user'\r\n\r\nconst appReducer = combineReducers({\r\n  api: apiReducer,\r\n  auth: authReducer,\r\n  user: userReducer,\r\n  category: categoryReducer,\r\n  question: questionReducer,\r\n  examPaper: examPaperReducer,\r\n  exams: examsReducer,\r\n  dashboard: dashboardReducer,\r\n  courses: coursesReducer,\r\n  notification: notificationReducer\r\n})\r\n\r\nexport const rootReducer = (state, action) => {\r\n  if (action.type === 'RESET_APP') {\r\n    state = undefined\r\n  }\r\n  return appReducer(state, action)\r\n}\r\n\r\nexport default rootReducer\r\n","/* eslint-disable prettier/prettier */\r\n/* eslint-disable no-undef */\r\n\r\nimport { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { IntlProvider } from \"react-intl\";\r\nimport { Provider } from \"react-redux\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\nimport Bangla from \"./lang/bn.json\";\r\nimport rootReducers from \"./store\";\r\nimport { api } from \"./store/middleware/index\";\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducers,\r\n  middleware: [...getDefaultMiddleware(), api],\r\n});\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <IntlProvider locale={process.env.REACT_APP_LANG} defaultLocale={process.env.REACT_APP_DEFAULT_LANG}  messages={process.env.REACT_APP_LANG === 'bn' && Bangla}>\r\n      <App />\r\n    </IntlProvider>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n","/*\r\n\r\nit is an simple api middleware to generalize get and send data to server\r\n\r\n\r\n\r\n*/\r\n\r\nimport axios from 'axios'\r\nimport errorHandler from '../../utils/errorHandler'\r\nimport setAuthorizationToken from '../../utils/setAuthorizationToken'\r\nimport { apiCallBegun, apiCallFail, apiCallSuccess } from '../api'\r\nimport { authSuccess, checkAuthTimeOut } from '../auth'\r\nimport { fetchFreshNotification, getNotification } from '../notification'\r\n\r\n//api middleware function\r\n\r\nexport const api = ({ getState, dispatch }) => (next) => async (action) => {\r\n  if (action.type !== apiCallBegun.type) return next(action)\r\n\r\n  const {\r\n    url,\r\n    method,\r\n    data,\r\n    config,\r\n    onStart,\r\n    onSuccess,\r\n    onError,\r\n    sendToken\r\n  } = action.payload\r\n\r\n  if (onStart) dispatch({ type: onStart })\r\n  next(action)\r\n\r\n  try {\r\n    if (sendToken) {\r\n      setAuthorizationToken(getState().auth.token)\r\n    }\r\n    // let imageData;\r\n    // if (data && data.image) {\r\n    //   imageData = new FormData();\r\n    //   Object.keys().forEach((e) => {\r\n    //     imageData.append(e, data[e]);\r\n    //   });\r\n    //   console.log(imageData);\r\n    //   data = imageData;\r\n    // }\r\n\r\n    const response = await axios.request({\r\n      baseURL: process.env.REACT_APP_SITE_URL,\r\n      url,\r\n      method,\r\n      data: data,\r\n      config\r\n    })\r\n\r\n    dispatch(apiCallSuccess(response.data))\r\n\r\n    if (onSuccess) {\r\n      if (onSuccess === authSuccess.type) {\r\n        const expirationDate = new Date(\r\n          new Date().getTime() + response.data.expireIn * 1000\r\n        )\r\n        localStorage.setItem('jwtToken', response.data.accessToken)\r\n        localStorage.setItem('expirationDate', expirationDate)\r\n        localStorage.setItem('userId', response.data.id)\r\n        dispatch(checkAuthTimeOut(response.data.expireIn))\r\n        dispatch({ type: authSuccess.type, payload: response.data })\r\n      } else if (onSuccess === getNotification.type) {\r\n        dispatch({ type: getNotification.type, payload: response.data })\r\n        dispatch(fetchFreshNotification())\r\n      } else dispatch({ type: onSuccess, payload: response.data })\r\n    }\r\n  } catch (error) {\r\n    const response = errorHandler(error)\r\n    dispatch(apiCallFail(response))\r\n    if (onError) dispatch({ type: onError, payload: response })\r\n  }\r\n}\r\n","import jwtDecode from 'jwt-decode'\r\n\r\nexport const rolePermitted = {\r\n  guest: 0,\r\n  student: 1,\r\n  mentor: 2,\r\n  moderator: 3,\r\n  coordinator: 4,\r\n  admin: 5\r\n}\r\n\r\nexport const roleArray = [\r\n  'Student',\r\n  'Mentor',\r\n  'Moderator',\r\n  'Coordinator',\r\n  'Admin'\r\n]\r\n\r\nexport function roleToString(num) {\r\n  switch (num) {\r\n    case 1:\r\n      return 'Student'\r\n    case 2:\r\n      return 'Mentor'\r\n    case 3:\r\n      return 'Modarator'\r\n    case 4:\r\n      return 'Coordinator'\r\n    case 5:\r\n      return 'Admin'\r\n\r\n    default:\r\n      return 'Guest'\r\n  }\r\n}\r\n\r\nexport function identityStatusToString(num) {\r\n  switch (num) {\r\n    case 0:\r\n      return 'Unchecked'\r\n    case 1:\r\n      return 'Checked'\r\n    case 2:\r\n      return 'Unrequired'\r\n    default:\r\n      return 'Unrequired'\r\n  }\r\n}\r\n\r\nexport function loginProviderToString(num) {\r\n  switch (num) {\r\n    case 0:\r\n      return 'Local'\r\n    case 1:\r\n      return 'Facebook'\r\n    default:\r\n      return 'Local'\r\n  }\r\n}\r\n\r\nexport const canActivate = (role, token) => {\r\n  const tokenRole = token ? jwtDecode(token).role : -1\r\n  return tokenRole >= role\r\n}\r\n","import { createSlice } from '@reduxjs/toolkit'\r\nimport { apiCallBegun } from './api'\r\n\r\nconst slice = createSlice({\r\n  name: 'auth',\r\n  initialState: {\r\n    loading: false,\r\n    token: null,\r\n    userId: null,\r\n    role: null,\r\n    error: null\r\n  },\r\n  reducers: {\r\n    authStart: (auth) => {\r\n      auth.loading = true\r\n    },\r\n    authSuccess: (auth, action) => {\r\n      auth.loading = false\r\n      auth.token = action.payload.accessToken\r\n      auth.userId = action.payload.id\r\n      auth.role = action.payload.role\r\n      auth.expireIn = action.payload.expireIn\r\n      auth.error = null\r\n    },\r\n    authFail: (auth, action) => {\r\n      auth.loading = false\r\n      auth.error = action.payload\r\n    },\r\n    logout: (auth) => {\r\n      auth.token = null\r\n      auth.userId = null\r\n      auth.expireIn = null\r\n    }\r\n  }\r\n})\r\n\r\nexport const { authStart, authSuccess, authFail, logout } = slice.actions\r\n\r\nexport default slice.reducer\r\n\r\n//declaring some variable\r\n\r\nconst url = '/auth/login'\r\nconst method = 'post'\r\n\r\nexport const auth = (username, password) => (dispatch) => {\r\n  const authData = {\r\n    username,\r\n    password\r\n  }\r\n  dispatch(\r\n    apiCallBegun({\r\n      url,\r\n      method,\r\n      data: authData,\r\n      onStart: authStart.type,\r\n      onSuccess: authSuccess.type,\r\n      onError: authFail.type\r\n    })\r\n  )\r\n}\r\nexport const autoAuth = () => (dispatch) => {\r\n  const token = localStorage.getItem('jwtToken')\r\n  if (token) {\r\n    dispatch(\r\n      authSuccess({\r\n        token\r\n      })\r\n    )\r\n  }\r\n}\r\n\r\nexport const checkAuthTimeOut = (expirationTime) => (dispatch) => {\r\n  setTimeout(() => {\r\n    dispatch(logoutLoader())\r\n  }, expirationTime * 1000)\r\n}\r\n\r\nexport const checkAuthState = () => (dispatch) => {\r\n  const token = localStorage.getItem('jwtToken')\r\n  if (!token) {\r\n    dispatch(logout())\r\n  } else {\r\n    const expirationDate = new Date(localStorage.getItem('expirationDate'))\r\n    if (expirationDate > new Date()) {\r\n      const userId = localStorage.getItem('userId')\r\n      dispatch(authSuccess({ accessToken: token, id: userId }))\r\n      dispatch(\r\n        checkAuthTimeOut(\r\n          (expirationDate.getTime() - new Date().getTime()) / 1000\r\n        )\r\n      )\r\n    } else {\r\n      dispatch(logoutLoader())\r\n    }\r\n  }\r\n}\r\n\r\nexport const logoutLoader = () => (dispatch) => {\r\n  localStorage.removeItem('expirationDate')\r\n  localStorage.removeItem('userId')\r\n  localStorage.removeItem('jwtToken')\r\n  dispatch(logout())\r\n}\r\n","import { createSlice } from '@reduxjs/toolkit'\r\nimport { apiCallBegun } from './api'\r\n\r\nconst slice = createSlice({\r\n  name: 'Notification',\r\n  initialState: {\r\n    loading: false,\r\n    notification: [],\r\n    freshNoti: []\r\n  },\r\n  reducers: {\r\n    getNotification: (state, action) => {\r\n      state.notification = action.payload\r\n      state.loading = false\r\n    },\r\n    //fresh notification means that is not untracked by user\r\n    getFreshNotification: (state, action) => {\r\n      state.freshNoti = action.payload\r\n    },\r\n    loadingStart: (state, action) => {\r\n      state.loading = true\r\n    }\r\n  }\r\n})\r\nexport const {\r\n  getNotification,\r\n  getFreshNotification,\r\n  loadingStart\r\n} = slice.actions\r\nexport default slice.reducer\r\n\r\nconst url = '/notification'\r\nconst method = 'get'\r\n\r\nexport const fetchNotificationLoader = () => (dispatch) => {\r\n  dispatch(\r\n    apiCallBegun({\r\n      url,\r\n      method,\r\n      onStart: loadingStart.type,\r\n      onSuccess: getNotification.type\r\n    })\r\n  )\r\n}\r\n\r\nexport const fetchFreshNotification = () => (dispatch, getState) => {\r\n  const nStore = JSON.parse(localStorage.getItem('noti'))\r\n  const noti = getState().notification.notification\r\n  let freshNoti = []\r\n  //console.log(typeof nStore.value)\r\n  if (nStore) {\r\n    if (new Date().getTime() > nStore.expiry) {\r\n      localStorage.removeItem('noti')\r\n      dispatch(getFreshNotification(noti))\r\n    } else {\r\n      freshNoti = noti.filter((n) =>\r\n        nStore.value.includes(n.id) ? false : true\r\n      )\r\n      dispatch(getFreshNotification(freshNoti))\r\n    }\r\n  } else {\r\n    dispatch(getFreshNotification(noti))\r\n  }\r\n}\r\n","import { createSlice } from '@reduxjs/toolkit'\r\nimport { apiCallBegun } from './api'\r\n\r\nconst slice = createSlice({\r\n  name: 'Exams',\r\n  initialState: {\r\n    id: null,\r\n    questions: [],\r\n    questionIdsByOrder: [],\r\n    examId: null,\r\n    singleQuestionMark: null,\r\n    singleStemMark: null,\r\n    penaltyMark: null,\r\n    timeLimit: null,\r\n    examResult: null,\r\n    totalMark: null,\r\n    totalScore: null,\r\n    totalPenaltyMark: null,\r\n    totalScorePercentage: null,\r\n    timeTakenToComplete: null,\r\n    rank: null,\r\n    exam: null, // store the individual exam\r\n    error: null,\r\n    examError: null,\r\n    exams: [], // store the all exam lists\r\n    disableQuestions: []\r\n  },\r\n  reducers: {\r\n    resetExamResult: (state) => {\r\n      state.examId = null\r\n      state.examResult = null\r\n      state.totalMark = null\r\n      state.totalScore = null\r\n      state.totalPenaltyMark = null\r\n      state.totalScorePercentage = null\r\n      state.timeTakenToComplete = null\r\n      state.timeLimit = null\r\n      state.rank = null\r\n      state.exam = null\r\n      state.error = null\r\n      state.questionIdsByOrder = []\r\n      state.disableQuestions = []\r\n    },\r\n    getAllExams: (state, action) => {\r\n      state.exams = action.payload\r\n    },\r\n    getExamById: (state, action) => {\r\n      state.questions = action.payload.questions\r\n      action.payload.questions.forEach((e) => {\r\n        state.questionIdsByOrder.push(e.id)\r\n      })\r\n      state.id = action.payload.exam.id\r\n      state.singleQuestionMark = action.payload.exam.singleQuestionMark\r\n      state.singleStemMark = action.payload.exam.singleStemMark\r\n      state.timeLimit = action.payload.exam.timeLimit\r\n      state.penaltyMark = action.payload.exam.penaltyMark\r\n    },\r\n    getFreeExamById: (state, action) => {\r\n      state.questions = action.payload.questions\r\n      action.payload.questions.forEach((e) => {\r\n        state.questionIdsByOrder.push(e.id)\r\n      })\r\n      state.id = action.payload.exam.id\r\n      state.singleQuestionMark = action.payload.exam.singleQuestionMark\r\n      state.singleStemMark = action.payload.exam.singleStemMark\r\n      state.timeLimit = action.payload.exam.timeLimit\r\n      state.penaltyMark = action.payload.exam.penaltyMark\r\n    },\r\n    getExamError: (state, action) => {\r\n      state.examError = action.payload\r\n    },\r\n    resetExamError: (state) => {\r\n      state.examError = null\r\n    },\r\n    postExamById: (state, action) => {\r\n      state.examId = action.payload.examId\r\n      state.examResult = action.payload.resultArray\r\n      state.totalMark = action.payload.totalMark\r\n      state.totalScore = action.payload.totalScore\r\n      state.totalPenaltyMark = action.payload.totalPenaltyMark\r\n      state.totalScorePercentage = action.payload.totalScorePercentage\r\n      state.timeTakenToComplete = action.payload.timeTakenToComplete\r\n    },\r\n    examRankById: (state, action) => {\r\n      state.rank = action.payload.rank\r\n      state.exam = action.payload.exam\r\n    },\r\n    postExamError: (state, action) => {\r\n      state.error = action.payload\r\n    },\r\n    disableQuestionsAdd: (state, action) => {\r\n      state.disableQuestions.push(action.payload)\r\n    },\r\n    resetDisableQuestions: (state) => {\r\n      state.disableQuestions = []\r\n    }\r\n  }\r\n})\r\n\r\nexport const {\r\n  resetExamResult,\r\n  getAllExams,\r\n  getExamById,\r\n  getFreeExamById,\r\n  getExamError,\r\n  resetExamError,\r\n  postExamById,\r\n  examRankById,\r\n  postExamError,\r\n  disableQuestionsAdd,\r\n  resetDisableQuestions\r\n} = slice.actions\r\n\r\nexport default slice.reducer\r\n\r\nexport const getAllExamsLoader = () => (dispatch) => {\r\n  dispatch(\r\n    apiCallBegun({\r\n      url: '/exams/',\r\n      method: 'get',\r\n      sendToken: true,\r\n      onSuccess: getAllExams.type,\r\n      onError: getExamError.type\r\n    })\r\n  )\r\n}\r\n\r\nexport const getAllFreeExamsLoader = () => (dispatch) => {\r\n  dispatch(\r\n    apiCallBegun({\r\n      url: '/exams/free',\r\n      method: 'get',\r\n      onSuccess: getAllExams.type,\r\n      onError: getExamError.type\r\n    })\r\n  )\r\n}\r\n\r\nexport const getExamByIdLoader = (id) => (dispatch) => {\r\n  dispatch(\r\n    apiCallBegun({\r\n      url: '/exams/questions/' + id,\r\n      method: 'get',\r\n      sendToken: true,\r\n      onSuccess: getExamById.type,\r\n      onError: getExamError.type\r\n    })\r\n  )\r\n}\r\n\r\nexport const getFreeExamByIdLoader = (id) => (dispatch) => {\r\n  dispatch(\r\n    apiCallBegun({\r\n      url: '/exams/free/questions/' + id,\r\n      method: 'get',\r\n      sendToken: true,\r\n      onSuccess: getFreeExamById.type,\r\n      onError: getExamError.type\r\n    })\r\n  )\r\n}\r\n\r\nexport const postExamByIdLoader = (data) => (dispatch) => {\r\n  dispatch(\r\n    apiCallBegun({\r\n      url: '/postexams',\r\n      method: 'post',\r\n      data: data,\r\n      sendToken: true,\r\n      onSuccess: postExamById.type,\r\n      onError: postExamError.type\r\n    })\r\n  )\r\n}\r\n\r\nexport const postFreeExamByIdLoader = (data) => (dispatch) => {\r\n  dispatch(\r\n    apiCallBegun({\r\n      url: '/postexams/free',\r\n      method: 'post',\r\n      data: data,\r\n      onSuccess: postExamById.type,\r\n      onError: postExamError.type\r\n    })\r\n  )\r\n}\r\n\r\nexport const examRankByIdLoader = (id, courseId) => (dispatch) => {\r\n  dispatch(\r\n    apiCallBegun({\r\n      url: '/postexams/rank/' + id,\r\n      data: { id, courseId },\r\n      method: 'post',\r\n      onSuccess: examRankById.type,\r\n      onError: postExamError.type\r\n    })\r\n  )\r\n}\r\n\r\nexport const resetExamResultLoader = () => (dispatch) => {\r\n  dispatch({ type: resetExamResult.type })\r\n}\r\n","import { createSlice } from '@reduxjs/toolkit'\r\nimport { apiCallBegun } from './api'\r\n\r\nconst slice = createSlice({\r\n  name: 'Question',\r\n  initialState: {\r\n    questions: [],\r\n    error: null,\r\n    response: null,\r\n    loading: false\r\n  },\r\n  reducers: {\r\n    getQuestions: (state, action) => {\r\n      state.questions = action.payload\r\n    },\r\n    loadingStart: (state, action) => {\r\n      state.loading = true\r\n    },\r\n    getResponse: (state, action) => {\r\n      state.response = action.payload\r\n      state.loading = false\r\n    },\r\n    resetResponse: (state, action) => {\r\n      state.response = null\r\n      state.loading = false\r\n    }\r\n  }\r\n})\r\n\r\nexport const {\r\n  getQuestions,\r\n  loadingStart,\r\n  getResponse,\r\n  resetResponse\r\n} = slice.actions\r\n\r\nexport default slice.reducer\r\n\r\nexport const resetResponseLoader = () => (dispatch) => {\r\n  dispatch({\r\n    type: resetResponse.type\r\n  })\r\n}\r\n\r\nexport const getQuestionLoader = () => (dispatch) => {\r\n  dispatch(\r\n    apiCallBegun({\r\n      url: '/questions',\r\n      method: 'get',\r\n      //sendToken: true,\r\n      //data,\r\n      //config,\r\n      onSuccess: getQuestions.type\r\n    })\r\n  )\r\n}\r\n\r\nexport const getQuestionByCategoryLoader = (id) => (dispatch) => {\r\n  dispatch(\r\n    apiCallBegun({\r\n      url: '/questions/category/' + id,\r\n      method: 'get',\r\n      onSuccess: getQuestions.type\r\n    })\r\n  )\r\n}\r\n\r\nexport const createQuestionLoader = (data) => (dispatch) => {\r\n  const config = { headers: { 'Content-Type': 'multipart/form-data' } }\r\n  const questionData = new FormData()\r\n  Object.keys(data).forEach((key) => {\r\n    data[key] && questionData.append(key, data[key])\r\n  })\r\n\r\n  dispatch(\r\n    apiCallBegun({\r\n      url: '/questions',\r\n      method: 'post',\r\n      sendToken: true,\r\n      data,\r\n      config,\r\n      onStart: loadingStart.type,\r\n      onSuccess: getResponse.type,\r\n      onError: getResponse.type\r\n    })\r\n  )\r\n}\r\n\r\nexport const uploadQuestionLoader = (data) => (dispatch) => {\r\n  const config = { headers: { 'Content-Type': 'multipart/form-data' } }\r\n  const questionData = new FormData()\r\n  Object.keys(data).forEach((key) => {\r\n    data[key] && questionData.append(key, data[key])\r\n  })\r\n\r\n  dispatch(\r\n    apiCallBegun({\r\n      url: '/questions/files',\r\n      method: 'post',\r\n      sendToken: true,\r\n      data,\r\n      config\r\n    })\r\n  )\r\n}\r\n\r\nexport const editQuestionLoader = (id, data) => (dispatch) => {\r\n  const config = { headers: { 'Content-Type': 'multipart/form-data' } }\r\n  const questionData = new FormData()\r\n  Object.keys(data).forEach((key) => {\r\n    data[key] && questionData.append(key, data[key])\r\n  })\r\n\r\n  dispatch(\r\n    apiCallBegun({\r\n      url: '/questions/' + id,\r\n      method: 'patch',\r\n      sendToken: true,\r\n      data,\r\n      config,\r\n      onStart: loadingStart.type,\r\n      onSuccess: getResponse.type,\r\n      onError: getResponse.type\r\n    })\r\n  )\r\n}\r\n\r\nexport const deleteQuestionLoader = (id) => (dispatch) => {\r\n  dispatch(\r\n    apiCallBegun({\r\n      url: '/questions/' + id,\r\n      method: 'delete',\r\n      sendToken: true,\r\n      onStart: loadingStart.type,\r\n      onSuccess: getResponse.type,\r\n      onError: getResponse.type\r\n    })\r\n  )\r\n}\r\n","import { createSlice } from '@reduxjs/toolkit'\r\nimport { apiCallBegun } from './api'\r\n\r\nconst slice = createSlice({\r\n  name: 'Category',\r\n  initialState: { categories: [], catHierarchy: [] },\r\n  reducers: {\r\n    getCategory: (state, action) => {\r\n      state.categories = action.payload.categories\r\n      state.catHierarchy = action.payload.catHierarchy\r\n    }\r\n  }\r\n})\r\n\r\nexport const { getCategory } = slice.actions\r\nexport default slice.reducer\r\n\r\nconst url = '/categories'\r\nconst method = 'get'\r\nexport const fetchCategory = () => (dispatch) => {\r\n  dispatch(\r\n    apiCallBegun({\r\n      url,\r\n      method,\r\n      onSuccess: getCategory.type\r\n    })\r\n  )\r\n}\r\n\r\nexport const createCategory = (data) => (dispatch) => {\r\n  dispatch(\r\n    apiCallBegun({\r\n      url,\r\n      method: 'post',\r\n      data,\r\n      sendToken: true\r\n    })\r\n  )\r\n}\r\n","import { createSlice } from '@reduxjs/toolkit'\r\nimport { apiCallBegun } from './api'\r\n\r\nconst slice = createSlice({\r\n  name: 'Courses',\r\n  initialState: {\r\n    loading: false,\r\n    courses: [],\r\n    coursesEnrolledByStu: [],\r\n    expectedEnrolledStuIds: []\r\n  },\r\n  reducers: {\r\n    getCourses: (state, action) => {\r\n      state.courses = action.payload\r\n      state.loading = false\r\n    },\r\n    getCoursesEnrolledByStu: (state, action) => {\r\n      state.coursesEnrolledByStu = action.payload\r\n      state.loading = false\r\n    },\r\n    loadingStart: (state, action) => {\r\n      state.loading = true\r\n    }\r\n  }\r\n})\r\nexport const {\r\n  getCourses,\r\n  getCoursesEnrolledByStu,\r\n  loadingStart\r\n} = slice.actions\r\nexport default slice.reducer\r\n\r\nconst url = '/courses'\r\nconst method = 'get'\r\n\r\nexport const fetchCourseLoader = () => (dispatch) => {\r\n  dispatch(\r\n    apiCallBegun({\r\n      url,\r\n      method,\r\n      onStart: loadingStart.type,\r\n      onSuccess: getCourses.type\r\n    })\r\n  )\r\n}\r\n\r\nexport const fetchCourseEnrolledByStuLoader = () => (dispatch) => {\r\n  dispatch(\r\n    apiCallBegun({\r\n      url: '/courses/enrolled/courses/',\r\n      method,\r\n      onStart: loadingStart.type,\r\n      onSuccess: getCoursesEnrolledByStu.type\r\n    })\r\n  )\r\n}\r\n","import { createSlice } from '@reduxjs/toolkit'\r\nimport { apiCallBegun } from './api'\r\n\r\nconst slice = createSlice({\r\n  name: 'ExamPaper',\r\n  initialState: {\r\n    loading: false,\r\n    questions: [],\r\n    ids: [],\r\n    success: null,\r\n    error: null\r\n  },\r\n  reducers: {\r\n    selectedQuestions: (state, action) => {\r\n      state.questions = action.payload.questions\r\n      state.ids = action.payload.ids\r\n    },\r\n    onLoading: (state) => {\r\n      state.loading = true\r\n    },\r\n    onSuccess: (state, action) => {\r\n      state.success = action.payload\r\n      state.loading = false\r\n    },\r\n    onError: (state, action) => {\r\n      state.error = action.payload\r\n      state.loading = false\r\n    }\r\n  }\r\n})\r\n\r\nexport const {\r\n  selectedQuestions,\r\n  onSuccess,\r\n  onError,\r\n  onLoading\r\n} = slice.actions\r\n\r\nexport default slice.reducer\r\n\r\nexport const selectedQuestionsLoader = (questions, ids) => (dispatch) => {\r\n  dispatch(selectedQuestions({ questions, ids }))\r\n}\r\n\r\nexport const onLoadingLoader = () => (dispatch) => {\r\n  dispatch({ type: onLoading.type })\r\n}\r\n\r\nexport const postExamProfile = (examSpec, questions, id = null) => (\r\n  dispatch\r\n) => {\r\n  dispatch(\r\n    apiCallBegun({\r\n      url: id ? `/exams/${id}` : '/exams',\r\n      method: id ? 'patch' : 'post',\r\n      data: { ...examSpec, questions },\r\n      onSuccess: onSuccess.type,\r\n      onError: onError.type,\r\n      sendToken: true\r\n    })\r\n  )\r\n}\r\n","import { createSlice } from '@reduxjs/toolkit'\r\nimport { apiCallBegun } from './api'\r\n\r\nconst slice = createSlice({\r\n  name: 'user',\r\n  initialState: {\r\n    id: null,\r\n    firstName: null,\r\n    lastName: null,\r\n    userName: null,\r\n    email: null,\r\n    role: null,\r\n    mobile: null,\r\n    userFrom: Date.now(),\r\n    address: null,\r\n    avatar: null,\r\n    gender: null,\r\n    faculty: null,\r\n    institution: null\r\n  },\r\n  reducers: {\r\n    getUser: (user, action) => {\r\n      user.id = action.payload.id\r\n      user.firstName = action.payload.firstName\r\n      user.lastName = action.payload.lastName\r\n      user.userName = action.payload.userName\r\n      user.email = action.payload.email\r\n      user.mobile = action.payload.mobile\r\n      user.userFrom = action.payload.createdAt\r\n      user.role = action.payload.role\r\n      user.address = action.payload.address\r\n      user.avatar = action.payload.avatar\r\n      user.gender = action.payload.gender\r\n      user.faculty = action.payload.faculty\r\n      user.institution = action.payload.institution\r\n    }\r\n  }\r\n})\r\nexport const { getUser } = slice.actions\r\nexport default slice.reducer\r\n\r\nconst url = '/users'\r\nconst method = 'get'\r\n\r\nexport const getUserLoader = () => (dispatch) => {\r\n  dispatch(\r\n    apiCallBegun({\r\n      url,\r\n      method,\r\n      onSuccess: getUser.type,\r\n      sendToken: true\r\n    })\r\n  )\r\n}\r\n","export default function errorHandler(e) {\r\n  if (e.response) {\r\n    // checking if server is down, no response will occur\r\n    const responseData = e.response.data\r\n\r\n    if (responseData.statusCode === 400) {\r\n      // server validation error\r\n      // let message = ''\r\n      // try {\r\n      //   responseData.message.forEach((v) => {\r\n      //     message += `${v.value} is not valid in [ ${\r\n      //       v.property\r\n      //     } ] field due to \" ${Object.values(v.constraints).toString()} \"`\r\n      //   })\r\n      // } catch (error) {\r\n      //   message = responseData.error\r\n      // }\r\n\r\n      return responseData.message\r\n    } else {\r\n      //for other errors\r\n      return responseData.message\r\n    }\r\n  } else {\r\n    // if server has no any response\r\n    return 'Server may be down. Please try sometime later'\r\n  }\r\n}\r\n","import { createSlice } from '@reduxjs/toolkit'\r\nimport { apiCallBegun } from './api'\r\n\r\nconst slice = createSlice({\r\n  name: 'dashboard',\r\n  initialState: {\r\n    featuredExams: [],\r\n    userExamInfo: {\r\n      totalExam: [0, 0],\r\n      rank: [1, 100],\r\n      upcomingExam: ['No Exam', '01-02-03', null],\r\n      result: [0.0, 100]\r\n    },\r\n    userExamStat: null\r\n  },\r\n  reducers: {\r\n    dashboardStudent: (state, action) => {\r\n      state.featuredExams = action.payload.featuredExams\r\n      state.userExamInfo = action.payload.userExamInfo\r\n      state.userExamStat = action.payload.userExamStat\r\n    },\r\n    userExamStat: (state, action) => {\r\n      state.userExamStat = action.payload.userExamStat\r\n    }\r\n  }\r\n})\r\n\r\nexport const { dashboardStudent, userExamStat } = slice.actions\r\n\r\nexport default slice.reducer\r\n\r\nconst url = '/dashboard/examstat'\r\nconst method = 'get'\r\n\r\nexport const userExamStatLoader = () => (dispatch) => {\r\n  dispatch(\r\n    apiCallBegun({\r\n      url,\r\n      method,\r\n      onSuccess: userExamStat.type,\r\n      sendToken: true\r\n    })\r\n  )\r\n}\r\n","import axios from 'axios'\r\n\r\nexport default function setAuthorizationToken(token) {\r\n  if (token) {\r\n    axios.defaults.headers.common['Authorization'] = `Bearer ${token}`\r\n  } else {\r\n    delete axios.defaults.headers.common['Authorization']\r\n  }\r\n}\r\n"],"sourceRoot":""}