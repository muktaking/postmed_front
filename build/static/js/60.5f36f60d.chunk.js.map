{"version":3,"sources":["container/notificationBuilder/createNotification.js","container/notificationBuilder/showNotification.js","container/notificationBuilder/notificationBuilder.js"],"names":["CreateNotification","defaultValue","useState","loading","setLoading","msg","setMsg","startDate","Date","setStartDate","endDate","setEndDate","courses","setCourses","useEffect","axios","get","process","then","response","data","catch","e","console","log","Spinner","Toast","show","onClose","style","position","Header","className","Body","enableReinitialize","initialValues","title","priority","toString","courseId","id","description","onSubmit","values","patch","res","message","post","submitHandler","handleChange","errors","touched","handleBlur","handleSubmit","isSubmitting","Form","Group","controlId","Label","Control","type","name","value","onChange","onBlur","placeholder","as","map","course","selected","onzChange","date","showTimeSelect","minDate","dateFormat","size","Button","variant","onClick","ShowNotification","notification","setNotification","currentNotification","setCurrentNotification","setShow","handleClose","Axios","Modal","onHide","closeButton","Title","Footer","noti","Card","Text","Badge","priorityToString","NotificationBuilder","Row","Col","lg","num"],"mappings":"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","file":"static/js/60.5f36f60d.chunk.js","sourcesContent":["import axios from 'axios'\r\nimport { Formik } from 'formik'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Button, Form, Spinner, Toast } from 'react-bootstrap'\r\nimport DatePicker from 'react-datepicker'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport { FaRegCalendarAlt } from 'react-icons/fa'\r\n\r\nexport default function CreateNotification({ defaultValue = null }) {\r\n  const [loading, setLoading] = useState(false)\r\n  const [msg, setMsg] = useState(null)\r\n  const [startDate, setStartDate] = useState(\r\n    defaultValue ? defaultValue.startDate && defaultValue.startDate : new Date()\r\n  )\r\n  const [endDate, setEndDate] = useState(\r\n    defaultValue ? defaultValue.startDate && defaultValue.endDate : new Date()\r\n  )\r\n  const [courses, setCourses] = useState([])\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(process.env.REACT_APP_SITE_URL + '/courses/auth')\r\n      .then((response) => {\r\n        setCourses(response.data)\r\n      })\r\n      .catch((e) => console.log(e))\r\n  }, [])\r\n\r\n  function submitHandler(values) {\r\n    setLoading(true)\r\n    if (defaultValue) {\r\n      axios\r\n        .patch(\r\n          process.env.REACT_APP_SITE_URL + '/notification/' + defaultValue.id,\r\n          {\r\n            id: defaultValue.id.toString(),\r\n            startDate,\r\n            endDate,\r\n            ...values\r\n          }\r\n        )\r\n        .then((res) => {\r\n          setLoading(false)\r\n          setMsg(res.data.message)\r\n        })\r\n        .catch((e) => {\r\n          setLoading(false)\r\n          setMsg(e.message)\r\n        })\r\n      return\r\n    }\r\n    axios\r\n      .post(process.env.REACT_APP_SITE_URL + '/notification', {\r\n        startDate,\r\n        endDate,\r\n        ...values\r\n      })\r\n      .then((res) => {\r\n        setLoading(false)\r\n        setMsg(res.data.message)\r\n      })\r\n      .catch((e) => {\r\n        setLoading(false)\r\n        setMsg(e.message)\r\n      })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {loading && <Spinner />}\r\n      <Toast\r\n        show={msg}\r\n        onClose={() => {\r\n          setMsg(null)\r\n        }}\r\n        style={{ position: 'absolute' }}\r\n      >\r\n        <Toast.Header>\r\n          <strong className='mr-auto'>Message</strong>\r\n        </Toast.Header>\r\n        <Toast.Body>{msg}</Toast.Body>\r\n      </Toast>\r\n      <h4>Notification Builder</h4>\r\n      <Formik\r\n        enableReinitialize\r\n        //defaultValue.courseId can be null so another checking is required\r\n        initialValues={{\r\n          title: defaultValue ? defaultValue.title : '',\r\n          priority: defaultValue ? defaultValue.priority.toString() : '1',\r\n          courseId: defaultValue\r\n            ? defaultValue.courseId\r\n              ? defaultValue.courseId.id.toString()\r\n              : '0'\r\n            : '0',\r\n          description: defaultValue ? defaultValue.description : ''\r\n        }}\r\n        onSubmit={(values) => {\r\n          submitHandler(values)\r\n        }}\r\n      >\r\n        {({\r\n          values,\r\n          errors,\r\n          touched,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          isSubmitting\r\n          /* and other goodies */\r\n        }) => (\r\n          <Form>\r\n            <Form.Group controlId='formTitle'>\r\n              <Form.Label>Notification Title</Form.Label>\r\n              <Form.Control\r\n                type='textarea'\r\n                name='title'\r\n                value={values.title}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                placeholder='Enter title'\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId='formPriority'>\r\n              <Form.Label>Select Priority </Form.Label>\r\n              <Form.Control\r\n                as='select'\r\n                name='priority'\r\n                value={values.priority}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n              >\r\n                <option value='1'>Urgent</option>\r\n                <option value='2'>Immediate</option>\r\n                <option value='3'>Normal</option>\r\n              </Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId='formCourseId'>\r\n              <Form.Label>Select A Course</Form.Label>\r\n              <Form.Control\r\n                as='select'\r\n                name='courseId'\r\n                value={values.courseId}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n              >\r\n                <option value='0'>All Courses</option>\r\n                {courses.map((course) => (\r\n                  <option value={course.id}>{course.title}</option>\r\n                ))}\r\n              </Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId='formdescription'>\r\n              <Form.Label>Notification Description</Form.Label>\r\n              <Form.Control\r\n                type='textarea'\r\n                name='description'\r\n                value={values.description}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                placeholder='Enter description'\r\n              />\r\n            </Form.Group>\r\n            <div className='d-flex'>\r\n              <div className='my-3 mr-5'>\r\n                <p>Start Date</p>\r\n                <DatePicker\r\n                  selected={new Date(startDate)}\r\n                  onzChange={(date) => {\r\n                    setStartDate(date)\r\n                  }}\r\n                  showTimeSelect\r\n                  minDate={new Date()}\r\n                  dateFormat='yyyy-MMM-dd, hh:mm a'\r\n                />\r\n                <FaRegCalendarAlt size='1.7rem' />\r\n              </div>\r\n              <div className='my-3'>\r\n                <p>End Date</p>\r\n                <DatePicker\r\n                  selected={new Date(endDate)}\r\n                  onChange={(date) => {\r\n                    setEndDate(date)\r\n                  }}\r\n                  showTimeSelect\r\n                  minDate={new Date()}\r\n                  dateFormat='yyyy-MMM-dd, hh:mm a'\r\n                />\r\n                <FaRegCalendarAlt size='1.7rem' />\r\n              </div>\r\n            </div>\r\n            <Button variant='primary' type='submit' onClick={handleSubmit}>\r\n              Submit\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  )\r\n}\r\n","import Axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Badge, Button, Card, Modal } from 'react-bootstrap'\r\nimport CreateNotification from './createNotification'\r\nimport { priorityToString } from './notificationBuilder'\r\n\r\nexport default function ShowNotification() {\r\n  const [notification, setNotification] = useState([])\r\n  const [currentNotification, setCurrentNotification] = useState(null)\r\n  const [show, setShow] = useState(false)\r\n\r\n  const getNoti = () => {\r\n    Axios.get(process.env.REACT_APP_SITE_URL + '/notification/raw')\r\n      .then((response) => {\r\n        setNotification(response.data)\r\n      })\r\n      .catch((e) => console.log(e))\r\n  }\r\n\r\n  const handleClose = () => {\r\n    getNoti()\r\n    setShow(false)\r\n  }\r\n\r\n  useEffect(() => {\r\n    Axios.get(process.env.REACT_APP_SITE_URL + '/notification/raw')\r\n      .then((response) => {\r\n        setNotification(response.data)\r\n      })\r\n      .catch((e) => console.log(e))\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Modal heading</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <CreateNotification defaultValue={currentNotification} />\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant='secondary' onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n      {notification.map((noti) => (\r\n        <Card className='mb-2'>\r\n          <Card.Body>\r\n            <Card.Title>{noti.title}</Card.Title>\r\n            <Card.Text>\r\n              <Badge variant='primary mr-2'>\r\n                {priorityToString(noti.priority)}\r\n              </Badge>\r\n              <Badge variant='primary'>\r\n                {noti.courseId && noti.courseId.title}\r\n              </Badge>\r\n            </Card.Text>\r\n            <Card.Text>{noti.description}</Card.Text>\r\n          </Card.Body>\r\n          <Card.Footer>\r\n            <Button\r\n              variant='primary'\r\n              onClick={() => {\r\n                setCurrentNotification({\r\n                  startDate: noti.startDate,\r\n                  endDate: noti.endDate,\r\n                  ...noti\r\n                })\r\n                setShow(true)\r\n              }}\r\n            >\r\n              Edit\r\n            </Button>\r\n          </Card.Footer>\r\n        </Card>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Col, Row } from 'react-bootstrap'\r\nimport CreateNotification from './createNotification'\r\nimport ShowNotification from './showNotification'\r\n\r\nexport default function NotificationBuilder() {\r\n  return (\r\n    <Row>\r\n      <Col lg='6'>\r\n        <CreateNotification />\r\n      </Col>\r\n      <Col lg='6'>\r\n        <ShowNotification />\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport function priorityToString(num) {\r\n  switch (num) {\r\n    case 1:\r\n      return 'Urgent'\r\n    case 2:\r\n      return 'Immediate'\r\n    case 3:\r\n      return 'Normal'\r\n\r\n    default:\r\n      return 'Normal'\r\n  }\r\n}\r\n"],"sourceRoot":""}