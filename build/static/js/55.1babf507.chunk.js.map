{"version":3,"sources":["components/routine/addASyllabus.js","components/routine/singleRoutineCard.js","components/routine/showRoutine.js","components/dashboard/bigCards/bigCard/bigCard.jsx","components/dashboard/bigCards/mainContentCards/examsFeaturedCard.jsx","components/dashboard/bigCards/mainContentCards/reportCard.jsx","components/dashboard/bigCards/sideCards/recentActivityCard.jsx","components/dashboard/bigCards/sideCards/routine.js","components/dashboard/miniCards/miniInfoBlock/miniBlock/icon.js","components/dashboard/miniCards/miniInfoBlock/miniBlock/footer.js","components/dashboard/miniCards/miniInfoBlock/miniBlock/header.js","components/dashboard/miniCards/miniInfoBlock/miniBlock/index.js","components/dashboard/miniCards/miniInfoBlock/rank.js","components/dashboard/miniCards/miniInfoBlock/result.js","components/dashboard/miniCards/miniInfoBlock/totalExam.js","components/dashboard/miniCards/miniInfoBlock/upcomingExam.js","components/dashboard/stuDashCourseComponent.js"],"names":["AddASyllabus","defaultValue","useState","loading","setLoading","msg","setMsg","Date","startDate","setStartDate","endDate","setEndDate","courses","setCourses","ref","useRef","courseRef","useEffect","axios","get","process","then","response","data","catch","e","console","log","show","onClose","style","position","Header","className","Body","selected","length","onChange","date","showTimeSelect","minDate","dateFormat","size","Group","controlId","Label","Control","as","rows","value","map","course","id","title","variant","onClick","put","syllabus","current","courseId","res","message","post","RenderTooltip","React","forwardRef","props","Tooltip","Button","Axios","delete","SingleRoutineCard","showRaw","ind","getStatus","setShowModal","setEditSyllabusValue","key","data-date","moment","format","Badge","OverlayTrigger","trigger","placement","overlay","start","end","getTime","ShowRoutine","routine","setRoutine","showModal","editSyllabusVale","modalClose","Modal","onHide","closeButton","Title","Footer","Toast","right","top","maxHeight","overflowY","Tabs","defaultActiveKey","Tab","eventKey","filter","to","pathname","state","fromRoutine","bottom","BigCard","startHandleChange","setState","endHandleChange","reportHandler","Accordion","Card","this","header","Toggle","Collapse","showDatePicker","children","Component","ExamsFeaturedCard","featuredExams","intl","useIntl","formatMessage","defaultMessage","headerColor","exam","index","examId","imgSrc","categoryType","min","max","Math","floor","random","imageUrl","name","description","createdAt","ReportCard","userExamStat","labels","_","examTitles","datasets","label","stat","averageScore","totalMark","toFixed","fill","borderColor","backgroundColor","borderWidth","maxBarThickness","barPercentage","options","responsive","scales","yAxes","ticks","beginAtZero","SideCard","ListGroup","Item","color","attemptNumbers","fontSize","lastAttemptTime","startOf","fromNow","RoutineSideCard","icon","classes","footer","heading","cardHeader","miniBlock","faIcon","footerHeading","footerValue","faFooterIcon","Row","Col","sm","Rank","Result","TotalExam","UpcomingExam","duration","require","relativeTime","StuDashCourseComponent","userDashExamInfo","Container","Nav","i","Link","Jumbotron","Content","examInfo","userExamInfo","Pane","totalExam","rank","upcomingExam","result","xl","lg"],"mappings":"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","file":"static/js/55.1babf507.chunk.js","sourcesContent":["import axios from 'axios'\r\nimport React, { useEffect, useRef, useState } from 'react'\r\nimport { Button, Form, Toast } from 'react-bootstrap'\r\nimport DatePicker from 'react-datepicker'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport { FaRegCalendarAlt } from 'react-icons/fa'\r\nimport Spinner from '../shared/spinner/spinner'\r\n\r\nexport default function AddASyllabus({ defaultValue = [], ...props }) {\r\n  const [loading, setLoading] = useState(false)\r\n  const [msg, setMsg] = useState(null)\r\n  const [startDate, setStartDate] = useState(new Date())\r\n  const [endDate, setEndDate] = useState(new Date())\r\n  const [courses, setCourses] = useState([])\r\n  const ref = useRef()\r\n  const courseRef = useRef()\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(process.env.REACT_APP_SITE_URL + '/courses/auth')\r\n      .then((response) => {\r\n        setCourses(response.data)\r\n      })\r\n      .catch((e) => console.log(e))\r\n  }, [])\r\n\r\n  function submitHandler() {\r\n    setLoading(true)\r\n    if (defaultValue.length > 0) {\r\n      axios\r\n        .put(process.env.REACT_APP_SITE_URL + '/routine', {\r\n          id: defaultValue[0],\r\n          startDate: defaultValue[1],\r\n          endDate: defaultValue[2],\r\n          syllabus: ref.current.value,\r\n          courseId: courseRef.current.value\r\n        })\r\n        .then((res) => {\r\n          setLoading(false)\r\n          setMsg(res.data.message)\r\n        })\r\n        .catch((e) => {\r\n          setLoading(false)\r\n          setMsg(e.message)\r\n        })\r\n      return\r\n    }\r\n    axios\r\n      .post(process.env.REACT_APP_SITE_URL + '/routine', {\r\n        startDate,\r\n        endDate,\r\n        syllabus: ref.current.value,\r\n        courseId: courseRef.current.value\r\n      })\r\n      .then((res) => {\r\n        setLoading(false)\r\n        setMsg(res.data.message)\r\n      })\r\n      .catch((e) => {\r\n        setLoading(false)\r\n        setMsg(e.message)\r\n      })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {loading && <Spinner />}\r\n      <Toast\r\n        show={msg}\r\n        onClose={() => {\r\n          setMsg(null)\r\n        }}\r\n        style={{ position: 'absolute' }}\r\n      >\r\n        <Toast.Header>\r\n          <strong className='mr-auto'>Message</strong>\r\n        </Toast.Header>\r\n        <Toast.Body>{msg}</Toast.Body>\r\n      </Toast>\r\n      <h4>Routine Builder</h4>\r\n      <div className='d-flex'>\r\n        <div className='my-3 mr-5'>\r\n          <p>Start Date</p>\r\n          <DatePicker\r\n            selected={defaultValue.length > 0 ? defaultValue[1] : startDate}\r\n            onChange={(date) => {\r\n              if (defaultValue.length > 0) {\r\n                defaultValue[1] = date\r\n              }\r\n              setStartDate(date)\r\n            }}\r\n            showTimeSelect\r\n            minDate={new Date()}\r\n            dateFormat='yyyy-MMM-dd, hh:mm a'\r\n          />\r\n          <FaRegCalendarAlt size='1.7rem' />\r\n        </div>\r\n        <div className='my-3'>\r\n          <p>End Date</p>\r\n          <DatePicker\r\n            selected={defaultValue.length > 0 ? defaultValue[2] : endDate}\r\n            onChange={(date) => {\r\n              if (defaultValue.length > 0) {\r\n                defaultValue[2] = date\r\n              }\r\n              setEndDate(date)\r\n            }}\r\n            showTimeSelect\r\n            minDate={new Date()}\r\n            dateFormat='yyyy-MMM-dd, hh:mm a'\r\n          />\r\n          <FaRegCalendarAlt size='1.7rem' />\r\n        </div>\r\n      </div>\r\n\r\n      <Form.Group controlId='exampleForm.ControlTextarea1'>\r\n        <Form.Label>Syllabus</Form.Label>\r\n        <Form.Control\r\n          as='textarea'\r\n          ref={ref}\r\n          rows={2}\r\n          defaultValue={defaultValue.length > 0 ? defaultValue[3] : ''}\r\n        />\r\n      </Form.Group>\r\n\r\n      <Form.Group controlId='exampleForm.ControlSelect1'>\r\n        <Form.Label>Select A Course</Form.Label>\r\n        <Form.Control\r\n          as='select'\r\n          ref={courseRef}\r\n          value={defaultValue.length > 0 ? defaultValue[4] : ''}\r\n        >\r\n          {courses.map((course) => (\r\n            <option value={course.id}>{course.title}</option>\r\n          ))}\r\n        </Form.Control>\r\n      </Form.Group>\r\n\r\n      <Button variant='primary' onClick={submitHandler}>\r\n        Submit\r\n      </Button>\r\n    </div>\r\n  )\r\n}\r\n","import Axios from 'axios'\r\n//import moment from 'moment'\r\nimport * as moment from 'dayjs'\r\nimport React from 'react'\r\nimport { Badge, Button, OverlayTrigger, Tooltip } from 'react-bootstrap'\r\n\r\nconst RenderTooltip = React.forwardRef(({ id, setMsg, ...props }, ref) => (\r\n  <Tooltip ref={ref} id='button-tooltip' {...props}>\r\n    <p>Are you sure to delete this syllabus.</p>\r\n    <Button\r\n      variant='danger'\r\n      onClick={() => {\r\n        Axios.delete(process.env.REACT_APP_SITE_URL + '/routine/' + id)\r\n          .then((res) => {\r\n            console.log(res)\r\n            setMsg(res.data.message)\r\n          })\r\n          .catch((e) => {\r\n            console.log(e)\r\n            setMsg(e.message)\r\n          })\r\n      }}\r\n    >\r\n      Yes\r\n    </Button>\r\n  </Tooltip>\r\n))\r\n\r\nexport default function SingleRoutineCard({\r\n  syllabus,\r\n  ind,\r\n  showRaw,\r\n  getStatus,\r\n  setShowModal,\r\n  setEditSyllabusValue,\r\n  setMsg\r\n}) {\r\n  return (\r\n    <li\r\n      key={syllabus.id}\r\n      className='event'\r\n      data-date={moment(syllabus.startDate).format('YYYY-MMM-DD, h:mm a')}\r\n    >\r\n      <p>{syllabus.syllabus}</p>\r\n      <p className='text-danger'>\r\n        <Badge variant='info' className='mr-2'>\r\n          Status:{' '}\r\n        </Badge>\r\n        {getStatus(syllabus.startDate, syllabus.endDate)}\r\n      </p>\r\n      <p className='text-secondary'>\r\n        Exam ends: {moment(syllabus.endDate).format('YYYY-MMM-DD, h:mm a')}\r\n      </p>\r\n      {showRaw && (\r\n        <>\r\n          <Button\r\n            variant='warning'\r\n            onClick={() => {\r\n              setShowModal(true)\r\n              setEditSyllabusValue([\r\n                syllabus.id,\r\n                new Date(syllabus.startDate),\r\n                new Date(syllabus.endDate),\r\n                syllabus.syllabus,\r\n                syllabus.courseId\r\n              ])\r\n            }}\r\n          >\r\n            Edit\r\n          </Button>\r\n          <OverlayTrigger\r\n            trigger='click'\r\n            placement='right'\r\n            overlay={<RenderTooltip setMsg={setMsg} id={syllabus.id} />}\r\n          >\r\n            <Button variant='danger' className='ml-2'>\r\n              Delete\r\n            </Button>\r\n          </OverlayTrigger>\r\n        </>\r\n      )}\r\n    </li>\r\n  )\r\n}\r\n","import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Button, Modal, Tab, Tabs, Toast } from 'react-bootstrap'\r\nimport { GrUpdate } from 'react-icons/gr'\r\nimport { Link } from 'react-router-dom'\r\nimport AddASyllabus from './addASyllabus'\r\nimport SingleRoutineCard from './singleRoutineCard'\r\n\r\nexport function getStatus(start, end) {\r\n  const date = new Date()\r\n  const startDate = new Date(start)\r\n  const endDate = new Date(end)\r\n\r\n  if (\r\n    startDate.getTime() <= date.getTime() &&\r\n    endDate.getTime() >= date.getTime()\r\n  ) {\r\n    return 'Ongoing'\r\n  }\r\n\r\n  if (endDate.getTime() <= date.getTime()) {\r\n    return 'Past'\r\n  }\r\n\r\n  return 'Upcoming'\r\n}\r\n\r\nexport default function ShowRoutine({ showRaw, id, title }) {\r\n  const [routine, setRoutine] = useState([])\r\n  const [showModal, setShowModal] = useState(false)\r\n  const [msg, setMsg] = useState(null)\r\n  const [editSyllabusVale, setEditSyllabusValue] = useState([])\r\n  const [courses, setCourses] = useState([])\r\n\r\n  const modalClose = () => {\r\n    setShowModal(false)\r\n  }\r\n\r\n  const handleUpdate = () => {\r\n    axios\r\n      .get(process.env.REACT_APP_SITE_URL + '/routine/raw')\r\n      .then((res) => {\r\n        setRoutine(res.data)\r\n      })\r\n      .catch()\r\n  }\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(process.env.REACT_APP_SITE_URL + '/courses/')\r\n      .then((res) => {\r\n        setCourses(res.data)\r\n      })\r\n      .catch((e) => console.log(e))\r\n\r\n    axios\r\n      .get(\r\n        process.env.REACT_APP_SITE_URL +\r\n          '/routine' +\r\n          (showRaw ? '/raw' : '/course/' + id)\r\n      )\r\n      .then((res) => {\r\n        setRoutine(res.data)\r\n      })\r\n      .catch()\r\n  }, [showRaw])\r\n\r\n  return (\r\n    <div className='container'>\r\n      <Modal show={showModal} onHide={modalClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Edit The Syllabus</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <AddASyllabus defaultValue={editSyllabusVale} />\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant='secondary' onClick={modalClose}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n      <div className='row'>\r\n        <div className='col-md-12'>\r\n          <div className='card'>\r\n            <div className='card-body'>\r\n              {showRaw && (\r\n                <>\r\n                  <Toast\r\n                    show={msg}\r\n                    onClose={() => {\r\n                      setMsg(null)\r\n                    }}\r\n                    style={{ position: 'absolute', right: '10px', top: '10px' }}\r\n                  >\r\n                    <Toast.Header>\r\n                      <strong className='mr-auto'>Message</strong>\r\n                    </Toast.Header>\r\n                    <Toast.Body>{msg}</Toast.Body>\r\n                  </Toast>\r\n                  <h4 className='card-title'>Raw Routine</h4>\r\n                  <Button variant='light' onClick={handleUpdate}>\r\n                    <GrUpdate size={'1.3rem'} />\r\n                  </Button>\r\n                </>\r\n              )}\r\n              <div\r\n                id='content'\r\n                style={{ maxHeight: '350px', overflowY: 'scroll' }}\r\n              >\r\n                {' '}\r\n                {showRaw ? (\r\n                  <Tabs defaultActiveKey='0' id='uncontrolled-tab-example'>\r\n                    {courses.map((course, ind) => (\r\n                      <Tab eventKey={ind} title={course.title}>\r\n                        {\r\n                          <ul className='timeline mt-3'>\r\n                            {routine\r\n                              .filter(\r\n                                (syllabus) => syllabus.courseId === course.id\r\n                              )\r\n                              .map((syllabus) => (\r\n                                <SingleRoutineCard\r\n                                  syllabus={syllabus}\r\n                                  showRaw={showRaw}\r\n                                  getStatus={getStatus}\r\n                                  setShowModal={setShowModal}\r\n                                  setEditSyllabusValue={setEditSyllabusValue}\r\n                                  setMsg={setMsg}\r\n                                />\r\n                              ))}\r\n                          </ul>\r\n                        }\r\n                      </Tab>\r\n                    ))}\r\n                  </Tabs>\r\n                ) : (\r\n                  <div>\r\n                    <ul className='timeline'>\r\n                      {routine.map((syllabus) => (\r\n                        <SingleRoutineCard\r\n                          key={syllabus.id}\r\n                          syllabus={syllabus}\r\n                          showRaw={showRaw}\r\n                          getStatus={getStatus}\r\n                          setShowModal={setShowModal}\r\n                          setEditSyllabusValue={setEditSyllabusValue}\r\n                          setMsg={setMsg}\r\n                        />\r\n                      ))}\r\n                    </ul>\r\n                    <Link\r\n                      to={{\r\n                        pathname: '/print',\r\n                        state: { fromRoutine: true, routine, title }\r\n                      }}\r\n                      style={{\r\n                        position: 'absolute',\r\n                        bottom: '-15px',\r\n                        right: '50px'\r\n                      }}\r\n                    >\r\n                      <Button>Details</Button>\r\n                    </Link>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { Component } from 'react'\r\nimport Accordion from 'react-bootstrap/Accordion'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Card from 'react-bootstrap/Card'\r\nimport DatePicker from 'react-datepicker'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport { FaBars, FaCalendarAlt } from 'react-icons/fa'\r\n\r\n// CSS Modules, react-datepicker-cssmodules.css\r\n// import 'react-datepicker/dist/react-datepicker-cssmodules.css';\r\n\r\nclass BigCard extends Component {\r\n  state = {\r\n    startDate: new Date(),\r\n    endDate: new Date()\r\n  }\r\n\r\n  startHandleChange = (date) => {\r\n    this.setState({\r\n      startDate: date\r\n    })\r\n  }\r\n  endHandleChange = (date) => {\r\n    this.setState({\r\n      endDate: date\r\n    })\r\n  }\r\n  reportHandler = () => {\r\n    //console.log(this.state.startDate, this.state.endDate);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Accordion defaultActiveKey='0' className='mb-3'>\r\n        <Card className='border-top-0'>\r\n          <Card.Header className={'bg-dark text-light'}>\r\n            <div className='d-flex justify-content-between'>\r\n              {this.props.header}\r\n              <Accordion.Toggle as={Button} variant='link' eventKey='0'>\r\n                <FaBars size='1.6rem' className='text-light' />\r\n              </Accordion.Toggle>\r\n              {/* <span className=\"\">More..</span> */}\r\n            </div>\r\n          </Card.Header>\r\n          <Accordion.Collapse eventKey='0'>\r\n            <Card.Body>\r\n              {this.props.showDatePicker && (\r\n                <div className='d-flex flex-wrap justify-content-between mb-3'>\r\n                  <div>\r\n                    <span>Start Date:</span>\r\n                    <FaCalendarAlt size='1.6rem' className='mx-2' />\r\n                    <DatePicker\r\n                      selected={this.state.startDate}\r\n                      onChange={this.startHandleChange}\r\n                    />\r\n                  </div>\r\n                  <div>\r\n                    <span className=''>End Date:</span>\r\n                    <FaCalendarAlt size='1.6rem' className='mx-2' />\r\n                    <DatePicker\r\n                      selected={this.state.endDate}\r\n                      onChange={this.endHandleChange}\r\n                    />\r\n                  </div>\r\n\r\n                  <Button onClick={this.reportHandler}>Show</Button>\r\n                </div>\r\n              )}\r\n\r\n              {this.props.children}\r\n            </Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n      </Accordion>\r\n    )\r\n  }\r\n}\r\n\r\nexport default BigCard\r\n","import React from 'react'\r\nimport { useIntl } from 'react-intl'\r\nimport ExamCard from '../../../exams/gallary/examCard'\r\nimport BigCard from '../bigCard/bigCard'\r\n\r\nfunction getRndInteger(min, max) {\r\n  return Math.floor(Math.random() * (max - min)) + min\r\n}\r\n\r\nconst ExamsFeaturedCard = ({ featuredExams, courseId }) => {\r\n  //const featuredExams = useSelector((state) => state.dashboard.featuredExams)\r\n  const intl = useIntl()\r\n\r\n  return (\r\n    <BigCard\r\n      header={intl.formatMessage({\r\n        id: 'db.fe',\r\n        defaultMessage: 'Featured Exams'\r\n      })}\r\n      headerColor={'primary'}\r\n      showDatePicker={false}\r\n    >\r\n      <div className='d-flex justify-content-around flex-wrap'>\r\n        {featuredExams.map((exam, index) => (\r\n          <ExamCard\r\n            key={exam.id}\r\n            examId={exam.id}\r\n            courseId={courseId}\r\n            imgSrc={\r\n              exam.categoryType.length > 0\r\n                ? process.env.REACT_APP_SITE_URL +\r\n                  '/' +\r\n                  exam.categoryType[getRndInteger(0, exam.categoryType.length)]\r\n                    .imageUrl\r\n                : '/assets/image/uncat.jpg'\r\n            }\r\n            title={exam.title}\r\n            categoryType={\r\n              exam.categoryType.length > 0\r\n                ? exam.categoryType\r\n                : [{ name: 'Uncategorized' }]\r\n            }\r\n            description={exam.description}\r\n            createdAt={exam.createdAt}\r\n          />\r\n        ))}\r\n      </div>\r\n    </BigCard>\r\n  )\r\n}\r\n\r\nexport default ExamsFeaturedCard\r\n","import * as _ from 'lodash'\r\nimport React from 'react'\r\nimport { Bar } from 'react-chartjs-2'\r\nimport { useIntl } from 'react-intl'\r\nimport BigCard from '../bigCard/bigCard'\r\n\r\nconst ReportCard = ({ userExamStat }) => {\r\n  //const userExamStat = useSelector((state) => state.dashboard.userExamStat)\r\n  const intl = useIntl()\r\n\r\n  const examTitles = userExamStat ? _.map(userExamStat.examTitles, 'title') : []\r\n  const mark = userExamStat\r\n    ? _.map(\r\n        userExamStat.stat,\r\n        (value) => +((value.averageScore / value.totalMark) * 100).toFixed(2)\r\n      )\r\n    : []\r\n  //const stat = userExamStat ? _.map(userExamStat.stat, \"averageScore\") : [];\r\n\r\n  const options = {\r\n    responsive: true, // Instruct chart js to respond nicely.\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            beginAtZero: true,\r\n            min: 0,\r\n            max: 100\r\n          }\r\n        }\r\n      ]\r\n    }\r\n  }\r\n  const data = {\r\n    labels: examTitles,\r\n    datasets: [\r\n      {\r\n        label: 'Marks in Percentage', // Name the series\r\n        data: mark, // Specify the data values array\r\n        fill: false,\r\n        borderColor: '#2196f3', // Add custom color border (Line)\r\n        backgroundColor: '#2196f3', // Add custom color background (Points and Fill)\r\n        borderWidth: 1, // Specify bar border width\r\n        maxBarThickness: 35,\r\n        barPercentage: 0.5\r\n      }\r\n    ]\r\n  }\r\n\r\n  return (\r\n    <BigCard\r\n      header={intl.formatMessage({\r\n        id: 'db.ur',\r\n        defaultMessage: 'User Reports'\r\n      })}\r\n      headerColor={'info'}\r\n      showDatePicker={false}\r\n    >\r\n      <Bar data={data} options={options} />\r\n    </BigCard>\r\n  )\r\n}\r\n\r\nexport default ReportCard\r\n","//import moment from 'moment'\r\nimport * as moment from 'dayjs'\r\nimport React from 'react'\r\nimport { Badge } from 'react-bootstrap'\r\nimport ListGroup from 'react-bootstrap/ListGroup'\r\nimport { MdInfo } from 'react-icons/md'\r\nimport { useIntl } from 'react-intl'\r\nimport BigCard from '../bigCard/bigCard'\r\n\r\nconst SideCard = ({ userExamStat }) => {\r\n  //const userExamStat = useSelector((state) => state.dashboard.userExamStat)\r\n  const intl = useIntl()\r\n\r\n  const examTitles = userExamStat ? userExamStat.examTitles : []\r\n  const stat = userExamStat ? userExamStat.stat : []\r\n\r\n  return (\r\n    <BigCard\r\n      header={intl.formatMessage({\r\n        id: 'db.ra',\r\n        defaultMessage: 'Recent Activity'\r\n      })}\r\n      headerColor={'warning'}\r\n      showDatePicker={false}\r\n    >\r\n      <ListGroup as='ul' variant='flush'>\r\n        {examTitles &&\r\n          examTitles.map((exam, index) => {\r\n            if (index < 3)\r\n              return (\r\n                <ListGroup.Item key={index} as='li' className=''>\r\n                  {/* <Badge variant=\"info\" className=\"rounded p-1\"> */}\r\n                  <MdInfo size='1.5em' color='magenta' />\r\n                  {/* </Badge> */}\r\n                  <Badge variant='light'>{exam.title}</Badge>Exam attempted{' '}\r\n                  <Badge variant='danger'>{stat[index].attemptNumbers}</Badge>{' '}\r\n                  times.\r\n                  <p className='text-muted pl-3' style={{ fontSize: '80%' }}>\r\n                    last attempt{' '}\r\n                    {moment(stat[index].lastAttemptTime)\r\n                      .startOf('day')\r\n                      .fromNow()}\r\n                  </p>\r\n                </ListGroup.Item>\r\n              )\r\n          })}\r\n      </ListGroup>\r\n    </BigCard>\r\n  )\r\n}\r\n\r\nexport default SideCard\r\n","import React from 'react'\r\nimport { useIntl } from 'react-intl'\r\nimport ShowRoutine from '../../../routine/showRoutine'\r\nimport BigCard from '../bigCard/bigCard'\r\n\r\nexport default function RoutineSideCard({ id, title }) {\r\n  const intl = useIntl()\r\n  return (\r\n    <BigCard\r\n      header={intl.formatMessage({\r\n        id: 'db.routine',\r\n        defaultMessage: 'Routine'\r\n      })}\r\n      headerColor={'warning'}\r\n      showDatePicker={false}\r\n    >\r\n      <ShowRoutine id={id} title={title} />\r\n    </BigCard>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport {\r\n  FaBalanceScale,\r\n  FaClock,\r\n  FaFile,\r\n  FaFileAlt,\r\n  FaFileImport,\r\n  FaMedal,\r\n  FaPoll,\r\n  FaUsers\r\n} from 'react-icons/fa'\r\n\r\nconst icon = ({ icon, size, classes }) => {\r\n  switch (icon) {\r\n    case 'file-alt':\r\n      return <FaFileAlt size={size} className={classes} />\r\n    case 'file-import':\r\n      return <FaFileImport size={size} className={classes} />\r\n\r\n    case 'medal':\r\n      return <FaMedal size={size} className={classes} />\r\n\r\n    case 'users':\r\n      return <FaUsers size={size} className={classes} />\r\n\r\n    case 'poll':\r\n      return <FaPoll size={size} className={classes} />\r\n\r\n    case 'balance-scale':\r\n      return <FaBalanceScale size={size} className={classes} />\r\n\r\n    case 'file':\r\n      return <FaFile size={size} className={classes} />\r\n\r\n    case 'clock':\r\n      return <FaClock size={size} className={classes} />\r\n\r\n    default:\r\n      return <FaFile size={size} className={classes} />\r\n  }\r\n}\r\nexport default icon\r\n","import React from 'react'\r\nimport Card from 'react-bootstrap/Card'\r\nimport Icon from './icon'\r\n\r\nconst footer = ({ color, heading, value, icon }) => {\r\n  return (\r\n    <Card.Footer className='bg-dark text-light text-right'>\r\n      <span className='mr-2'>{heading}</span>\r\n      <span className='mr-5'>{value}</span>\r\n      <Icon icon={icon} size='1.8rem' className='mr-2' />\r\n    </Card.Footer>\r\n  )\r\n}\r\n\r\nexport default footer\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst cardHeader = ({ heading, color, value, id, courseId }) => (\r\n  <div className='text-right text-secondary'>\r\n    <h5>{heading}</h5>\r\n    <h3 className={'text-' + color}>\r\n      {courseId ? (\r\n        <Link to={'exams/' + id + '_' + courseId}> {value} </Link>\r\n      ) : (\r\n        value\r\n      )}\r\n    </h3>\r\n  </div>\r\n)\r\n\r\nexport default cardHeader\r\n","import React from 'react'\r\nimport Card from 'react-bootstrap/Card'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Footer from './footer'\r\nimport Header from './header'\r\nimport Icon from './icon'\r\n\r\nconst miniBlock = ({\r\n  heading,\r\n  color,\r\n  value,\r\n  id,\r\n  courseId,\r\n  faIcon,\r\n  footerHeading,\r\n  footerValue,\r\n  faFooterIcon\r\n}) => {\r\n  return (\r\n    <Card className='card-common mt-2'>\r\n      <Card.Body>\r\n        <Row>\r\n          <Col sm={8}>\r\n            <Header\r\n              heading={heading}\r\n              color={color}\r\n              value={value}\r\n              id={id}\r\n              courseId={courseId}\r\n            />\r\n          </Col>\r\n          <Col sm={4}>\r\n            <div>\r\n              <Icon icon={faIcon} size={'2.4rem'} classes={'text-' + color} />\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Card.Body>\r\n      <Footer\r\n        color={color}\r\n        heading={footerHeading}\r\n        value={footerValue}\r\n        icon={faFooterIcon}\r\n      />\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default miniBlock\r\n","import React from 'react'\r\nimport { useIntl } from 'react-intl'\r\nimport MiniBlock from './miniBlock'\r\n\r\nconst Rank = ({ value, footerValue }) => {\r\n  const intl = useIntl()\r\n  return (\r\n    <MiniBlock\r\n      heading={intl.formatMessage({ id: 'db.er', defaultMessage: 'Your Rank' })}\r\n      //\r\n      value={value}\r\n      //\r\n      faIcon={'medal'}\r\n      footerHeading={intl.formatMessage({\r\n        id: 'db.ts',\r\n        defaultMessage: 'Total Student'\r\n      })}\r\n      footerValue={footerValue}\r\n      color={'warning'}\r\n      faFooterIcon={'users'}\r\n    />\r\n  )\r\n}\r\n\r\nexport default Rank\r\n","import React from 'react'\r\nimport { useIntl } from 'react-intl'\r\nimport MiniBlock from './miniBlock'\r\n\r\nconst Result = ({ value, footerValue }) => {\r\n  const intl = useIntl()\r\n  return (\r\n    <MiniBlock\r\n      heading={intl.formatMessage({\r\n        id: 'db.os',\r\n        defaultMessage: 'Overall Score'\r\n      })}\r\n      //\r\n      value={value}\r\n      //\r\n      faIcon={'poll'}\r\n      footerHeading={intl.formatMessage({\r\n        id: 'db.of',\r\n        defaultMessage: 'Out of'\r\n      })}\r\n      footerValue={footerValue}\r\n      color={'dark'}\r\n      faFooterIcon={'balance-scale'}\r\n    />\r\n  )\r\n}\r\n\r\nexport default Result\r\n","import React from 'react'\r\nimport { useIntl } from 'react-intl'\r\nimport MiniBlock from './miniBlock'\r\n\r\nconst TotalExam = ({ value, footerValue }) => {\r\n  const intl = useIntl()\r\n\r\n  return (\r\n    <MiniBlock\r\n      heading={intl.formatMessage({\r\n        id: 'db.et',\r\n        defaultMessage: 'Exam Taken'\r\n      })}\r\n      value={value}\r\n      faIcon={'file-import'}\r\n      footerHeading={intl.formatMessage({\r\n        id: 'db.te',\r\n        defaultMessage: 'Total Exams'\r\n      })}\r\n      footerValue={footerValue}\r\n      color={'info'}\r\n      faFooterIcon={'file-alt'}\r\n    />\r\n  )\r\n}\r\n\r\nexport default TotalExam\r\n","import React from 'react'\r\nimport { useIntl } from 'react-intl'\r\nimport MiniBlock from './miniBlock'\r\n\r\nconst UpcomingExam = ({ value, footerValue, id, courseId }) => {\r\n  const intl = useIntl()\r\n  return (\r\n    <MiniBlock\r\n      heading={intl.formatMessage({\r\n        id: 'db.le',\r\n        defaultMessage: 'Latest Exam'\r\n      })}\r\n      //\r\n      value={value}\r\n      //\r\n      id={id}\r\n      courseId={courseId}\r\n      faIcon={'file'}\r\n      footerHeading={intl.formatMessage({\r\n        id: 'db.so',\r\n        defaultMessage: 'Start On'\r\n      })}\r\n      footerValue={footerValue}\r\n      color={'success'}\r\n      faFooterIcon={'clock'}\r\n    />\r\n  )\r\n}\r\n\r\nexport default UpcomingExam\r\n","//import moment from 'moment'\r\nimport * as moment from 'dayjs'\r\nimport React from 'react'\r\nimport { Col, Jumbotron, Nav, Row, Tab } from 'react-bootstrap'\r\nimport { FaChevronCircleRight } from 'react-icons/fa'\r\nimport ExamsFeaturedCard from './bigCards/mainContentCards/examsFeaturedCard'\r\nimport ReportCard from './bigCards/mainContentCards/reportCard'\r\nimport RecentActivityCard from './bigCards/sideCards/recentActivityCard'\r\nimport Routine from './bigCards/sideCards/routine'\r\nimport Rank from './miniCards/miniInfoBlock/rank'\r\nimport Result from './miniCards/miniInfoBlock/result'\r\nimport TotalExam from './miniCards/miniInfoBlock/totalExam'\r\nimport UpcomingExam from './miniCards/miniInfoBlock/upcomingExam'\r\nconst duration = require('dayjs/plugin/duration')\r\nconst relativeTime = require('dayjs/plugin/relativeTime')\r\nmoment.extend(relativeTime)\r\nmoment.extend(duration)\r\n\r\nexport default function StuDashCourseComponent({ userDashExamInfo }) {\r\n  return (\r\n    <Tab.Container id='left-tabs-example' defaultActiveKey={0}>\r\n      <Row>\r\n        <Col sm={2}>\r\n          <h4 className='text-center mt-3'>Enrolled Courses</h4>\r\n          <p className='text-muted text-center' style={{ fontSize: '.8rem' }}>\r\n            Select course to get details\r\n          </p>\r\n          <hr />\r\n          <Nav variant='pills' className='flex-column p-3'>\r\n            {userDashExamInfo.map((e, i) => (\r\n              <Nav.Item key={e + i} className='mb-2'>\r\n                <Nav.Link eventKey={i}>\r\n                  <FaChevronCircleRight className='mr-2' />\r\n                  {e.title}\r\n                </Nav.Link>\r\n              </Nav.Item>\r\n            ))}\r\n          </Nav>\r\n        </Col>\r\n        <Col sm={10}>\r\n          <Jumbotron>\r\n            <Tab.Content>\r\n              {userDashExamInfo.map((examInfo, ind) => {\r\n                const {\r\n                  id,\r\n                  userExamInfo,\r\n                  userExamStat,\r\n                  featuredExams\r\n                } = examInfo\r\n                return (\r\n                  <Tab.Pane key={id} eventKey={ind}>\r\n                    <div className='d-md-flex justify-content-between flex-wrap'>\r\n                      <TotalExam\r\n                        value={userExamInfo.totalExam[1]}\r\n                        footerValue={userExamInfo.totalExam[0]}\r\n                      />\r\n                      <Rank\r\n                        value={userExamInfo.rank[0]}\r\n                        footerValue={userExamInfo.rank[1]}\r\n                      />\r\n                      <UpcomingExam\r\n                        value={userExamInfo.upcomingExam[0]}\r\n                        id={userExamInfo.upcomingExam[2]}\r\n                        footerValue={moment(\r\n                          userExamInfo.upcomingExam[1]\r\n                        ).format('DD-MMM-YYYY')}\r\n                        courseId={id}\r\n                      />\r\n                      <Result\r\n                        value={userExamInfo.result[0]}\r\n                        footerValue={userExamInfo.result[1]}\r\n                      />{' '}\r\n                    </div>\r\n                    <hr className='my-3' />\r\n                    <Routine id={id} title={examInfo.title} />\r\n                    <hr />\r\n                    <Row>\r\n                      <Col xl={8} lg={12}>\r\n                        <ReportCard userExamStat={userExamStat} />\r\n                      </Col>\r\n                      <Col xl={4}>\r\n                        <RecentActivityCard userExamStat={userExamStat} />\r\n                      </Col>\r\n                    </Row>\r\n                    <hr />\r\n                    <ExamsFeaturedCard\r\n                      featuredExams={featuredExams}\r\n                      courseId={id}\r\n                    />\r\n                  </Tab.Pane>\r\n                )\r\n              })}\r\n            </Tab.Content>\r\n          </Jumbotron>\r\n        </Col>\r\n      </Row>\r\n    </Tab.Container>\r\n  )\r\n\r\n  // return (\r\n  //   <div>\r\n  //     <Tabs\r\n  //       id='controlled-tab-course'\r\n  //       activeKey={key}\r\n  //       onSelect={(k) => {\r\n  //         setKey(k)\r\n  //       }}\r\n  //       className='mb-3'\r\n  //       style={{ fontSize: '1.5rem' }}\r\n  //     >\r\n  //       {userDashExamInfo.map((examInfo, ind) => {\r\n  //         const {\r\n  //           id,\r\n  //           title,\r\n  //           userExamInfo,\r\n  //           userExamStat,\r\n  //           featuredExams\r\n  //         } = examInfo\r\n  //         return (\r\n  //           <Tab eventKey={ind} title={title}>\r\n  //             <div className='d-md-flex justify-content-around flex-wrap'>\r\n  //               <TotalExam\r\n  //                 value={userExamInfo.totalExam[0]}\r\n  //                 footerValue={userExamInfo.totalExam[1]}\r\n  //               />\r\n  //               <Rank\r\n  //                 value={userExamInfo.rank[0]}\r\n  //                 footerValue={userExamInfo.rank[1]}\r\n  //               />\r\n  //               <UpcomingExam\r\n  //                 value={userExamInfo.upcomingExam[0]}\r\n  //                 id={userExamInfo.upcomingExam[2]}\r\n  //                 footerValue={moment(userExamInfo.upcomingExam[1]).format(\r\n  //                   'DD-MMM-YYYY'\r\n  //                 )}\r\n  //               />\r\n  //               <Result\r\n  //                 value={userExamInfo.result[0]}\r\n  //                 footerValue={userExamInfo.result[1]}\r\n  //               />{' '}\r\n  //             </div>\r\n  //             <hr className='my-3' />\r\n  //             <Routine id={id} />\r\n  //             <hr />\r\n  //             <Row>\r\n  //               <Col xl={8} lg={12}>\r\n  //                 <ReportCard userExamStat={userExamStat} />\r\n  //                 <hr />\r\n  //                 <ExamsFeaturedCard featuredExams={featuredExams} />\r\n  //                 <hr />\r\n  //               </Col>\r\n  //               <Col xl={4}>\r\n  //                 <RecentActivityCard userExamStat={userExamStat} />\r\n  //                 <hr />\r\n  //               </Col>\r\n  //             </Row>\r\n  //           </Tab>\r\n  //         )\r\n  //       })}\r\n  //     </Tabs>\r\n  //   </div>\r\n  // )\r\n}\r\n"],"sourceRoot":""}