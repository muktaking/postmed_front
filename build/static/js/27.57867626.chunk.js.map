{"version":3,"sources":["../node_modules/warning/warning.js","../node_modules/react-bootstrap/esm/FormCheckInput.js","../node_modules/react-bootstrap/esm/FormCheckLabel.js","../node_modules/react-bootstrap/esm/FormCheck.js","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/Card.js","../node_modules/react-bootstrap/esm/FormGroup.js","../node_modules/react-bootstrap/esm/FormLabel.js","../node_modules/react-bootstrap/esm/FormText.js","../node_modules/react-bootstrap/esm/Switch.js","../node_modules/react-bootstrap/esm/Form.js","../node_modules/react-bootstrap/esm/Alert.js","components/navbar/subNavBar.js","components/result/gist.js","components/result/stem.js","container/result/getFeedbacks.js","container/result/feedback.js","container/result/result.js"],"names":["warning","module","exports","FormCheckInput","React","forwardRef","_ref","ref","id","bsPrefix","bsCustomPrefix","className","isValid","isInvalid","isStatic","_ref$as","as","Component","props","_objectWithoutPropertiesLoose","_useContext","useContext","FormContext","controlId","custom","useBootstrapPrefix","createElement","_extends","classNames","displayName","defaultProps","type","FormCheckLabel","htmlFor","FormCheck","inline","disabled","feedback","style","title","label","children","propCustom","innerFormContext","useMemo","hasLabel","input","Provider","value","Fragment","Feedback","Input","Label","CardImg","variant","prefix","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","Card","bg","text","border","body","cardContext","cardHeaderBsPrefix","CardContext","Img","Title","Subtitle","Body","Link","Text","Header","Footer","ImgOverlay","FormGroup","context","FormLabel","column","srOnly","classes","Col","FormText","muted","Switch","Form","validated","Row","Group","Control","FormControl","Check","show","transition","Fade","closeLabel","controllables","Alert","uncontrolledProps","_useUncontrolled","useUncontrolled","onClose","dismissible","Transition","handleClose","useEventCallback","e","alert","role","undefined","CloseButton","onClick","unmountOnExit","in","DivStyledAsH4","SafeAnchor","Heading","connect","state","isAuthenticated","auth","token","pages","Item","to","pathname","toUpperCase","map","key","Gist","width","bgColor","fontSize","toLowerCase","defaultMessage","answerStatus","QTypeNumber","sbaStyle","stem","qIndex","index","qType","answer","qStem","aStem","isUntouched","color","size","checked","marginRight","name","GetFeedbacks","examId","useState","feedbacks","setFeedbacks","useEffect","axios","get","process","then","response","data","catch","console","log","ListGroup","Badge","status","getFeedbackStatus","feedbackStatus","message","validate","values","errors","email","test","validator","isLength","min","max","res","setRes","user","useSelector","initialValues","firstName","lg","md","sm","enableReinitialize","onSubmit","setSubmitting","post","submit","touched","handleChange","handleSubmit","placeholder","onChange","classname","defaultChecked","rows","Button","QType","Result","this","exams","examResult","totalMark","totalScore","totalPenaltyMark","totalScorePercentage","timeTakenToComplete","error","toFixed","moment","duration","humanize","item","result","stemResult","length","qText","stems","ind","fbStem","intl","formatMessage","generalFeedback","replace","split","Image","src","height","injectIntl"],"mappings":"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","file":"static/js/27.57867626.chunk.js","sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar __DEV__ = process.env.NODE_ENV !== 'production';\n\nvar warning = function() {};\n\nif (__DEV__) {\n  var printWarning = function printWarning(format, args) {\n    var len = arguments.length;\n    args = new Array(len > 1 ? len - 1 : 0);\n    for (var key = 1; key < len; key++) {\n      args[key - 1] = arguments[key];\n    }\n    var argIndex = 0;\n    var message = 'Warning: ' +\n      format.replace(/%s/g, function() {\n        return args[argIndex++];\n      });\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  }\n\n  warning = function(condition, format, args) {\n    var len = arguments.length;\n    args = new Array(len > 2 ? len - 2 : 0);\n    for (var key = 2; key < len; key++) {\n      args[key - 2] = arguments[key];\n    }\n    if (format === undefined) {\n      throw new Error(\n          '`warning(condition, format, ...args)` requires a warning ' +\n          'message argument'\n      );\n    }\n    if (!condition) {\n      printWarning.apply(null, [format].concat(args));\n    }\n  };\n}\n\nmodule.exports = warning;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  type: 'checkbox'\n};\nvar FormCheckInput = React.forwardRef(function (_ref, ref) {\n  var id = _ref.id,\n      bsPrefix = _ref.bsPrefix,\n      bsCustomPrefix = _ref.bsCustomPrefix,\n      className = _ref.className,\n      isValid = _ref.isValid,\n      isInvalid = _ref.isInvalid,\n      isStatic = _ref.isStatic,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'input' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"id\", \"bsPrefix\", \"bsCustomPrefix\", \"className\", \"isValid\", \"isInvalid\", \"isStatic\", \"as\"]);\n\n  var _useContext = useContext(FormContext),\n      controlId = _useContext.controlId,\n      custom = _useContext.custom;\n\n  bsPrefix = custom ? useBootstrapPrefix(bsCustomPrefix, 'custom-control-input') : useBootstrapPrefix(bsPrefix, 'form-check-input');\n  return React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    id: id || controlId,\n    className: classNames(className, bsPrefix, isValid && 'is-valid', isInvalid && 'is-invalid', isStatic && 'position-static')\n  }));\n});\nFormCheckInput.displayName = 'FormCheckInput';\nFormCheckInput.defaultProps = defaultProps;\nexport default FormCheckInput;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar FormCheckLabel = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      bsCustomPrefix = _ref.bsCustomPrefix,\n      className = _ref.className,\n      htmlFor = _ref.htmlFor,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"bsCustomPrefix\", \"className\", \"htmlFor\"]);\n\n  var _useContext = useContext(FormContext),\n      controlId = _useContext.controlId,\n      custom = _useContext.custom;\n\n  bsPrefix = custom ? useBootstrapPrefix(bsCustomPrefix, 'custom-control-label') : useBootstrapPrefix(bsPrefix, 'form-check-label');\n  return React.createElement(\"label\", _extends({}, props, {\n    ref: ref,\n    htmlFor: htmlFor || controlId,\n    className: classNames(className, bsPrefix)\n  }));\n});\nFormCheckLabel.displayName = 'FormCheckLabel';\nexport default FormCheckLabel;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport all from 'prop-types-extra/lib/all';\nimport React, { useContext, useMemo } from 'react';\nimport Feedback from './Feedback';\nimport FormCheckInput from './FormCheckInput';\nimport FormCheckLabel from './FormCheckLabel';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  type: 'checkbox',\n  inline: false,\n  disabled: false,\n  isValid: false,\n  isInvalid: false,\n  title: ''\n};\nvar FormCheck = React.forwardRef(function (_ref, ref) {\n  var id = _ref.id,\n      bsPrefix = _ref.bsPrefix,\n      bsCustomPrefix = _ref.bsCustomPrefix,\n      inline = _ref.inline,\n      disabled = _ref.disabled,\n      isValid = _ref.isValid,\n      isInvalid = _ref.isInvalid,\n      feedback = _ref.feedback,\n      className = _ref.className,\n      style = _ref.style,\n      title = _ref.title,\n      type = _ref.type,\n      label = _ref.label,\n      children = _ref.children,\n      propCustom = _ref.custom,\n      _ref$as = _ref.as,\n      as = _ref$as === void 0 ? 'input' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"id\", \"bsPrefix\", \"bsCustomPrefix\", \"inline\", \"disabled\", \"isValid\", \"isInvalid\", \"feedback\", \"className\", \"style\", \"title\", \"type\", \"label\", \"children\", \"custom\", \"as\"]);\n\n  var custom = type === 'switch' ? true : propCustom;\n  bsPrefix = custom ? useBootstrapPrefix(bsCustomPrefix, 'custom-control') : useBootstrapPrefix(bsPrefix, 'form-check');\n\n  var _useContext = useContext(FormContext),\n      controlId = _useContext.controlId;\n\n  var innerFormContext = useMemo(function () {\n    return {\n      controlId: id || controlId,\n      custom: custom\n    };\n  }, [controlId, custom, id]);\n  var hasLabel = label != null && label !== false && !children;\n  var input = React.createElement(FormCheckInput, _extends({}, props, {\n    type: type === 'switch' ? 'checkbox' : type,\n    ref: ref,\n    isValid: isValid,\n    isInvalid: isInvalid,\n    isStatic: !hasLabel,\n    disabled: disabled,\n    as: as\n  }));\n  return React.createElement(FormContext.Provider, {\n    value: innerFormContext\n  }, React.createElement(\"div\", {\n    style: style,\n    className: classNames(className, bsPrefix, custom && \"custom-\" + type, inline && bsPrefix + \"-inline\")\n  }, children || React.createElement(React.Fragment, null, input, hasLabel && React.createElement(FormCheckLabel, {\n    title: title\n  }, label), (isValid || isInvalid) && React.createElement(Feedback, {\n    type: isValid ? 'valid' : 'invalid'\n  }, feedback))));\n});\nFormCheck.displayName = 'FormCheck';\nFormCheck.defaultProps = defaultProps;\nFormCheck.Input = FormCheckInput;\nFormCheck.Label = FormCheckLabel;\nexport default FormCheck;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  variant: null\n};\nvar CardImg = React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\nfunction (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      variant = _ref.variant,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'img' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"variant\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return React.createElement(Component, _extends({\n    ref: ref,\n    className: classNames(variant ? prefix + \"-\" + variant : prefix, className)\n  }, props));\n});\nCardImg.displayName = 'CardImg';\nCardImg.defaultProps = defaultProps;\nexport default CardImg;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardContext from './CardContext';\nimport CardImg from './CardImg';\nvar DivStyledAsH5 = divWithClassName('h5');\nvar DivStyledAsH6 = divWithClassName('h6');\nvar CardBody = createWithBsPrefix('card-body');\nvar defaultProps = {\n  body: false\n};\nvar Card = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      bg = _ref.bg,\n      text = _ref.text,\n      border = _ref.border,\n      body = _ref.body,\n      children = _ref.children,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"bg\", \"text\", \"border\", \"body\", \"children\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'card');\n  var cardContext = useMemo(function () {\n    return {\n      cardHeaderBsPrefix: prefix + \"-header\"\n    };\n  }, [prefix]);\n  return React.createElement(CardContext.Provider, {\n    value: cardContext\n  }, React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, prefix, bg && \"bg-\" + bg, text && \"text-\" + text, border && \"border-\" + border)\n  }), body ? React.createElement(CardBody, null, children) : children));\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nCard.Img = CardImg;\nCard.Title = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nCard.Subtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nCard.Body = CardBody;\nCard.Link = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nCard.Text = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nCard.Header = createWithBsPrefix('card-header');\nCard.Footer = createWithBsPrefix('card-footer');\nCard.ImgOverlay = createWithBsPrefix('card-img-overlay');\nexport default Card;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useMemo } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar FormGroup = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      children = _ref.children,\n      controlId = _ref.controlId,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"children\", \"controlId\", \"as\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-group');\n  var context = useMemo(function () {\n    return {\n      controlId: controlId\n    };\n  }, [controlId]);\n  return React.createElement(FormContext.Provider, {\n    value: context\n  }, React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    className: classNames(className, bsPrefix)\n  }), children));\n});\nFormGroup.displayName = 'FormGroup';\nexport default FormGroup;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport warning from 'warning';\nimport Col from './Col';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  column: false,\n  srOnly: false\n};\nvar FormLabel = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      column = _ref.column,\n      srOnly = _ref.srOnly,\n      className = _ref.className,\n      htmlFor = _ref.htmlFor,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"column\", \"srOnly\", \"className\", \"htmlFor\"]);\n\n  var _useContext = useContext(FormContext),\n      controlId = _useContext.controlId;\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-label');\n  var classes = classNames(className, bsPrefix, srOnly && 'sr-only', column && 'col-form-label');\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !htmlFor, '`controlId` is ignored on `<FormLabel>` when `htmlFor` is specified.') : void 0;\n  htmlFor = htmlFor || controlId;\n  if (column) return React.createElement(Col, _extends({\n    as: \"label\",\n    className: classes,\n    htmlFor: htmlFor\n  }, props));\n  return (// eslint-disable-next-line jsx-a11y/label-has-for, jsx-a11y/label-has-associated-control\n    React.createElement(\"label\", _extends({\n      ref: ref,\n      className: classes,\n      htmlFor: htmlFor\n    }, props))\n  );\n});\nFormLabel.displayName = 'FormLabel';\nFormLabel.defaultProps = defaultProps;\nexport default FormLabel;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar FormText = React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\nfunction (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'small' : _ref$as,\n      muted = _ref.muted,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"as\", \"muted\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-text');\n  return React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    className: classNames(className, bsPrefix, muted && 'text-muted')\n  }));\n});\nFormText.displayName = 'FormText';\nexport default FormText;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport FormCheck from './FormCheck';\nvar Switch = React.forwardRef(function (props, ref) {\n  return React.createElement(FormCheck, _extends({}, props, {\n    ref: ref,\n    type: \"switch\"\n  }));\n});\nSwitch.displayName = 'Switch';\nSwitch.Input = FormCheck.Input;\nSwitch.Label = FormCheck.Label;\nexport default Switch;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport FormCheck from './FormCheck';\nimport FormControl from './FormControl';\nimport FormGroup from './FormGroup';\nimport FormLabel from './FormLabel';\nimport FormText from './FormText';\nimport Switch from './Switch';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nvar defaultProps = {\n  inline: false\n};\nvar Form = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      inline = _ref.inline,\n      className = _ref.className,\n      validated = _ref.validated,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'form' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"inline\", \"className\", \"validated\", \"as\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form');\n  return React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    className: classNames(className, validated && 'was-validated', inline && bsPrefix + \"-inline\")\n  }));\n});\nForm.displayName = 'Form';\nForm.defaultProps = defaultProps;\nForm.Row = createWithBsPrefix('form-row');\nForm.Group = FormGroup;\nForm.Control = FormControl;\nForm.Check = FormCheck;\nForm.Switch = Switch;\nForm.Label = FormLabel;\nForm.Text = FormText;\nexport default Form;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport Fade from './Fade';\nimport CloseButton from './CloseButton';\nimport SafeAnchor from './SafeAnchor';\nvar defaultProps = {\n  show: true,\n  transition: Fade,\n  closeLabel: 'Close alert'\n};\nvar controllables = {\n  show: 'onClose'\n};\nvar Alert = React.forwardRef(function (uncontrolledProps, ref) {\n  var _useUncontrolled = useUncontrolled(uncontrolledProps, controllables),\n      bsPrefix = _useUncontrolled.bsPrefix,\n      show = _useUncontrolled.show,\n      closeLabel = _useUncontrolled.closeLabel,\n      className = _useUncontrolled.className,\n      children = _useUncontrolled.children,\n      variant = _useUncontrolled.variant,\n      onClose = _useUncontrolled.onClose,\n      dismissible = _useUncontrolled.dismissible,\n      Transition = _useUncontrolled.transition,\n      props = _objectWithoutPropertiesLoose(_useUncontrolled, [\"bsPrefix\", \"show\", \"closeLabel\", \"className\", \"children\", \"variant\", \"onClose\", \"dismissible\", \"transition\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'alert');\n  var handleClose = useEventCallback(function (e) {\n    onClose(false, e);\n  });\n  var alert = React.createElement(\"div\", _extends({\n    role: \"alert\"\n  }, Transition ? props : undefined, {\n    className: classNames(className, prefix, variant && prefix + \"-\" + variant, dismissible && prefix + \"-dismissible\")\n  }), dismissible && React.createElement(CloseButton, {\n    onClick: handleClose,\n    label: closeLabel\n  }), children);\n  if (!Transition) return show ? alert : null;\n  return React.createElement(Transition, _extends({\n    unmountOnExit: true,\n    ref: ref\n  }, props, {\n    in: show\n  }), alert);\n});\nvar DivStyledAsH4 = divWithClassName('h4');\nDivStyledAsH4.displayName = 'DivStyledAsH4';\nAlert.displayName = 'Alert';\nAlert.defaultProps = defaultProps;\nAlert.Link = createWithBsPrefix('alert-link', {\n  Component: SafeAnchor\n});\nAlert.Heading = createWithBsPrefix('alert-heading', {\n  Component: DivStyledAsH4\n});\nexport default Alert;","import React from 'react'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport { connect } from 'react-redux'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst subNavBar = (props) => {\r\n  const pages = props.isAuthenticated\r\n    ? ['dashboard', 'exams', 'logout']\r\n    : ['exams', 'signup', 'login']\r\n\r\n  return (\r\n    <Nav className=''>\r\n      <Nav.Item as='li' className='mr-3'>\r\n        <NavLink to={{ pathname: '/' }} className='nav-link'>\r\n          {'Home'.toUpperCase()}\r\n        </NavLink>\r\n      </Nav.Item>\r\n      <Nav.Item as='li' className='mr-3'>\r\n        <NavLink to='/#contact' className='nav-link'>\r\n          {'Contact'.toUpperCase()}\r\n        </NavLink>\r\n      </Nav.Item>\r\n      {pages.map((value) => (\r\n        <Nav.Item key={value} as='li' className='mr-3'>\r\n          <NavLink\r\n            // href={\"/\" + value}\r\n            to={{ pathname: '/' + value }}\r\n            className='nav-link'\r\n          >\r\n            {value.toUpperCase()}\r\n          </NavLink>\r\n        </Nav.Item>\r\n      ))}\r\n      {/* </Scrollspy> */}\r\n    </Nav>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isAuthenticated: state.auth.token !== null\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(subNavBar)\r\n","/* eslint-disable no-undef */\r\n/* eslint-disable react/prop-types */\r\nimport React from 'react'\r\nimport { FormattedMessage } from 'react-intl'\r\n\r\nexport default function Gist({ width = '250px', value, title, bgColor }) {\r\n  // eslint-disable-next-line no-console\r\n  return (\r\n    <div style={{ width: width }} className='mr-2 mb-1'>\r\n      <p\r\n        className={bgColor + ' text-center text-light mb-1 p-3'}\r\n        style={{ fontSize: '1.5rem' }}\r\n      >\r\n        {value}\r\n      </p>\r\n      <p\r\n        className={bgColor + ' bg-warning text-center text-light p-1'}\r\n        style={{ fontSize: '1rem' }}\r\n      >\r\n        <FormattedMessage id={title.toLowerCase()} defaultMessage={title} />\r\n      </p>\r\n    </div>\r\n  )\r\n}\r\n","/* eslint-disable prettier/prettier */\r\nimport React from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport {\r\n  FaMinusCircle,\r\n  FaRegCheckCircle,\r\n  FaRegTimesCircle\r\n} from \"react-icons/fa\";\r\n\r\nconst answerStatus = {\r\n  True: 1,\r\n  False: 0,\r\n  NotAnswered: -1,\r\n};\r\n\r\nconst QTypeNumber = {\r\n  SingleBestAnswer: \"sba\",\r\n  Matrix: \"matrix\",\r\n};\r\n\r\nconst sbaStyle={\r\n  marginLeft: '2rem',\r\n  marginRight: '.6rem'\r\n}\r\n\r\nexport default function stem({qIndex, index, qType, answer, qStem, aStem,isUntouched }) {\r\n \r\n  return (\r\n    <div className=\"d-flex flex-nowrap\">\r\n      {qType === QTypeNumber.Matrix && (\r\n        <>\r\n          <div className=\"mr-2\">\r\n            {answer === answerStatus.True && (\r\n              <FaRegCheckCircle style={{ color: \"#3c763d\" }} size=\"1.4rem\" />\r\n            )}\r\n            {answer === answerStatus.False && (\r\n              <FaRegTimesCircle style={{ color: \"#a94442\" }} size=\"1.4rem\" />\r\n            )}\r\n            {answer === answerStatus.NotAnswered && (\r\n              <FaMinusCircle style={{ color: \"#777\" }} size=\"1.4rem\" />\r\n            )}\r\n          </div>\r\n          <div className=\"mr-2\">{qStem}</div>\r\n          {!isUntouched && <div>\r\n            <Form.Check\r\n              inline\r\n              disabled\r\n              label=\"true\"\r\n              type=\"radio\"\r\n              checked={\r\n                (answer !== answerStatus.NotAnswered) ?\r\n                answer === answerStatus.True ? aStem === \"1\" : aStem !== \"1\"\r\n                : false\r\n              }\r\n            />\r\n            <Form.Check\r\n              inline\r\n              disabled\r\n              label=\"False\"\r\n              type=\"radio\"\r\n              checked={\r\n                (answer !== answerStatus.NotAnswered)?\r\n                answer === answerStatus.True ? aStem === \"0\" : aStem !== \"0\"\r\n                : false\r\n              }\r\n            />\r\n\r\n          </div>}\r\n        </>\r\n      )}\r\n\r\n      {qType === QTypeNumber.SingleBestAnswer && (\r\n        <>\r\n\r\n          <div className=\"d-flex mr-2\">\r\n            <div className=\"\">\r\n              { answer[1] ?\r\n                  index + 1 === answer[1] ? \r\n                    answer[0] === answer[1] ?\r\n                      <FaRegCheckCircle style={{ color: \"#3c763d\", marginRight: sbaStyle.marginRight }} size=\"1.4rem\" />\r\n                      : <FaRegTimesCircle style={{ color: \"#a94442\", marginRight: sbaStyle.marginRight }} size=\"1.4rem\" />\r\n                  : index + 1 === answer[0] ?\r\n                      <FaRegCheckCircle style={{ color: \"#3c763d\", marginRight: sbaStyle.marginRight }} size=\"1.4rem\" />\r\n                      : <div style={{width: '2rem'}}></div>\r\n\r\n                : index + 1 === answer[0] ?\r\n                    <FaRegCheckCircle style={{ color: \"#3c763d\", marginRight: sbaStyle.marginRight }} size=\"1.4rem\" />\r\n                    : <div style={{width: '2rem'}}></div>\r\n              }\r\n            </div>\r\n            <div className=\"\">\r\n              {\r\n                answer[1] ?\r\n                  index +1 === answer[1] ?\r\n                    <Form.Check\r\n                    inline\r\n                    disabled\r\n                    type=\"radio\"\r\n                    name={qIndex}\r\n                    checked={true}\r\n                    />\r\n                    : <Form.Check\r\n                    inline\r\n                    disabled\r\n                    type=\"radio\"\r\n                    name={qIndex}\r\n                    checked={false}\r\n                    />\r\n                  : <Form.Check\r\n                  inline\r\n                  disabled\r\n                  type=\"radio\"\r\n                  name={qIndex}\r\n                  checked={false}\r\n                  />\r\n              }\r\n            </div>\r\n          </div>\r\n\r\n\r\n          {/* <div className=\"mr-2\">\r\n            {!answer[1] && (index + 1 === answer[0] ? (\r\n              <div className=\"d-flex\">\r\n                <FaRegCheckCircle style={{ color: \"#3c763d\", marginRight: sbaStyle.marginRight }} size=\"1.4rem\" />\r\n                <Form.Check\r\n                inline\r\n                disabled\r\n                type=\"radio\"\r\n                name={qIndex}\r\n                checked={false}\r\n                />\r\n              </div>\r\n            )\r\n          : (\r\n            <>\r\n              <Form.Check\r\n              inline\r\n              disabled\r\n              style={{marginLeft: sbaStyle.marginLeft}}\r\n              type=\"radio\"\r\n              name={qIndex}\r\n              checked={false}\r\n              />\r\n            </>)\r\n            )\r\n          \r\n          }\r\n            {answer[1] && ( (index + 1 === answer[1] ) ? \r\n                answer[0] === answer[1] ? (\r\n                  <div className=\"d-flex\">\r\n                    <FaCheckCircle\r\n                      style={{ color: \"#3c763d\", marginRight: sbaStyle.marginRight }}\r\n                      size=\"1.4rem\"\r\n                    />\r\n                    <Form.Check\r\n                      inline\r\n                      disabled\r\n                      type=\"radio\"\r\n                      name={qIndex}\r\n                      checked={true}\r\n                      />\r\n                    </div>\r\n                  )\r\n              : (\r\n                <div className=\"d-flex\">\r\n                  <FaRegTimesCircle style={{ color: \"#a94442\", marginRight: sbaStyle.marginRight }} size=\"1.4rem\" />\r\n                  <Form.Check\r\n                    inline\r\n                    disabled\r\n                    type=\"radio\"\r\n                    name={qIndex}\r\n                    checked={true}\r\n                    />\r\n                </div>\r\n                )\r\n              :   ( index + 1 === answer[0]  ? (\r\n                <div className=\"d-flex\">\r\n                  <FaCheckCircle\r\n                    style={{ color: \"#3c763d\", marginRight: sbaStyle.marginRight }}\r\n                    size=\"1.4rem\"\r\n                  />\r\n                  <Form.Check\r\n                    inline\r\n                    disabled\r\n                    type=\"radio\"\r\n                    name={qIndex}\r\n                    checked={false}\r\n                    />\r\n                </div>\r\n              ) \r\n                  :  <Form.Check\r\n                  inline\r\n                  disabled\r\n                  style={{marginLeft: sbaStyle.marginLeft}}\r\n                  type=\"radio\"\r\n                  name={qIndex}\r\n                  checked={false}\r\n                  />             \r\n              )\r\n            )            \r\n            }\r\n          </div> */}\r\n          <div className=\"\">{qStem}</div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Badge, ListGroup } from 'react-bootstrap'\r\n\r\nexport default function GetFeedbacks({ examId }) {\r\n  const [feedbacks, setFeedbacks] = useState([])\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(process.env.REACT_APP_SITE_URL + '/exams/feedback/' + examId)\r\n      .then((response) => {\r\n        setFeedbacks(response.data)\r\n      })\r\n      .catch((e) => {\r\n        console.log(e)\r\n      })\r\n  }, [examId])\r\n\r\n  return (\r\n    <div>\r\n      <h3>Review</h3>\r\n      <ListGroup as='ul'>\r\n        {feedbacks.map((feedback) => (\r\n          <ListGroup.Item as='li'>\r\n            <p className='lead'>\r\n              <span className='ml-2'>{feedback.name}</span>\r\n              <span className='ml-2'>reviewd as </span>\r\n              <Badge variant='info'>\r\n                {getFeedbackStatus(feedback.feedbackStatus)}\r\n              </Badge>\r\n            </p>\r\n            <p>{feedback.message}</p>\r\n          </ListGroup.Item>\r\n        ))}\r\n      </ListGroup>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction getFeedbackStatus(status) {\r\n  switch (status) {\r\n    case 1:\r\n      return 'Below Average'\r\n    case 2:\r\n      return 'Average'\r\n    case 4:\r\n      return 'Best'\r\n\r\n    default:\r\n      return 'Good'\r\n  }\r\n}\r\n","import axios from 'axios'\r\nimport { Formik } from 'formik'\r\nimport React, { useState } from 'react'\r\nimport { Button, Col, Form, Row } from 'react-bootstrap'\r\nimport { FaLaughBeam, FaRegMeh, FaRegSadCry, FaRegSmile } from 'react-icons/fa'\r\nimport { useSelector } from 'react-redux'\r\nimport validator from 'validator'\r\nimport GetFeedbacks from './getFeedbacks'\r\n\r\nconst validate = (values) => {\r\n  const errors = {}\r\n  if (!values.email) {\r\n    errors.email = 'Required'\r\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\r\n    errors.email = 'Invalid email address'\r\n  }\r\n\r\n  if (!values.name) {\r\n    errors.name = 'Required'\r\n  } else if (!validator.isLength(values.name, { min: 3, max: 30 })) {\r\n    errors.name = 'Name should be within 3 to 30 characters'\r\n  }\r\n  if (!validator.isLength(values.message, { min: 5, max: 255 })) {\r\n    errors.message = 'Message should be within 5 to 255 characters'\r\n  }\r\n  return errors\r\n}\r\nconst submit = (values, examId, setRes, { setSubmitting }) => {\r\n  axios\r\n    .post(process.env.REACT_APP_SITE_URL + '/exams/feedback', {\r\n      ...values,\r\n      examId\r\n    })\r\n    .then((response) => {\r\n      setRes(response.data)\r\n    })\r\n    .catch((e) => {\r\n      console.log(e)\r\n    })\r\n}\r\n\r\nexport default function Feedback({ examId }) {\r\n  const [res, setRes] = useState(null)\r\n  const user = useSelector((state) => state.user)\r\n  const initialValues = {\r\n    name: user.firstName,\r\n    email: user.email,\r\n    feedbackStatus: '3',\r\n    message: ''\r\n  }\r\n\r\n  return (\r\n    <Row className='mt-5'>\r\n      <Col lg={4} md={5} sm={6}>\r\n        {res ? (\r\n          <h3 className='text-success'>Thank You for submitting a feedback.</h3>\r\n        ) : (\r\n          <>\r\n            <h3>Please give us a feedback.</h3>\r\n            <hr />\r\n            <Formik\r\n              enableReinitialize\r\n              initialValues={initialValues}\r\n              validate={validate}\r\n              onSubmit={(values, { setSubmitting }) => {\r\n                submit(values, examId, setRes, { setSubmitting })\r\n              }}\r\n            >\r\n              {({\r\n                values,\r\n                errors,\r\n                touched,\r\n                handleChange,\r\n                handleSubmit\r\n                /* and other goodies */\r\n              }) => (\r\n                <Form onSubmit={handleSubmit}>\r\n                  <Form.Group controlId='formBasicName'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n                      type='text'\r\n                      name='name'\r\n                      placeholder='Enter name'\r\n                      onChange={handleChange}\r\n                      value={values.name}\r\n                    />\r\n                    <Form.Text as='span' className='text-danger'>\r\n                      {errors.name && touched.name && errors.name}\r\n                    </Form.Text>\r\n                  </Form.Group>\r\n                  <Form.Group controlId='formBasicEmail'>\r\n                    <Form.Label>Email address</Form.Label>\r\n                    <Form.Control\r\n                      type='email'\r\n                      name='email'\r\n                      placeholder='Enter email'\r\n                      onChange={handleChange}\r\n                      value={values.email}\r\n                    />\r\n                    <Form.Text className='text-muted'>\r\n                      We'll never share your email with anyone else.\r\n                    </Form.Text>\r\n                    <Form.Text as='span' className='text-danger'>\r\n                      {errors.email && touched.email && errors.email}\r\n                    </Form.Text>\r\n                  </Form.Group>\r\n                  <p classname='lead'>Rating</p>\r\n                  <Form.Group\r\n                    controlId='formGroupFeedback'\r\n                    className='d-flex mb-4'\r\n                  >\r\n                    <Form.Check type='radio' className='mr-2'>\r\n                      <Form.Check.Input\r\n                        type='radio'\r\n                        name='feedbackStatus'\r\n                        isValid\r\n                        value='1'\r\n                        onChange={handleChange}\r\n                      />\r\n                      <Form.Check.Label className='text-danger'>\r\n                        <FaRegSadCry />\r\n                        <span className='ml-1'>Below average</span>\r\n                      </Form.Check.Label>\r\n                    </Form.Check>\r\n                    <Form.Check type='radio' className='mr-2'>\r\n                      <Form.Check.Input\r\n                        type='radio'\r\n                        name='feedbackStatus'\r\n                        value='2'\r\n                        isValid\r\n                        onChange={handleChange}\r\n                      />\r\n                      <Form.Check.Label className='text-warning'>\r\n                        <FaRegMeh />\r\n                        <span className='ml-1'>Average</span>\r\n                      </Form.Check.Label>\r\n                    </Form.Check>\r\n                    <Form.Check type='radio' className='mr-2'>\r\n                      <Form.Check.Input\r\n                        type='radio'\r\n                        name='feedbackStatus'\r\n                        value='3'\r\n                        isValid\r\n                        defaultChecked\r\n                        onChange={handleChange}\r\n                      />\r\n                      <Form.Check.Label>\r\n                        <FaRegSmile />\r\n                        <span className='ml-1'>Good</span>\r\n                      </Form.Check.Label>\r\n                    </Form.Check>\r\n                    <Form.Check type='radio' className='mr-2'>\r\n                      <Form.Check.Input\r\n                        type='radio'\r\n                        name='feedbackStatus'\r\n                        value='4'\r\n                        isValid\r\n                        onChange={handleChange}\r\n                      />\r\n                      <Form.Check.Label>\r\n                        <FaLaughBeam />\r\n                        <span className='ml-1'>Best</span>\r\n                      </Form.Check.Label>\r\n                    </Form.Check>\r\n                    <Form.Text as='span' className='text-danger'>\r\n                      {errors.feedbackStatus &&\r\n                        touched.feedbackStatus &&\r\n                        errors.feedbackStatus}\r\n                    </Form.Text>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group controlId='formBasicFeedback'>\r\n                    <Form.Label>Message</Form.Label>\r\n                    <Form.Control\r\n                      as='textarea'\r\n                      name='message'\r\n                      rows={3}\r\n                      placeholder='Write a feedback message for this exam'\r\n                      onChange={handleChange}\r\n                      value={values.message}\r\n                    />\r\n                    <Form.Text as='span' className='text-danger'>\r\n                      {errors.message && touched.message && errors.message}\r\n                    </Form.Text>\r\n                  </Form.Group>\r\n\r\n                  <Button variant='primary' type='submit'>\r\n                    Submit\r\n                  </Button>\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n          </>\r\n        )}\r\n      </Col>\r\n      <Col lg={8} md={7} sm={6}>\r\n        <GetFeedbacks examId={examId} />\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n","/* eslint-disable react/prop-types */\r\nimport moment from 'moment'\r\nimport React, { Component } from 'react'\r\nimport { Alert, Badge, Card, Image, ListGroup } from 'react-bootstrap'\r\nimport { FaMinusCircle } from 'react-icons/fa'\r\nimport { FormattedMessage, injectIntl } from 'react-intl'\r\nimport { connect } from 'react-redux'\r\nimport SubNavBar from '../../components/navbar/subNavBar'\r\nimport Gist from '../../components/result/gist'\r\nimport QuestionResultStem from '../../components/result/stem'\r\nimport Feedback from './feedback'\r\nconst QType = {\r\n  SingleBestAnswer: 'sba',\r\n  Matrix: 'matrix'\r\n}\r\n\r\nclass Result extends Component {\r\n  render() {\r\n    const {\r\n      examId,\r\n      examResult,\r\n      totalMark,\r\n      totalScore,\r\n      totalPenaltyMark,\r\n      totalScorePercentage,\r\n      // eslint-disable-next-line no-unused-vars\r\n      timeTakenToComplete,\r\n      error\r\n    } = this.props.exams\r\n    console.log(examId)\r\n    return (\r\n      <div>\r\n        {error && (\r\n          <>\r\n            <Alert variant={'danger'} className='m-5 text-center'>\r\n              {error}\r\n            </Alert>\r\n            <SubNavBar />\r\n          </>\r\n        )}\r\n        {examResult && (\r\n          <div className='mb-5'>\r\n            <Card className='mt-3'>\r\n              <Card.Header as='h5' className='text-center'>\r\n                <FormattedMessage id='result' defaultMessage='Result' />\r\n              </Card.Header>\r\n              <Card.Body className='d-flex justify-content-center'>\r\n                <Gist\r\n                  title='Score'\r\n                  bgColor='bg-warning'\r\n                  value={\r\n                    totalScore.toFixed(2) + ' Out of ' + totalMark.toFixed(2)\r\n                  }\r\n                />\r\n                <Gist\r\n                  title='Time'\r\n                  bgColor='bg-info'\r\n                  value={moment\r\n                    .duration(timeTakenToComplete, 'minute')\r\n                    .humanize()}\r\n                />\r\n                <Gist\r\n                  title='Percentage'\r\n                  bgColor='bg-primary'\r\n                  value={totalScorePercentage.toFixed(2) + ' %'}\r\n                />\r\n                <Gist\r\n                  title='Penalty Mark'\r\n                  bgColor='bg-secondary'\r\n                  value={totalPenaltyMark.toFixed(2)}\r\n                />\r\n              </Card.Body>\r\n            </Card>\r\n\r\n            <Card className='mt-3'>\r\n              <Card.Header as='h5' className='text-center'>\r\n                <FormattedMessage id='detail' defaultMessage='Detail' />\r\n              </Card.Header>\r\n              <Card.Body>\r\n                {examResult.map((item, index) => (\r\n                  <ListGroup key={index} variant='flush' className='mb-4'>\r\n                    <ListGroup.Item>\r\n                      {item.result.stemResult[0] === QType.Matrix &&\r\n                        item.result.stemResult.length === 1 && (\r\n                          <FaMinusCircle\r\n                            className='mr-2'\r\n                            style={{ color: '#777' }}\r\n                            size='1.4rem'\r\n                          />\r\n                        )}\r\n                      {item.result.stemResult[0] === QType.SingleBestAnswer &&\r\n                        item.result.stemResult.length === 2 && (\r\n                          <FaMinusCircle\r\n                            className='mr-2'\r\n                            style={{ color: '#777' }}\r\n                            size='1.4rem'\r\n                          />\r\n                        )}\r\n                      <span>{index + 1 + '. ' + item.qText}</span>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                      <div variant='flush' className='pl-3'>\r\n                        {item.stems.map((stem, ind) => {\r\n                          if (\r\n                            item.result.stemResult[0] === QType.SingleBestAnswer\r\n                          )\r\n                            return (\r\n                              <>\r\n                                <div className='mb-1'>\r\n                                  <QuestionResultStem\r\n                                    index={ind}\r\n                                    qType={item.result.stemResult[0]}\r\n                                    answer={[\r\n                                      item.result.stemResult[1],\r\n                                      item.result.stemResult[2]\r\n                                    ]}\r\n                                    qStem={`${ind + 1}. ${stem.qStem}`}\r\n                                  />\r\n                                </div>\r\n                                <div className='ml-3 mb-1'>\r\n                                  {stem.fbStem &&\r\n                                    this.props.intl.formatMessage({\r\n                                      id: 'explanation',\r\n                                      defaultMessage: 'Explanation is : '\r\n                                    }) +\r\n                                      ' ' +\r\n                                      stem.fbStem}\r\n                                </div>\r\n                              </>\r\n                            )\r\n                          else\r\n                            return (\r\n                              <>\r\n                                <div className='mb-1'>\r\n                                  <QuestionResultStem\r\n                                    qIndex={index}\r\n                                    index={ind}\r\n                                    qType={item.result.stemResult[0]}\r\n                                    answer={item.result.stemResult[ind + 1]}\r\n                                    qStem={`${ind + 1}. ${stem.qStem}`}\r\n                                    aStem={stem.aStem}\r\n                                    isUntouched={\r\n                                      item.result.stemResult.length === 1\r\n                                    }\r\n                                  />\r\n                                </div>\r\n\r\n                                <div\r\n                                  // className={\r\n                                  //   (item.result.stemResult[ind] === true\r\n                                  //     ? \"bg-success\"\r\n                                  //     : \"bg-danger\") + \" text-light ml-3\"\r\n                                  // }\r\n                                  className='mb-3'\r\n                                >\r\n                                  <Badge\r\n                                    variant='primary'\r\n                                    style={{ fontSize: '.8rem' }}\r\n                                  >\r\n                                    {' '}\r\n                                    This Statement is{' '}\r\n                                  </Badge>{' '}\r\n                                  {stem.aStem === '1' ? 'True' : 'False'}\r\n                                  <br />\r\n                                  {stem.fbStem && (\r\n                                    <>\r\n                                      <Badge\r\n                                        variant='info'\r\n                                        style={{ fontSize: '.8rem' }}\r\n                                      >\r\n                                        {this.props.intl.formatMessage({\r\n                                          id: 'explanation',\r\n                                          defaultMessage: 'Explanation is'\r\n                                        })}\r\n                                      </Badge>{' '}\r\n                                      <span>{' ' + stem.fbStem}</span>\r\n                                    </>\r\n                                  )}\r\n                                </div>\r\n                              </>\r\n                            )\r\n                        })}\r\n                      </div>\r\n                    </ListGroup.Item>\r\n                    {item.generalFeedback && (\r\n                      <ListGroup.Item className='ml-3 text-white bg-secondary'>\r\n                        <p>\r\n                          <Badge\r\n                            variant='secondary'\r\n                            style={{ fontSize: '.8rem' }}\r\n                          >\r\n                            {this.props.intl.formatMessage({\r\n                              id: 'gexplanation',\r\n                              defaultMessage: 'General explanation is : '\r\n                            })}\r\n                          </Badge>\r\n                          {' ' + item.generalFeedback.replace(/#L(.+)L#/, '')}\r\n                        </p>\r\n                        {item.generalFeedback.split(/#L(.+)L#/)[1] && (\r\n                          <Image\r\n                            src={item.generalFeedback.split(/#L(.+)L#/)[1]}\r\n                            width='350'\r\n                            height='300'\r\n                          />\r\n                        )}\r\n                      </ListGroup.Item>\r\n                    )}\r\n                  </ListGroup>\r\n                ))}\r\n              </Card.Body>\r\n            </Card>\r\n            <Feedback examId={examId} />\r\n          </div>\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    exams: state.exams\r\n    //   auth: state.auth,\r\n    //   category: state.category,\r\n    //   api: state.api,\r\n  }\r\n}\r\n\r\nexport default injectIntl(connect(mapStateToProps)(Result))\r\n"],"sourceRoot":""}