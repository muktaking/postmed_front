{"version":3,"sources":["../node_modules/react-bootstrap/esm/FormContext.js","../node_modules/react-bootstrap/esm/ListGroupItem.js","../node_modules/react-bootstrap/esm/Feedback.js","utils/paginate.js","../node_modules/react-bootstrap/esm/ListGroup.js","../node_modules/react-bootstrap/esm/FormCheckInput.js","../node_modules/react-bootstrap/esm/FormCheckLabel.js","../node_modules/react-bootstrap/esm/FormCheck.js","../node_modules/react-bootstrap/esm/PageItem.js","../node_modules/react-bootstrap/esm/Pagination.js","components/pagination/pagination.jsx","../node_modules/react-bootstrap/esm/FormControl.js","container/examBuilder/editExam.js","components/examBuilder/card/card.jsx","components/examBuilder/examSpec.jsx","components/examBuilder/filter.jsx","components/examBuilder/selectedQuestionsPreview.jsx","container/examBuilder/examBuilder.js","../node_modules/react-bootstrap/esm/FormGroup.js","../node_modules/react-bootstrap/esm/FormLabel.js","../node_modules/react-bootstrap/esm/FormText.js","../node_modules/react-bootstrap/esm/Switch.js","../node_modules/react-bootstrap/esm/Form.js"],"names":["FormContext","React","createContext","controlId","undefined","ListGroupItem","forwardRef","_ref","ref","bsPrefix","active","disabled","className","variant","action","as","eventKey","onClick","props","_objectWithoutPropertiesLoose","useBootstrapPrefix","handleClick","useCallback","event","preventDefault","stopPropagation","createElement","AbstractNavItem","_extends","makeEventKey","href","classNames","defaultProps","displayName","propTypes","type","PropTypes","string","isRequired","elementType","Feedback","_ref$as","Component","paginate","items","pageNumber","pageSize","startIndex","_","slice","take","value","ListGroup","horizontalVariant","_useUncontrolled","useUncontrolled","activeKey","horizontal","_useUncontrolled$as","controlledProps","AbstractNav","Item","FormCheckInput","id","bsCustomPrefix","isValid","isInvalid","isStatic","_useContext","useContext","custom","FormCheckLabel","htmlFor","FormCheck","inline","feedback","style","title","label","children","propCustom","innerFormContext","useMemo","hasLabel","input","Provider","Fragment","Input","Label","PageItem","activeLabel","SafeAnchor","createButton","name","defaultValue","_class","_temp","_React$Component","apply","this","arguments","_inheritsLoose","prototype","render","_this$props","First","Prev","Ellipsis","Next","Last","Pagination","size","decoratedBsPrefix","pagination","itemsCount","onPageHandler","currentPage","pageCount","Math","ceil","number","push","key","width","height","FormControl","classes","_classes","plaintext","readOnly","_classes2","_classes3","EditExam","editExamId","editExamHandleClose","useState","exam","setExam","useEffect","Axios","get","process","then","res","console","log","data","catch","e","show","onHide","Header","closeButton","Title","Body","editExam","Footer","card","header","headerBgColor","showHeader","Card","centeredStyle","position","top","left","transform","zIndex","ExamSpec","categories","courses","selectedQuestionIds","editExamSpec","hideMsg","setHideMsg","Date","startDate","setStartDate","endDate","setEndDate","dispatch","useDispatch","loading","useSelector","state","examPaper","successMsg","success","errorMsg","error","initialValues","toString","description","categoryType","categoryIds","courseType","courseIds","singleQuestionMark","questionStemLength","penaltyMark","timeLimit","Spinner","animation","role","validate","onSubmit","onSubmitHandler","enableReinitialize","errors","handleChange","handleSubmit","values","Alert","onClose","dismissible","questions","length","JSON","stringify","Form","Group","Control","placeholder","onChange","multiple","map","categorySlug","slug","replace","selected","date","showTimeSelect","minDate","dateFormat","Text","Button","onLoadingLoader","postExamProfile","alert","validator","isLength","min","max","isInt","isNumeric","filter","handleSwitch","qTypeState","Check","SelectedQuestionsPreview","selectedQuestions","selectedQuestionsHandler","question","index","qText","Badge","cursor","ExamPaper","handleShow","setState","handleClose","checkHandleChange","isChecked","target","checked","actionHandleChange","forEach","onGetQuestionByCategoryLoader","page","onFetchCategoryLoader","onFetchCoursesLoader","onGetQuestionLoader","preProps","editQuestions","q","quesByQType","ques","qType","checkedQuestionIds","Object","keys","isNaN","RoutesConfig","ExamBuilder","metaInfo","Modal","bottom","right","Row","Col","lg","category","connect","auth","api","fetchCategory","fetchCourseLoader","getQuestionLoader","getQuestionByCategoryLoader","FormGroup","context","FormLabel","column","srOnly","FormText","muted","Switch","validated","createWithBsPrefix"],"mappings":"6GAAA,WACIA,EADJ,OACkBC,EAAMC,cAAc,CACpCC,eAAWC,IAEEJ,O,iCCJf,gFAYIK,EAAgBJ,IAAMK,YAAW,SAAUC,EAAMC,GACnD,IAAIC,EAAWF,EAAKE,SAChBC,EAASH,EAAKG,OACdC,EAAWJ,EAAKI,SAChBC,EAAYL,EAAKK,UACjBC,EAAUN,EAAKM,QACfC,EAASP,EAAKO,OACdC,EAAKR,EAAKQ,GACVC,EAAWT,EAAKS,SAChBC,EAAUV,EAAKU,QACfC,EAAQC,YAA8BZ,EAAM,CAAC,WAAY,SAAU,WAAY,YAAa,UAAW,SAAU,KAAM,WAAY,YAEvIE,EAAWW,YAAmBX,EAAU,mBACxC,IAAIY,EAAcC,uBAAY,SAAUC,GACtC,GAAIZ,EAGF,OAFAY,EAAMC,sBACND,EAAME,kBAIJR,GAASA,EAAQM,KACpB,CAACZ,EAAUM,IACd,OAAOhB,IAAMyB,cAAcC,IAAiBC,YAAS,CACnDpB,IAAKA,GACJU,EAAO,CACRF,SAAUa,YAAab,EAAUE,EAAMY,MAEvCf,GAAIA,IAAOD,EAASI,EAAMY,KAAO,IAAM,SAAW,OAClDb,QAASI,EACTT,UAAWmB,IAAWnB,EAAWH,EAAUC,GAAU,SAAUC,GAAY,WAAYE,GAAWJ,EAAW,IAAMI,EAASC,GAAUL,EAAW,iBAGrJJ,EAAc2B,aArCK,CACjBnB,QAAS,KACTH,QAAQ,EACRC,UAAU,GAmCZN,EAAc4B,YAAc,gBACb5B,O,iCC9Cf,sEAKI6B,EAAY,CAMdC,KAAMC,IAAUC,OAAOC,WACvBvB,GAAIqB,IAAUG,aAKZC,EAAWvC,IAAMK,YACrB,SAAUC,EAAMC,GACd,IAAIiC,EAAUlC,EAAKQ,GACf2B,OAAwB,IAAZD,EAAqB,MAAQA,EACzC7B,EAAYL,EAAKK,UACjBuB,EAAO5B,EAAK4B,KACZjB,EAAQC,YAA8BZ,EAAM,CAAC,KAAM,YAAa,SAEpE,OAAON,IAAMyB,cAAcgB,EAAWd,YAAS,GAAIV,EAAO,CACxDV,IAAKA,EACLI,UAAWmB,IAAWnB,EAAWuB,GAAQA,EAAO,mBAGpDK,EAASP,YAAc,WACvBO,EAASN,UAAYA,EACrBM,EAASR,aAlBU,CACjBG,KAAM,SAkBOK,O,iCCjCf,wDAEO,SAASG,EAASC,EAAOC,EAAYC,GAC1C,IAAMC,GAAcF,EAAa,GAAKC,EACtC,OAAOE,IAAEJ,GAAOK,MAAMF,GAAYG,KAAKJ,GAAUK,U,iCCJnD,kGAaIC,EAAYnD,IAAMK,YAAW,SAAUY,EAAOV,GAChD,IAYI6C,EAZAC,EAAmBC,YAAgBrC,EAAO,CAC5CsC,UAAW,aAET5C,EAAY0C,EAAiB1C,UAC7BH,EAAW6C,EAAiB7C,SAC5BI,EAAUyC,EAAiBzC,QAC3B4C,EAAaH,EAAiBG,WAC9BC,EAAsBJ,EAAiBvC,GACvCA,OAA6B,IAAxB2C,EAAiC,MAAQA,EAC9CC,EAAkBxC,YAA8BmC,EAAkB,CAAC,YAAa,WAAY,UAAW,aAAc,OAYzH,OAVA7C,EAAWW,YAAmBX,EAAU,cAItC4C,EADEI,GACiC,IAAfA,EAAsB,aAAe,cAAgBA,EAErD,KAIfxD,IAAMyB,cAAckC,IAAahC,YAAS,CAC/CpB,IAAKA,GACJmD,EAAiB,CAClB5C,GAAIA,EACJH,UAAWmB,IAAWnB,EAAWH,EAAUI,GAAWJ,EAAW,IAAMI,EAASwC,GAAqB5C,EAAW,IAAM4C,SAG1HD,EAAUpB,aAjCS,CACjBnB,QAAS,KACT4C,WAAY,MAgCdL,EAAUnB,YAAc,YACxBmB,EAAUS,KAAOxD,IACF+C,O,0HCpCXU,EAAiB7D,IAAMK,YAAW,SAAUC,EAAMC,GACpD,IAAIuD,EAAKxD,EAAKwD,GACVtD,EAAWF,EAAKE,SAChBuD,EAAiBzD,EAAKyD,eACtBpD,EAAYL,EAAKK,UACjBqD,EAAU1D,EAAK0D,QACfC,EAAY3D,EAAK2D,UACjBC,EAAW5D,EAAK4D,SAChB1B,EAAUlC,EAAKQ,GACf2B,OAAwB,IAAZD,EAAqB,QAAUA,EAC3CvB,EAAQC,YAA8BZ,EAAM,CAAC,KAAM,WAAY,iBAAkB,YAAa,UAAW,YAAa,WAAY,OAElI6D,EAAcC,qBAAWrE,KACzBG,EAAYiE,EAAYjE,UAI5B,OADAM,EAFa2D,EAAYE,OAELlD,YAAmB4C,EAAgB,wBAA0B5C,YAAmBX,EAAU,oBACvGR,IAAMyB,cAAcgB,EAAWd,YAAS,GAAIV,EAAO,CACxDV,IAAKA,EACLuD,GAAIA,GAAM5D,EACVS,UAAWmB,IAAWnB,EAAWH,EAAUwD,GAAW,WAAYC,GAAa,aAAcC,GAAY,yBAG7GL,EAAe7B,YAAc,iBAC7B6B,EAAe9B,aA3BI,CACjBG,KAAM,YA2BO2B,QC5BXS,EAAiBtE,IAAMK,YAAW,SAAUC,EAAMC,GACpD,IAAIC,EAAWF,EAAKE,SAChBuD,EAAiBzD,EAAKyD,eACtBpD,EAAYL,EAAKK,UACjB4D,EAAUjE,EAAKiE,QACftD,EAAQC,YAA8BZ,EAAM,CAAC,WAAY,iBAAkB,YAAa,YAExF6D,EAAcC,qBAAWrE,KACzBG,EAAYiE,EAAYjE,UAI5B,OADAM,EAFa2D,EAAYE,OAELlD,YAAmB4C,EAAgB,wBAA0B5C,YAAmBX,EAAU,oBACvGR,IAAMyB,cAAc,QAASE,YAAS,GAAIV,EAAO,CACtDV,IAAKA,EACLgE,QAASA,GAAWrE,EACpBS,UAAWmB,IAAWnB,EAAWH,SAGrC8D,EAAetC,YAAc,iBACdsC,QCPXE,EAAYxE,IAAMK,YAAW,SAAUC,EAAMC,GAC/C,IAAIuD,EAAKxD,EAAKwD,GACVtD,EAAWF,EAAKE,SAChBuD,EAAiBzD,EAAKyD,eACtBU,EAASnE,EAAKmE,OACd/D,EAAWJ,EAAKI,SAChBsD,EAAU1D,EAAK0D,QACfC,EAAY3D,EAAK2D,UACjBS,EAAWpE,EAAKoE,SAChB/D,EAAYL,EAAKK,UACjBgE,EAAQrE,EAAKqE,MACbC,EAAQtE,EAAKsE,MACb1C,EAAO5B,EAAK4B,KACZ2C,EAAQvE,EAAKuE,MACbC,EAAWxE,EAAKwE,SAChBC,EAAazE,EAAK+D,OAClB7B,EAAUlC,EAAKQ,GACfA,OAAiB,IAAZ0B,EAAqB,QAAUA,EACpCvB,EAAQC,YAA8BZ,EAAM,CAAC,KAAM,WAAY,iBAAkB,SAAU,WAAY,UAAW,YAAa,WAAY,YAAa,QAAS,QAAS,OAAQ,QAAS,WAAY,SAAU,OAEjN+D,EAAkB,WAATnC,GAA2B6C,EACxCvE,EAAW6D,EAASlD,YAAmB4C,EAAgB,kBAAoB5C,YAAmBX,EAAU,cAExG,IACIN,EADckE,qBAAWrE,KACDG,UAExB8E,EAAmBC,mBAAQ,WAC7B,MAAO,CACL/E,UAAW4D,GAAM5D,EACjBmE,OAAQA,KAET,CAACnE,EAAWmE,EAAQP,IACnBoB,EAAoB,MAATL,IAA2B,IAAVA,IAAoBC,EAChDK,EAAQnF,IAAMyB,cAAcoC,EAAgBlC,YAAS,GAAIV,EAAO,CAClEiB,KAAe,WAATA,EAAoB,WAAaA,EACvC3B,IAAKA,EACLyD,QAASA,EACTC,UAAWA,EACXC,UAAWgB,EACXxE,SAAUA,EACVI,GAAIA,KAEN,OAAOd,IAAMyB,cAAc1B,IAAYqF,SAAU,CAC/ClC,MAAO8B,GACNhF,IAAMyB,cAAc,MAAO,CAC5BkD,MAAOA,EACPhE,UAAWmB,IAAWnB,EAAWH,EAAU6D,GAAU,UAAYnC,EAAMuC,GAAUjE,EAAW,YAC3FsE,GAAY9E,IAAMyB,cAAczB,IAAMqF,SAAU,KAAMF,EAAOD,GAAYlF,IAAMyB,cAAc6C,EAAgB,CAC9GM,MAAOA,GACNC,IAASb,GAAWC,IAAcjE,IAAMyB,cAAcc,IAAU,CACjEL,KAAM8B,EAAU,QAAU,WACzBU,SAELF,EAAUxC,YAAc,YACxBwC,EAAUzC,aA9DS,CACjBG,KAAM,WACNuC,QAAQ,EACR/D,UAAU,EACVsD,SAAS,EACTC,WAAW,EACXW,MAAO,IAyDTJ,EAAUc,MAAQzB,EAClBW,EAAUe,MAAQjB,EACHE,O,gHC9DXgB,EAAWxF,IAAMK,YAAW,SAAUC,EAAMC,GAC9C,IAAIE,EAASH,EAAKG,OACdC,EAAWJ,EAAKI,SAChBC,EAAYL,EAAKK,UACjBgE,EAAQrE,EAAKqE,MACbc,EAAcnF,EAAKmF,YACnBX,EAAWxE,EAAKwE,SAChB7D,EAAQC,YAA8BZ,EAAM,CAAC,SAAU,WAAY,YAAa,QAAS,cAAe,aAExGmC,EAAYhC,GAAUC,EAAW,OAASgF,IAC9C,OAAO1F,IAAMyB,cAAc,KAAM,CAC/BlB,IAAKA,EACLoE,MAAOA,EACPhE,UAAWmB,IAAWnB,EAAW,YAAa,CAC5CF,OAAQA,EACRC,SAAUA,KAEXV,IAAMyB,cAAcgB,EAAWd,YAAS,CACzChB,UAAW,YACXD,SAAUA,GACTO,GAAQ6D,EAAUrE,GAAUgF,GAAezF,IAAMyB,cAAc,OAAQ,CACxEd,UAAW,WACV8E,QAELD,EAASzD,aA7BU,CACjBtB,QAAQ,EACRC,UAAU,EACV+E,YAAa,aA2BfD,EAASxD,YAAc,WACRwD,QAEf,SAASG,EAAaC,EAAMC,EAAchB,GACxC,IAAIiB,EAAQC,EAMZ,YAJc,IAAVlB,IACFA,EAAQe,GAGHG,EAAQD,EAEf,SAAUE,GAGR,SAASF,IACP,OAAOE,EAAiBC,MAAMC,KAAMC,YAAcD,KAkBpD,OArBAE,YAAeN,EAAQE,GAMVF,EAAOO,UAEbC,OAAS,WACd,IAAIC,EAAcL,KAAKjF,MACnB6D,EAAWyB,EAAYzB,SACvB7D,EAAQC,YAA8BqF,EAAa,CAAC,aAGxD,cADOtF,EAAMR,OACNT,IAAMyB,cAAc+D,EAAUvE,EAAOjB,IAAMyB,cAAc,OAAQ,CACtE,cAAe,QACdqD,GAAYe,GAAe7F,IAAMyB,cAAc,OAAQ,CACxDd,UAAW,WACVkE,KAGEiB,EAtBT,CAuBE9F,IAAMyC,WAAYqD,EAAO9D,YAAc4D,EAAMG,EAG1C,IAAIS,EAAQb,EAAa,QAAS,QAC9Bc,EAAOd,EAAa,OAAQ,SAAK,YACjCe,EAAWf,EAAa,WAAY,SAAK,QACzCgB,EAAOhB,EAAa,OAAQ,UAC5BiB,EAAOjB,EAAa,OAAQ,QCjEnCkB,EAAa7G,IAAMK,YAAW,SAAUC,EAAMC,GAChD,IAAIC,EAAWF,EAAKE,SAChBG,EAAYL,EAAKK,UACjBmE,EAAWxE,EAAKwE,SAChBgC,EAAOxG,EAAKwG,KACZ7F,EAAQC,YAA8BZ,EAAM,CAAC,WAAY,YAAa,WAAY,SAElFyG,EAAoB5F,YAAmBX,EAAU,cACrD,OAAOR,IAAMyB,cAAc,KAAME,YAAS,CACxCpB,IAAKA,GACJU,EAAO,CACRN,UAAWmB,IAAWnB,EAAWoG,EAAmBD,GAAQC,EAAoB,IAAMD,KACpFhC,MAEN+B,EAAWL,MAAQA,EACnBK,EAAWJ,KAAOA,EAClBI,EAAWH,SAAWA,EACtBG,EAAWjD,KAAO4B,EAClBqB,EAAWF,KAAOA,EAClBE,EAAWD,KAAOA,EACHC,QCNAG,IA1BI,SAAC,GAA0D,IAAxDC,EAAuD,EAAvDA,WAAYpE,EAA2C,EAA3CA,SAAUqE,EAAiC,EAAjCA,cAAeC,EAAkB,EAAlBA,YACnDC,EAAYC,KAAKC,KAAKL,EAAapE,GACzC,GAAkB,IAAduE,EAAiB,OAAO,KAE5B,IADA,IAAMzE,EAAQ,GAH6D,WAIlE4E,GACP5E,EAAM6E,KACJ,kBAAC,EAAW5D,KAAZ,CACE6D,IAAKF,EACLvG,QAAS,WACPkG,EAAcK,IAEhB9G,OAAQ8G,IAAWJ,EACnBxG,UAAU,wBACVgE,MAAO,CAAE+C,MAAO,OAAQC,OAAQ,SAE/BJ,KAXEA,EAAS,EAAGA,GAAUH,EAAWG,IAAW,EAA5CA,GAeT,OACE,kBAAC,EAAD,CAAY5G,UAAU,uDACnBgC,K,iCCxBP,yFAQIiF,EAAc5H,IAAMK,YAAW,SAAUC,EAAMC,GACjD,IAiBIsH,EAGEC,EApBFtH,EAAWF,EAAKE,SAChB0B,EAAO5B,EAAK4B,KACZ4E,EAAOxG,EAAKwG,KACZhD,EAAKxD,EAAKwD,GACVnD,EAAYL,EAAKK,UACjBqD,EAAU1D,EAAK0D,QACfC,EAAY3D,EAAK2D,UACjB8D,EAAYzH,EAAKyH,UACjBC,EAAW1H,EAAK0H,SAChBxF,EAAUlC,EAAKQ,GACf2B,OAAwB,IAAZD,EAAqB,QAAUA,EAC3CvB,EAAQC,YAA8BZ,EAAM,CAAC,WAAY,OAAQ,OAAQ,KAAM,YAAa,UAAW,YAAa,YAAa,WAAY,OAG7IJ,EADckE,qBAAWrE,KACDG,UAK5B,GAHAM,EAAWW,YAAmBX,EAAU,gBAGpCuH,GAGSD,EAAW,IAAatH,EAAW,eAAgB,EAA9DqH,EAAoEC,OAC/D,GAAa,SAAT5F,EAAiB,CAC1B,IAAI+F,GAEOA,EAAY,IAAczH,EAAW,UAAW,EAA3DqH,EAAiEI,MAC5D,CACL,IAAIC,GAEOA,EAAY,IAAc1H,IAAY,EAAM0H,EAAU1H,EAAW,IAAMsG,GAAQA,EAA1Fe,EAAgGK,EAIlG,OAAOlI,IAAMyB,cAAcgB,EAAWd,YAAS,GAAIV,EAAO,CACxDiB,KAAMA,EACN3B,IAAKA,EACLyH,SAAUA,EACVlE,GAAIA,GAAM5D,EACVS,UAAWmB,IAAWnB,EAAWkH,EAAS7D,GAAW,WAAYC,GAAa,oBAGlF2D,EAAY5F,YAAc,cAC1B4F,EAAYrF,SAAWA,IACRqF,O,yJChDA,SAASO,EAAT,GAAwD,IAApCC,EAAmC,EAAnCA,WAAYC,EAAuB,EAAvBA,oBAAuB,EAC5CC,mBAAS,MADmC,mBAC7DC,EAD6D,KACvDC,EADuD,KAUpE,OARAC,qBAAU,WACRC,IAAMC,IAAN,UAAaC,iCAAb,kBAAqDR,IAClDS,MAAK,SAACC,GACLC,QAAQC,IAAIF,EAAIG,MAChBT,EAAQM,EAAIG,SAEbC,OAAM,SAACC,GAAD,OAAOJ,QAAQC,IAAIG,QAC3B,IAED,6BACE,kBAAC,IAAD,CAAOC,KAAMhB,EAAYiB,OAAQhB,EAAqBvB,KAAK,MACzD,kBAAC,IAAMwC,OAAP,CAAcC,aAAW,GACvB,kBAAC,IAAMC,MAAP,uBAEF,kBAAC,IAAMC,KAAP,KACE,kBAAC,UAAD,CAAaC,SAAUnB,KAEzB,kBAAC,IAAMoB,OAAP,KACE,kBAAC,IAAD,CAAQ/I,QAAQ,YAAYI,QAASqH,GAArC,SAGA,kBAAC,IAAD,CAAQzH,QAAQ,UAAUI,QAASqH,GAAnC,qB,uSCVKuB,EAfF,SAAC,GAAqD,IAAnDC,EAAkD,EAAlDA,OAAQ/E,EAA0C,EAA1CA,SAAUgF,EAAgC,EAAhCA,cAAeC,EAAiB,EAAjBA,WAC/C,OACE,kBAACC,EAAA,EAAD,CAAMrJ,UAAU,QACboJ,GACC,kBAACC,EAAA,EAAKV,OAAN,CACE3I,UAAW,mCAAqCmJ,GAE/CD,GAGL,kBAACG,EAAA,EAAKP,KAAN,KAAY3E,KCDZmF,EAAgB,CAEpBC,SAAU,QACVC,IAAK,MACLC,KAAM,MAENC,UAAW,wBACXC,OAAQ,QA+QKC,EA5QE,SAAC,GAKX,IAJLC,EAII,EAJJA,WACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,oBACAC,EACI,EADJA,aACI,EAC0BrC,oBAAS,GADnC,mBACGsC,EADH,KACYC,EADZ,OAE8BvC,mBAAS,IAAIwC,MAF3C,mBAEGC,EAFH,KAEcC,EAFd,OAG0B1C,mBAAS,IAAIwC,MAHvC,mBAGGG,EAHH,KAGYC,EAHZ,KAIEC,EAAWC,cACXC,EAAUC,aAAY,SAACC,GAAD,OAAWA,EAAMC,UAAUH,WACjDI,EAAaH,aAAY,SAACC,GAAD,OAAWA,EAAMC,UAAUE,WACpDC,EAAWL,aAAY,SAACC,GAAD,OAAWA,EAAMC,UAAUI,SAClDC,EAAgB,CACpBjH,MAAO+F,EAAeA,EAAa/F,MAAQ,GAC3C1C,KAAMyI,EAAeA,EAAazI,KAAK4J,WAAa,IACpDC,YAAapB,EAAeA,EAAaoB,YAAc,GACvDC,aAAcrB,EAAeA,EAAasB,YAAc,GACxDC,WAAYvB,EAAeA,EAAawB,UAAY,GACpDC,mBAAoBzB,EAChBA,EAAayB,mBAAmBN,WAChC,IACJO,mBAAoB1B,EAChBA,EAAa0B,mBAAmBP,WAChC,IACJQ,YAAa3B,EAAeA,EAAa2B,YAAYR,WAAa,IAClES,UAAW5B,EAAeA,EAAa4B,UAAUT,WAAa,MAUhE,OAPArD,qBAAU,WACJkC,IACFK,EAAa,IAAIF,KAAKH,EAAaI,YACnCG,EAAW,IAAIJ,KAAKH,EAAaM,aAElC,CAACN,IAGF,oCACGU,GACC,kBAACmB,EAAA,EAAD,CACEC,UAAU,SACVC,KAAK,SACL9L,QAAQ,OACRD,UAAU,mBAGd,kBAAC,IAAD,CACEkL,cAAeA,EACfc,SAAUA,EACVC,SAAUC,EACR9B,EACAE,EACAP,EACAS,EACAN,EACAF,GAAgBA,EAAa7G,IAE/BgJ,oBAAkB,IAEjB,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,aAAcC,EAAzB,EAAyBA,aAAcC,EAAvC,EAAuCA,OAAvC,OACC,kBAAC,EAAD,CAAUrD,OAAO,qBAAqBE,YAAY,GAC/Ca,GAAWa,GACV,kBAAC0B,EAAA,EAAD,CACEvM,QAAS,UACTD,UAAU,cACVgE,MAAOsF,EACPmD,QAAS,kBAAMvC,GAAW,IAC1BwC,aAAW,GAEV5B,EAAW7G,MACV,aACA6G,EAAWM,YACX,aACAN,EAAW6B,UAAUC,OACrB,cAGL3C,GAAWe,GACV,kBAACwB,EAAA,EAAD,CACEvM,QAAS,UACTD,UAAU,cACVgE,MAAOsF,EACPmD,QAAS,kBAAMvC,GAAW,IAC1BwC,aAAW,GAEVG,KAAKC,UAAU9B,IAGpB,kBAAC+B,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,MAAN,CAAYzN,UAAU,SACpB,kBAACwN,EAAA,EAAKnI,MAAN,cACA,kBAACmI,EAAA,EAAKE,QAAN,CACE1L,KAAK,OACL2L,YAAY,cACZjI,KAAK,QACLkI,SAAUd,EACV9J,MAAOgK,EAAOtI,SAGjBmI,EAAOnI,MACN,yBAAKjE,UAAU,sBAAsBoM,EAAOnI,OAC1C,KACJ,kBAAC8I,EAAA,EAAKC,MAAN,CAAYzN,UAAU,QACpB,kBAACwN,EAAA,EAAKnI,MAAN,kBACA,kBAACmI,EAAA,EAAKE,QAAN,CACE9M,GAAG,SACH8E,KAAK,OACL1C,MAAOgK,EAAOhL,KACd4L,SAAUd,GAEV,4BAAQ9J,MAAM,KAAd,cACA,4BAAQA,MAAM,KAAd,UACA,4BAAQA,MAAM,KAAd,WACA,4BAAQA,MAAM,KAAd,aACA,4BAAQA,MAAM,KAAd,QACA,4BAAQA,MAAM,KAAd,QACA,4BAAQA,MAAM,KAAd,WAGJ,kBAACwK,EAAA,EAAKC,MAAN,CAAYzN,UAAU,gBACpB,kBAACwN,EAAA,EAAKnI,MAAN,sBACA,kBAACmI,EAAA,EAAKE,QAAN,CACE9M,GAAG,SACHiN,UAAQ,EACRnI,KAAK,eACLkI,SAAUd,EACV9J,MAAOgK,EAAOlB,cALhB,4FAWGxB,EAAWwD,KAAI,SAAC9K,GAEf,IAAI+K,EAAe/K,EAAMgL,KAAKC,QAAQ,KAAM,OAC5C,GAAmB,kBAAfjL,EAAM0C,KACR,OAAO,4BAAQ1C,MAAOA,EAAMY,IAAKmK,QAKzC,kBAACP,EAAA,EAAKC,MAAN,CAAYzN,UAAU,cACpB,kBAACwN,EAAA,EAAKnI,MAAN,oBACA,kBAACmI,EAAA,EAAKE,QAAN,CACE9M,GAAG,SACHiN,UAAQ,EACRnI,KAAK,aACLkI,SAAUd,EACV9J,MAAOgK,EAAOhB,YALhB,4FAWGzB,EAAQuD,KAAI,SAAC9K,GAAD,OACX,4BAAQA,MAAOA,EAAMY,IAAKZ,EAAM0B,YAKtC,kBAAC8I,EAAA,EAAKC,MAAN,CAAYzN,UAAU,eACpB,kBAACwN,EAAA,EAAKnI,MAAN,oBACA,kBAACmI,EAAA,EAAKE,QAAN,CACE1L,KAAK,WACL2L,YAAY,cACZjI,KAAK,cACLkI,SAAUd,EACV9J,MAAOgK,EAAOnB,eAGjBgB,EAAOhB,YACN,yBAAKpL,UAAU,sBAAsBoM,EAAOhB,aAC1C,KACJ,6BACE,yBAAKpL,UAAU,QACb,yCACA,kBAAC,IAAD,CACEyN,SAAUrD,EACV+C,SAAU,SAACO,GAAD,OAAUrD,EAAaqD,IACjCC,gBAAc,EACdC,SAAU5D,GAAgB,IAAIG,KAC9B0D,WAAW,OAEb,kBAAC,IAAD,CAAkB1H,KAAK,YAEzB,yBAAKnG,UAAU,QACb,uCACA,kBAAC,IAAD,CACEyN,SAAUnD,EACV6C,SAAU,SAACO,GAAD,OAAUnD,EAAWmD,IAC/BC,gBAAc,EACdC,QAAS,IAAIzD,KACb0D,WAAW,OAEb,kBAAC,IAAD,CAAkB1H,KAAK,aAG3B,kBAAC4G,EAAA,EAAKC,MAAN,CAAYzN,UAAU,sBACpB,kBAACwN,EAAA,EAAKnI,MAAN,6BACA,kBAACmI,EAAA,EAAKE,QAAN,CACE1L,KAAK,OACL2L,YAAY,IACZjI,KAAK,qBACLkI,SAAUd,EACV9J,MAAOgK,EAAOd,qBAEhB,kBAACsB,EAAA,EAAKe,KAAN,CAAW9N,UAAU,cAArB,8DAIDoM,EAAOX,mBACN,yBAAKzL,UAAU,sBACZoM,EAAOX,oBAER,KACJ,kBAACsB,EAAA,EAAKC,MAAN,CAAYzN,UAAU,sBACpB,kBAACwN,EAAA,EAAKnI,MAAN,6BACA,kBAACmI,EAAA,EAAKE,QAAN,CACE1L,KAAK,OACL2L,YAAY,IACZjI,KAAK,qBACLkI,SAAUd,EACV9J,MAAOgK,EAAOb,sBAGjBU,EAAOV,mBACN,yBAAK1L,UAAU,sBACZoM,EAAOV,oBAER,KACJ,kBAACqB,EAAA,EAAKC,MAAN,CAAYzN,UAAU,eACpB,kBAACwN,EAAA,EAAKnI,MAAN,qBACA,kBAACmI,EAAA,EAAKE,QAAN,CACE1L,KAAK,OACL2L,YAAY,IACZjI,KAAK,cACLkI,SAAUd,EACV9J,MAAOgK,EAAOZ,cAEhB,kBAACoB,EAAA,EAAKe,KAAN,CAAW9N,UAAU,cAArB,0DAIDoM,EAAOT,YACN,yBAAK3L,UAAU,sBAAsBoM,EAAOT,aAC1C,KACJ,kBAACoB,EAAA,EAAKC,MAAN,CAAYzN,UAAU,aACpB,kBAACwN,EAAA,EAAKnI,MAAN,4BACA,kBAACmI,EAAA,EAAKE,QAAN,CACE1L,KAAK,OACL2L,YAAY,KACZjI,KAAK,YACL1C,MAAOgK,EAAOX,UACduB,SAAUd,KAGbD,EAAOR,UACN,yBAAK5L,UAAU,sBAAsBoM,EAAOR,WAC1C,MAEN,kBAACmC,EAAA,EAAD,CAAQ1N,QAASiM,GAAjB,gBAUZ,SAASJ,EACP9B,EACAE,EACAP,EACAS,EACAN,EACAzC,GAEA,OAAO,SAAC8E,GACFxC,EAAoB6C,OAAS,GAC/BL,EAAOnC,UAAYA,EACnBmC,EAAOjC,QAAUA,EACjBE,EAASwD,eACT9D,GAAW,GACXM,EAASyD,YAAgB1B,EAAQxC,EAAqBtC,KAEtDyG,MAAM,kCAKZ,IAAMlC,EAAW,SAACO,GAChB,IAAMH,EAAS,GA+Bf,OA9BKG,EAAOtI,MAEAkK,IAAUC,SAAS7B,EAAOtI,MAAO,CAAEoK,IAAK,EAAGC,IAAK,OAC1DlC,EAAOnI,MAAQ,2CAFfmI,EAAOnI,MAAQ,WAIZsI,EAAOnB,YAEA+C,IAAUC,SAAS7B,EAAOnB,YAAa,CAAEiD,IAAK,GAAIC,IAAK,QACjElC,EAAOhB,YAAc,mDAFrBgB,EAAOhB,YAAc,WAIlBmB,EAAOd,mBAEA0C,IAAUI,MAAMhC,EAAOd,sBACjCW,EAAOX,mBAAqB,gDAF5BW,EAAOX,mBAAqB,WAIzBc,EAAOb,mBAEAyC,IAAUK,UAAUjC,EAAOb,sBACrCU,EAAOV,mBAAqB,gDAF5BU,EAAOV,mBAAqB,WAIzBa,EAAOZ,YAEAwC,IAAUK,UAAUjC,EAAOZ,eACrCS,EAAOT,YAAc,wCAFrBS,EAAOT,YAAc,WAIlBY,EAAOX,UAEAuC,IAAUI,MAAMhC,EAAOX,aACjCQ,EAAOR,UAAY,2CAFnBQ,EAAOR,UAAY,WAIdQ,GC7SMqC,EAxCA,SAAC,GAA4D,IAA1DpC,EAAyD,EAAzDA,aAAcqC,EAA2C,EAA3CA,aAAc7E,EAA6B,EAA7BA,WAAY8E,EAAiB,EAAjBA,WACxD,OACE,kBAAC,EAAD,CAAUzF,OAAO,SAASE,YAAY,GACpC,kBAAC2D,EAAA,EAAKC,MAAN,CAAYzN,UAAU,kBACpB,kBAACwN,EAAA,EAAKnI,MAAN,iBACA,kBAACmI,EAAA,EAAKE,QAAN,CACE9M,GAAG,SACH+E,aAAa,MACbD,KAAK,aACLkI,SAAUd,GAEV,4BAAQtM,UAAQ,EAACwC,MAAM,OAAvB,UAGCsH,EAAWwD,KAAI,SAAC9K,GACf,IAAI+K,EAAe/K,EAAMgL,KAAKC,QAAQ,KAAM,OAC5C,OAAO,4BAAQjL,MAAOA,EAAMY,IAAKmK,QAIvC,kBAACP,EAAA,EAAK6B,MAAN,CACE3J,KAAK,UACL1D,KAAK,SACL4B,GAAG,kBACHe,MAAM,WACNiJ,SAAUuB,EACV3O,SAAyB,WAAf4O,IAEZ,kBAAC5B,EAAA,EAAK6B,MAAN,CACE3J,KAAK,aACL1D,KAAK,SACL4B,GAAG,qBACHe,MAAM,cACNiJ,SAAUuB,EACV3O,SAAyB,QAAf4O,MCLHE,EA5BkB,SAAC,GAG3B,IAFLC,EAEI,EAFJA,kBACAC,EACI,EADJA,yBAEA,OACE,kBAAC,EAAD,CAAU7F,OAAO,6BAA6BE,YAAY,GAEtD,kBAAC5G,EAAA,EAAD,CAAWxC,UAAU,QAClB8O,EAAkBzB,KAAI,SAAC2B,EAAUC,GAAX,OACrB,kBAACzM,EAAA,EAAUS,KAAX,CAAgB6D,IAAKmI,EAAOhP,QAAS,WAArC,UACMgP,EAAQ,EADd,aACoBD,EAAS/K,MAD7B,mBAC0C+K,EAASE,OACjD,kBAACC,EAAA,EAAD,CACElP,QAAQ,cACRI,QAAS,WACP0O,EAAyBC,EAAS7L,KAEpCa,MAAO,CAAEoL,OAAQ,YAEjB,kBAAC,KAAD,c,4DCKVC,E,2MACJzE,MAAQ,CACNnC,MAAM,EACNqG,kBAAmB,GACnB5M,SAAU,GACVsE,YAAa,EACbmI,WAAY,O,EAuCdW,WAAa,WAEX,EAAKC,SAAS,CAAE9G,MAAM,K,EAExB+G,YAAc,WAEZ,EAAKD,SAAS,CAAE9G,MAAM,K,EAGxBgH,kBAAoB,SAACjH,EAAGwG,GACtB,IAAMU,EAAYlH,EAAEmH,OAAOC,QACrBrN,EAAQiG,EAAEmH,OAAOpN,MAEnBmN,EACF,EAAKH,SAAL,eACGhN,EAAQ,CACPqN,SAAS,EACTzM,GAAI6L,EAAS7L,GACbc,MAAO+K,EAAS/K,MAChBiL,MAAOF,EAASE,SAIpB,EAAKK,SAAL,eACGhN,EAAQ,CACPqN,SAAS,M,EAMjBC,mBAAqB,SAACrH,GAIpB,QAHAA,EAAIA,EAAEmH,QACMpN,OAGV,IAAK,OACH,EAAKjC,MAAM0O,SAASrC,UAAUmD,SAAQ,SAACtH,GACrC,EAAK+G,SAAL,eACG/G,EAAErF,GAAK,CAAEyM,SAAS,EAAMzM,GAAIqF,EAAErF,GAAIc,MAAOuE,EAAEvE,MAAOiL,MAAO1G,EAAE0G,YAGhE,MACF,IAAK,OACH,EAAK5O,MAAM0O,SAASrC,UAAUmD,SAAQ,SAACtH,GACrC,EAAK+G,SAAL,eAAiB/G,EAAErF,GAAK,CAAEyM,SAAS,QAErC,MACF,IAAK,MACH7N,YACE,EAAKzB,MAAM0O,SAASrC,UACpB,EAAK/B,MAAMpE,YACX,EAAKoE,MAAM1I,UACX4N,SAAQ,SAACtH,GACT,EAAK+G,SAAL,eACG/G,EAAErF,GAAK,CAAEyM,SAAS,EAAMzM,GAAIqF,EAAErF,GAAIc,MAAOuE,EAAEvE,MAAOiL,MAAO1G,EAAE0G,YAGhE,MACF,IAAK,MACHnN,YACE,EAAKzB,MAAM0O,SAASrC,UACpB,EAAK/B,MAAMpE,YACX,EAAKoE,MAAM1I,UACX4N,SAAQ,SAACtH,GACT,EAAK+G,SAAL,eACG/G,EAAErF,GAAK,CAAEyM,SAAS,U,EAS7Bb,yBAA2B,SAAC5L,GAC1B,EAAKoM,SAAL,aACET,kBAAmB,EAAKlE,MAAMkE,kBAAkBL,QAC9C,SAACO,GAAD,OAAcA,EAAS7L,IAAMA,MAE9BA,EAAK,CAAEyM,SAAS,M,EAIrBvD,aAAe,SAAC7D,GAEdA,EAAIA,EAAEmH,OACN,EAAKrP,MAAMyP,8BAA8BvH,EAAEjG,OAC3C,EAAKgN,SAAS,CACZpM,GAAIqF,EAAEjG,S,EAIVmM,aAAe,SAAClG,GACQ,YAAlBA,EAAEmH,OAAO1K,KACPuD,EAAEmH,OAAOC,QACX,EAAKL,SAAS,CAAEZ,WAAY,QAE5B,EAAKY,SAAS,CAAEZ,WAAY,QAG1BnG,EAAEmH,OAAOC,QACX,EAAKL,SAAS,CAAEZ,WAAY,WAE5B,EAAKY,SAAS,CAAEZ,WAAY,S,EAKlCpI,cAAgB,SAACyJ,GAEf,EAAKT,SAAS,CAAE/I,YAAawJ,K,mFAnJ7BzK,KAAKjF,MAAM2P,wBACX1K,KAAKjF,MAAM4P,uBACX3K,KAAKjF,MAAM6P,wB,yCAGMC,GAAW,IAAD,OAC3B,GAAIA,EAASrH,WAAaxD,KAAKjF,MAAMyI,SAAU,CAE7C,IAAMsH,EAAgB9K,KAAKjF,MAAMyI,SAAS4D,UAAUU,KAAI,SAAC7E,GAAO,IAAD,EAC1C,EAAKlI,MAAM0O,SAASrC,UAAU8B,QAAO,SAAC6B,GACvD,OAAOA,EAAEnN,GAAGgI,aAAe3C,KADtBwG,EADsD,oBAc7D,OATA,EAAKO,SAAL,eACG/G,EAAI,CACHoH,SAAS,EACTzM,IAAKqF,EACLvE,MAAO+K,GAAYA,EAAS/K,MAC5BiL,MAAOF,GAAYA,EAASE,SAIzB,CACLU,SAAS,EACTzM,IAAKqF,EACLvE,MAAO+K,GAAYA,EAAS/K,MAC5BiL,MAAOF,GAAYA,EAASE,UAIhC3J,KAAKgK,SAAS,CACZT,kBAAmBuB,O,+BAuHf,IAAD,OACDE,EACsB,QAA1BhL,KAAKqF,MAAM+D,WACPpJ,KAAKjF,MAAM0O,SAASrC,UAAU8B,QAAO,SAAC+B,GAAD,MAAyB,QAAfA,EAAKC,SAC1B,WAA1BlL,KAAKqF,MAAM+D,WACXpJ,KAAKjF,MAAM0O,SAASrC,UAAU8B,QAC5B,SAAC+B,GAAD,MAAyB,WAAfA,EAAKC,SAEjBlL,KAAKjF,MAAM0O,SAASrC,UAEpBA,EAAY5K,YAChBwO,EACAhL,KAAKqF,MAAMpE,YACXjB,KAAKqF,MAAM1I,UAGPwO,EAAqBC,OAAOC,KAAKrL,KAAKqF,OAAO6D,QACjD,SAAC3H,GAAD,OAAU+J,MAAM/J,IAAQ,EAAK8D,MAAM9D,GAAK8I,WAG1C,OACE,oCACE,kBAAC,IAAakB,IAAaC,YAAYC,UACvC,kBAACC,EAAA,EAAD,CAAOxI,KAAMlD,KAAKqF,MAAMnC,KAAMC,OAAQnD,KAAKiK,aACzC,kBAACyB,EAAA,EAAMtI,OAAP,CAAcC,aAAW,GACvB,kBAACqI,EAAA,EAAMpI,MAAP,oCAGF,kBAACoI,EAAA,EAAMnI,KAAP,KACE,kBAAC,EAAD,CACEgG,kBAAmBvJ,KAAKqF,MAAMkE,kBAC9BC,yBAA0BxJ,KAAKwJ,4BAInC,kBAACkC,EAAA,EAAMjI,OAAP,KACE,kBAAC+E,EAAA,EAAD,CAAQ9N,QAAQ,YAAYI,QAASkF,KAAKiK,aAA1C,WAOJ,yBACExL,MAAO,CACLuF,SAAU,QACV2H,OAAQ,OACRC,MAAO,OACPpK,MAAO,OACPC,OAAQ,OACR2C,OAAQ,OAGV,kBAACoE,EAAA,EAAD,CAAQ1N,QAASkF,KAAK+J,WAAYrL,MAAM,oBACtC,kBAAC,IAAD,CAAkBkC,KAAM,UAE1B,0BACEnG,UAAU,uCACVgE,MAAO,CAAEuF,SAAU,WAAYC,IAAK,QAAS2H,MAAO,UAEnD5L,KAAKqF,MAAMkE,kBAAkBlC,SAIlC,kBAACwE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAI,GACP,kBAAC9E,EAAA,EAAD,CAAOvM,QAAS,UAAWD,UAAU,oBAArC,gCACgCuQ,EAAY3D,QAG5C,kBAAC,EAAD,CACEP,aAAc9G,KAAK8G,aACnBxC,WAAYtE,KAAKjF,MAAMiR,SAAS1H,WAChC6E,aAAcnJ,KAAKmJ,aACnBC,WAAYpJ,KAAKoJ,aAEnB,kBAAC,EAAD,CACE9E,WAAYtE,KAAKjF,MAAMiR,SAAS1H,WAChCC,QAASvE,KAAKjF,MAAMwJ,QAAQA,QAC5BC,oBAAqBxE,KAAKqF,MAAMkE,kBAAkBzB,KAChD,SAACiD,GAAD,OAAOA,EAAEnN,MAEX6G,aAAczE,KAAKjF,MAAMyI,YAG7B,kBAACsI,EAAA,EAAD,CAAKC,GAAI,GACP,kBAACzN,EAAA,EAAD,KACE,kBAACrB,EAAA,EAAD,CAAWxC,UAAU,QAClB2M,EAAUC,OAAS,GAClB,uBAAG5M,UAAU,eAAb,iCAED2M,EAAUU,KAAI,SAAC2B,EAAUC,GAAX,OACb,kBAACzM,EAAA,EAAUS,KAAX,CACE6D,IAAKkI,EAAS7L,GACdlD,QAASgP,EAAQ,IAAM,EAAI,OAAS,SAGlC,kBAAClC,EAAA,EAAK6B,MAAN,CAEE9K,QAAM,EACNvC,KAAK,WACLgB,MAAOyM,EAAS7L,GAChBgK,SAAU,SAAC3E,GACT,EAAKiH,kBAAkBjH,EAAGwG,IAE5BY,QACE,EAAKhF,MAAMoE,EAAS7L,KACpB,EAAKyH,MAAMoE,EAAS7L,IAAIyM,UAI9B,wCAEIX,EACA,EACA,EAAKrE,MAAM1I,UAAY,EAAK0I,MAAMpE,YAAc,GAJpD,aAKOwI,EAASE,QAEhB,kBAACC,EAAA,EAAD,CAAOnP,UAAU,QAAQgP,EAASyB,aAK1C,uBAAGzQ,UAAU,cAAb,qCACqC,IACnC,kBAACmP,EAAA,EAAD,CAAOlP,QAAQ,QAAf,gBAFF,sDAKA,kBAAC,IAAD,CACEqG,WAAYiK,EAAY3D,OACxB1K,SAAUqD,KAAKqF,MAAM1I,SACrBsE,YAAajB,KAAKqF,MAAMpE,YACxBD,cAAehB,KAAKgB,gBAGtB,yBAAKvG,UAAU,oDACb,kBAAC+N,EAAA,EAAD,CACE1N,QAAS,WACP,EAAKkP,SAAS,CACZT,kBAAmB4B,EAAmBrD,KACpC,SAAClK,GAAD,OAAQ,EAAKyH,MAAMzH,SAIzBnD,UAAU,qBARZ,iCAaA,kBAAC+M,EAAA,EAAKC,MAAN,CAAYzN,UAAU,kBACpB,kBAACwN,EAAA,EAAKnI,MAAN,gBACA,kBAACmI,EAAA,EAAKE,QAAN,CACE9M,GAAG,SACH8E,KAAK,SACLkI,SAAU5H,KAAKsK,oBAEf,6CACA,4BAAQtN,MAAM,QAAd,YACA,4BAAQA,MAAM,QAAd,cACA,4BAAQA,MAAM,OAAd,kCACA,4BAAQA,MAAM,OAAd,6C,GA/TMT,aA6VT0P,uBAVS,SAAC5G,GACvB,MAAO,CACL6G,KAAM7G,EAAM6G,KACZzC,SAAUpE,EAAMoE,SAChBuC,SAAU3G,EAAM2G,SAChBG,IAAK9G,EAAM8G,IACX5H,QAASc,EAAMd,YAfQ,SAACU,GAC1B,MAAO,CACLyF,sBAAuB,kBAAMzF,EAASmH,gBACtCzB,qBAAsB,kBAAM1F,EAASoH,gBACrCzB,oBAAqB,kBAAM3F,EAASqH,gBACpC9B,8BAA+B,SAAC5M,GAAD,OAC7BqH,EAASsH,YAA4B3O,QAa5BqO,CAA6CnC,I,0HCnXxD0C,EAAY1S,IAAMK,YAAW,SAAUC,EAAMC,GAC/C,IAAIC,EAAWF,EAAKE,SAChBG,EAAYL,EAAKK,UACjBmE,EAAWxE,EAAKwE,SAChB5E,EAAYI,EAAKJ,UACjBsC,EAAUlC,EAAKQ,GACf2B,OAAwB,IAAZD,EAAqB,MAAQA,EACzCvB,EAAQC,YAA8BZ,EAAM,CAAC,WAAY,YAAa,WAAY,YAAa,OAEnGE,EAAWW,YAAmBX,EAAU,cACxC,IAAImS,EAAU1N,mBAAQ,WACpB,MAAO,CACL/E,UAAWA,KAEZ,CAACA,IACJ,OAAOF,IAAMyB,cAAc1B,IAAYqF,SAAU,CAC/ClC,MAAOyP,GACN3S,IAAMyB,cAAcgB,EAAWd,YAAS,GAAIV,EAAO,CACpDV,IAAKA,EACLI,UAAWmB,IAAWnB,EAAWH,KAC/BsE,OAEN4N,EAAU1Q,YAAc,YACT0Q,Q,kBCjBXE,EAAY5S,IAAMK,YAAW,SAAUC,EAAMC,GAC/C,IAAIC,EAAWF,EAAKE,SAChBqS,EAASvS,EAAKuS,OACdC,EAASxS,EAAKwS,OACdnS,EAAYL,EAAKK,UACjB4D,EAAUjE,EAAKiE,QACftD,EAAQC,YAA8BZ,EAAM,CAAC,WAAY,SAAU,SAAU,YAAa,YAG1FJ,EADckE,qBAAWrE,KACDG,UAE5BM,EAAWW,YAAmBX,EAAU,cACxC,IAAIqH,EAAU/F,IAAWnB,EAAWH,EAAUsS,GAAU,UAAWD,GAAU,kBAG7E,OADAtO,EAAUA,GAAWrE,EACjB2S,EAAe7S,IAAMyB,cAAcuQ,IAAKrQ,YAAS,CACnDb,GAAI,QACJH,UAAWkH,EACXtD,QAASA,GACRtD,IAEDjB,IAAMyB,cAAc,QAASE,YAAS,CACpCpB,IAAKA,EACLI,UAAWkH,EACXtD,QAASA,GACRtD,OAGP2R,EAAU5Q,YAAc,YACxB4Q,EAAU7Q,aAjCS,CACjB8Q,QAAQ,EACRC,QAAQ,GAgCKF,QCrCXG,EAAW/S,IAAMK,YACrB,SAAUC,EAAMC,GACd,IAAIC,EAAWF,EAAKE,SAChBG,EAAYL,EAAKK,UACjB6B,EAAUlC,EAAKQ,GACf2B,OAAwB,IAAZD,EAAqB,QAAUA,EAC3CwQ,EAAQ1S,EAAK0S,MACb/R,EAAQC,YAA8BZ,EAAM,CAAC,WAAY,YAAa,KAAM,UAGhF,OADAE,EAAWW,YAAmBX,EAAU,aACjCR,IAAMyB,cAAcgB,EAAWd,YAAS,GAAIV,EAAO,CACxDV,IAAKA,EACLI,UAAWmB,IAAWnB,EAAWH,EAAUwS,GAAS,oBAGxDD,EAAS/Q,YAAc,WACR+Q,QClBXE,EAASjT,IAAMK,YAAW,SAAUY,EAAOV,GAC7C,OAAOP,IAAMyB,cAAc+C,IAAW7C,YAAS,GAAIV,EAAO,CACxDV,IAAKA,EACL2B,KAAM,eAGV+Q,EAAOjR,YAAc,SACrBiR,EAAO3N,MAAQd,IAAUc,MACzB2N,EAAO1N,MAAQf,IAAUe,MACV0N,Q,SCGXvF,EAAO1N,IAAMK,YAAW,SAAUC,EAAMC,GAC1C,IAAIC,EAAWF,EAAKE,SAChBiE,EAASnE,EAAKmE,OACd9D,EAAYL,EAAKK,UACjBuS,EAAY5S,EAAK4S,UACjB1Q,EAAUlC,EAAKQ,GACf2B,OAAwB,IAAZD,EAAqB,OAASA,EAC1CvB,EAAQC,YAA8BZ,EAAM,CAAC,WAAY,SAAU,YAAa,YAAa,OAGjG,OADAE,EAAWW,YAAmBX,EAAU,QACjCR,IAAMyB,cAAcgB,EAAWd,YAAS,GAAIV,EAAO,CACxDV,IAAKA,EACLI,UAAWmB,IAAWnB,EAAWuS,GAAa,gBAAiBzO,GAAUjE,EAAW,iBAGxFkN,EAAK1L,YAAc,OACnB0L,EAAK3L,aAnBc,CACjB0C,QAAQ,GAmBViJ,EAAKqE,IAAMoB,YAAmB,YAC9BzF,EAAKC,MAAQ+E,EACbhF,EAAKE,QAAUhG,IACf8F,EAAK6B,MAAQ/K,IACbkJ,EAAKuF,OAASA,EACdvF,EAAKnI,MAAQqN,EACblF,EAAKe,KAAOsE,EACGrF","file":"static/js/31.7f6d728e.chunk.js","sourcesContent":["import React from 'react';\nvar FormContext = React.createContext({\n  controlId: undefined\n});\nexport default FormContext;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useCallback } from 'react';\nimport AbstractNavItem from './AbstractNavItem';\nimport { makeEventKey } from './SelectableContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  variant: null,\n  active: false,\n  disabled: false\n};\nvar ListGroupItem = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      active = _ref.active,\n      disabled = _ref.disabled,\n      className = _ref.className,\n      variant = _ref.variant,\n      action = _ref.action,\n      as = _ref.as,\n      eventKey = _ref.eventKey,\n      onClick = _ref.onClick,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"active\", \"disabled\", \"className\", \"variant\", \"action\", \"as\", \"eventKey\", \"onClick\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'list-group-item');\n  var handleClick = useCallback(function (event) {\n    if (disabled) {\n      event.preventDefault();\n      event.stopPropagation();\n      return;\n    }\n\n    if (onClick) onClick(event);\n  }, [disabled, onClick]);\n  return React.createElement(AbstractNavItem, _extends({\n    ref: ref\n  }, props, {\n    eventKey: makeEventKey(eventKey, props.href) // eslint-disable-next-line\n    ,\n    as: as || (action ? props.href ? 'a' : 'button' : 'div'),\n    onClick: handleClick,\n    className: classNames(className, bsPrefix, active && 'active', disabled && 'disabled', variant && bsPrefix + \"-\" + variant, action && bsPrefix + \"-action\")\n  }));\n});\nListGroupItem.defaultProps = defaultProps;\nListGroupItem.displayName = 'ListGroupItem';\nexport default ListGroupItem;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nvar propTypes = {\n  /**\n   * Specify whether the feedback is for valid or invalid fields\n   *\n   * @type {('valid'|'invalid')}\n   */\n  type: PropTypes.string.isRequired,\n  as: PropTypes.elementType\n};\nvar defaultProps = {\n  type: 'valid'\n};\nvar Feedback = React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\nfunction (_ref, ref) {\n  var _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      className = _ref.className,\n      type = _ref.type,\n      props = _objectWithoutPropertiesLoose(_ref, [\"as\", \"className\", \"type\"]);\n\n  return React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    className: classNames(className, type && type + \"-feedback\")\n  }));\n});\nFeedback.displayName = 'Feedback';\nFeedback.propTypes = propTypes;\nFeedback.defaultProps = defaultProps;\nexport default Feedback;","import _ from 'lodash'\r\n\r\nexport function paginate(items, pageNumber, pageSize) {\r\n  const startIndex = (pageNumber - 1) * pageSize\r\n  return _(items).slice(startIndex).take(pageSize).value()\r\n}\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport warning from 'warning';\nimport { useUncontrolled } from 'uncontrollable';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractNav from './AbstractNav';\nimport ListGroupItem from './ListGroupItem';\nvar defaultProps = {\n  variant: null,\n  horizontal: null\n};\nvar ListGroup = React.forwardRef(function (props, ref) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      className = _useUncontrolled.className,\n      bsPrefix = _useUncontrolled.bsPrefix,\n      variant = _useUncontrolled.variant,\n      horizontal = _useUncontrolled.horizontal,\n      _useUncontrolled$as = _useUncontrolled.as,\n      as = _useUncontrolled$as === void 0 ? 'div' : _useUncontrolled$as,\n      controlledProps = _objectWithoutPropertiesLoose(_useUncontrolled, [\"className\", \"bsPrefix\", \"variant\", \"horizontal\", \"as\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'list-group');\n  var horizontalVariant;\n\n  if (horizontal) {\n    horizontalVariant = horizontal === true ? 'horizontal' : \"horizontal-\" + horizontal;\n  } else {\n    horizontalVariant = null;\n  }\n\n  process.env.NODE_ENV !== \"production\" ? warning(!(horizontal && variant === 'flush'), '`variant=\"flush\"` and `horizontal` should not be used together.') : void 0;\n  return React.createElement(AbstractNav, _extends({\n    ref: ref\n  }, controlledProps, {\n    as: as,\n    className: classNames(className, bsPrefix, variant && bsPrefix + \"-\" + variant, horizontalVariant && bsPrefix + \"-\" + horizontalVariant)\n  }));\n});\nListGroup.defaultProps = defaultProps;\nListGroup.displayName = 'ListGroup';\nListGroup.Item = ListGroupItem;\nexport default ListGroup;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  type: 'checkbox'\n};\nvar FormCheckInput = React.forwardRef(function (_ref, ref) {\n  var id = _ref.id,\n      bsPrefix = _ref.bsPrefix,\n      bsCustomPrefix = _ref.bsCustomPrefix,\n      className = _ref.className,\n      isValid = _ref.isValid,\n      isInvalid = _ref.isInvalid,\n      isStatic = _ref.isStatic,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'input' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"id\", \"bsPrefix\", \"bsCustomPrefix\", \"className\", \"isValid\", \"isInvalid\", \"isStatic\", \"as\"]);\n\n  var _useContext = useContext(FormContext),\n      controlId = _useContext.controlId,\n      custom = _useContext.custom;\n\n  bsPrefix = custom ? useBootstrapPrefix(bsCustomPrefix, 'custom-control-input') : useBootstrapPrefix(bsPrefix, 'form-check-input');\n  return React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    id: id || controlId,\n    className: classNames(className, bsPrefix, isValid && 'is-valid', isInvalid && 'is-invalid', isStatic && 'position-static')\n  }));\n});\nFormCheckInput.displayName = 'FormCheckInput';\nFormCheckInput.defaultProps = defaultProps;\nexport default FormCheckInput;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar FormCheckLabel = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      bsCustomPrefix = _ref.bsCustomPrefix,\n      className = _ref.className,\n      htmlFor = _ref.htmlFor,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"bsCustomPrefix\", \"className\", \"htmlFor\"]);\n\n  var _useContext = useContext(FormContext),\n      controlId = _useContext.controlId,\n      custom = _useContext.custom;\n\n  bsPrefix = custom ? useBootstrapPrefix(bsCustomPrefix, 'custom-control-label') : useBootstrapPrefix(bsPrefix, 'form-check-label');\n  return React.createElement(\"label\", _extends({}, props, {\n    ref: ref,\n    htmlFor: htmlFor || controlId,\n    className: classNames(className, bsPrefix)\n  }));\n});\nFormCheckLabel.displayName = 'FormCheckLabel';\nexport default FormCheckLabel;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport all from 'prop-types-extra/lib/all';\nimport React, { useContext, useMemo } from 'react';\nimport Feedback from './Feedback';\nimport FormCheckInput from './FormCheckInput';\nimport FormCheckLabel from './FormCheckLabel';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  type: 'checkbox',\n  inline: false,\n  disabled: false,\n  isValid: false,\n  isInvalid: false,\n  title: ''\n};\nvar FormCheck = React.forwardRef(function (_ref, ref) {\n  var id = _ref.id,\n      bsPrefix = _ref.bsPrefix,\n      bsCustomPrefix = _ref.bsCustomPrefix,\n      inline = _ref.inline,\n      disabled = _ref.disabled,\n      isValid = _ref.isValid,\n      isInvalid = _ref.isInvalid,\n      feedback = _ref.feedback,\n      className = _ref.className,\n      style = _ref.style,\n      title = _ref.title,\n      type = _ref.type,\n      label = _ref.label,\n      children = _ref.children,\n      propCustom = _ref.custom,\n      _ref$as = _ref.as,\n      as = _ref$as === void 0 ? 'input' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"id\", \"bsPrefix\", \"bsCustomPrefix\", \"inline\", \"disabled\", \"isValid\", \"isInvalid\", \"feedback\", \"className\", \"style\", \"title\", \"type\", \"label\", \"children\", \"custom\", \"as\"]);\n\n  var custom = type === 'switch' ? true : propCustom;\n  bsPrefix = custom ? useBootstrapPrefix(bsCustomPrefix, 'custom-control') : useBootstrapPrefix(bsPrefix, 'form-check');\n\n  var _useContext = useContext(FormContext),\n      controlId = _useContext.controlId;\n\n  var innerFormContext = useMemo(function () {\n    return {\n      controlId: id || controlId,\n      custom: custom\n    };\n  }, [controlId, custom, id]);\n  var hasLabel = label != null && label !== false && !children;\n  var input = React.createElement(FormCheckInput, _extends({}, props, {\n    type: type === 'switch' ? 'checkbox' : type,\n    ref: ref,\n    isValid: isValid,\n    isInvalid: isInvalid,\n    isStatic: !hasLabel,\n    disabled: disabled,\n    as: as\n  }));\n  return React.createElement(FormContext.Provider, {\n    value: innerFormContext\n  }, React.createElement(\"div\", {\n    style: style,\n    className: classNames(className, bsPrefix, custom && \"custom-\" + type, inline && bsPrefix + \"-inline\")\n  }, children || React.createElement(React.Fragment, null, input, hasLabel && React.createElement(FormCheckLabel, {\n    title: title\n  }, label), (isValid || isInvalid) && React.createElement(Feedback, {\n    type: isValid ? 'valid' : 'invalid'\n  }, feedback))));\n});\nFormCheck.displayName = 'FormCheck';\nFormCheck.defaultProps = defaultProps;\nFormCheck.Input = FormCheckInput;\nFormCheck.Label = FormCheckLabel;\nexport default FormCheck;","import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\n\n/* eslint-disable react/no-multi-comp */\nimport classNames from 'classnames';\nimport React from 'react';\nimport SafeAnchor from './SafeAnchor';\nvar defaultProps = {\n  active: false,\n  disabled: false,\n  activeLabel: '(current)'\n};\nvar PageItem = React.forwardRef(function (_ref, ref) {\n  var active = _ref.active,\n      disabled = _ref.disabled,\n      className = _ref.className,\n      style = _ref.style,\n      activeLabel = _ref.activeLabel,\n      children = _ref.children,\n      props = _objectWithoutPropertiesLoose(_ref, [\"active\", \"disabled\", \"className\", \"style\", \"activeLabel\", \"children\"]);\n\n  var Component = active || disabled ? 'span' : SafeAnchor;\n  return React.createElement(\"li\", {\n    ref: ref,\n    style: style,\n    className: classNames(className, 'page-item', {\n      active: active,\n      disabled: disabled\n    })\n  }, React.createElement(Component, _extends({\n    className: \"page-link\",\n    disabled: disabled\n  }, props), children, active && activeLabel && React.createElement(\"span\", {\n    className: \"sr-only\"\n  }, activeLabel)));\n});\nPageItem.defaultProps = defaultProps;\nPageItem.displayName = 'PageItem';\nexport default PageItem;\n\nfunction createButton(name, defaultValue, label) {\n  var _class, _temp;\n\n  if (label === void 0) {\n    label = name;\n  }\n\n  return _temp = _class =\n  /*#__PURE__*/\n  function (_React$Component) {\n    _inheritsLoose(_class, _React$Component);\n\n    function _class() {\n      return _React$Component.apply(this, arguments) || this;\n    }\n\n    var _proto = _class.prototype;\n\n    _proto.render = function render() {\n      var _this$props = this.props,\n          children = _this$props.children,\n          props = _objectWithoutPropertiesLoose(_this$props, [\"children\"]);\n\n      delete props.active;\n      return React.createElement(PageItem, props, React.createElement(\"span\", {\n        \"aria-hidden\": \"true\"\n      }, children || defaultValue), React.createElement(\"span\", {\n        className: \"sr-only\"\n      }, label));\n    };\n\n    return _class;\n  }(React.Component), _class.displayName = name, _temp;\n}\n\nexport var First = createButton('First', '«');\nexport var Prev = createButton('Prev', '‹', 'Previous');\nexport var Ellipsis = createButton('Ellipsis', '…', 'More');\nexport var Next = createButton('Next', '›');\nexport var Last = createButton('Last', '»');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport PageItem, { First, Prev, Ellipsis, Next, Last } from './PageItem';\n\n/**\n * @property {PageItem} Item\n * @property {PageItem} First\n * @property {PageItem} Prev\n * @property {PageItem} Ellipsis\n * @property {PageItem} Next\n * @property {PageItem} Last\n */\nvar Pagination = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      children = _ref.children,\n      size = _ref.size,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"children\", \"size\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'pagination');\n  return React.createElement(\"ul\", _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, decoratedBsPrefix, size && decoratedBsPrefix + \"-\" + size)\n  }), children);\n});\nPagination.First = First;\nPagination.Prev = Prev;\nPagination.Ellipsis = Ellipsis;\nPagination.Item = PageItem;\nPagination.Next = Next;\nPagination.Last = Last;\nexport default Pagination;","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\n\r\nconst pagination = ({ itemsCount, pageSize, onPageHandler, currentPage }) => {\r\n  const pageCount = Math.ceil(itemsCount / pageSize)\r\n  if (pageCount === 1) return null\r\n  const items = []\r\n  for (let number = 1; number <= pageCount; number++) {\r\n    items.push(\r\n      <Pagination.Item\r\n        key={number}\r\n        onClick={() => {\r\n          onPageHandler(number)\r\n        }}\r\n        active={number === currentPage}\r\n        className='my-2 mr-2 text-center'\r\n        style={{ width: '40px', height: '30px' }}\r\n      >\r\n        {number}\r\n      </Pagination.Item>\r\n    )\r\n  }\r\n  return (\r\n    <Pagination className='justify-content-start align-content-start flex-wrap'>\r\n      {items}\r\n    </Pagination>\r\n  )\r\n}\r\n\r\nexport default pagination\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport warning from 'warning';\nimport Feedback from './Feedback';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar FormControl = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      type = _ref.type,\n      size = _ref.size,\n      id = _ref.id,\n      className = _ref.className,\n      isValid = _ref.isValid,\n      isInvalid = _ref.isInvalid,\n      plaintext = _ref.plaintext,\n      readOnly = _ref.readOnly,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'input' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"type\", \"size\", \"id\", \"className\", \"isValid\", \"isInvalid\", \"plaintext\", \"readOnly\", \"as\"]);\n\n  var _useContext = useContext(FormContext),\n      controlId = _useContext.controlId;\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-control');\n  var classes;\n\n  if (plaintext) {\n    var _classes;\n\n    classes = (_classes = {}, _classes[bsPrefix + \"-plaintext\"] = true, _classes);\n  } else if (type === 'file') {\n    var _classes2;\n\n    classes = (_classes2 = {}, _classes2[bsPrefix + \"-file\"] = true, _classes2);\n  } else {\n    var _classes3;\n\n    classes = (_classes3 = {}, _classes3[bsPrefix] = true, _classes3[bsPrefix + \"-\" + size] = size, _classes3);\n  }\n\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !id, '`controlId` is ignored on `<FormControl>` when `id` is specified.') : void 0;\n  return React.createElement(Component, _extends({}, props, {\n    type: type,\n    ref: ref,\n    readOnly: readOnly,\n    id: id || controlId,\n    className: classNames(className, classes, isValid && \"is-valid\", isInvalid && \"is-invalid\")\n  }));\n});\nFormControl.displayName = 'FormControl';\nFormControl.Feedback = Feedback;\nexport default FormControl;","import Axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Button, Modal } from 'react-bootstrap'\r\nimport ExamBuilder from './examBuilder'\r\n\r\nexport default function EditExam({ editExamId, editExamHandleClose }) {\r\n  const [exam, setExam] = useState(null)\r\n  useEffect(() => {\r\n    Axios.get(`${process.env.REACT_APP_SITE_URL}/exams/${editExamId}`)\r\n      .then((res) => {\r\n        console.log(res.data)\r\n        setExam(res.data)\r\n      })\r\n      .catch((e) => console.log(e))\r\n  }, [])\r\n  return (\r\n    <div>\r\n      <Modal show={editExamId} onHide={editExamHandleClose} size='xl'>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Modal heading</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <ExamBuilder editExam={exam} />\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant='secondary' onClick={editExamHandleClose}>\r\n            Close\r\n          </Button>\r\n          <Button variant='primary' onClick={editExamHandleClose}>\r\n            Save Changes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Card } from 'react-bootstrap'\r\n\r\nconst card = ({ header, children, headerBgColor, showHeader }) => {\r\n  return (\r\n    <Card className='mt-5'>\r\n      {showHeader && (\r\n        <Card.Header\r\n          className={'text-center font-weight-bold bg-' + headerBgColor}\r\n        >\r\n          {header}\r\n        </Card.Header>\r\n      )}\r\n      <Card.Body>{children}</Card.Body>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default card\r\n","import { Formik } from 'formik'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Alert, Button, Form, Spinner } from 'react-bootstrap'\r\nimport DatePicker from 'react-datepicker'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport { FaRegCalendarAlt } from 'react-icons/fa'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n//import { useFormik } from \"formik\";\r\nimport validator from 'validator'\r\nimport { onLoadingLoader, postExamProfile } from '../../store/examPaper'\r\nimport ExamCard from './card/card'\r\n\r\nconst centeredStyle = {\r\n  // styling to display server response in middle of screen\r\n  position: 'fixed',\r\n  top: '50%',\r\n  left: '50%',\r\n  /* bring your own prefixes */\r\n  transform: 'translate(-50%, -50%)',\r\n  zIndex: '1000'\r\n}\r\n\r\nconst ExamSpec = ({\r\n  categories,\r\n  courses,\r\n  selectedQuestionIds,\r\n  editExamSpec\r\n}) => {\r\n  const [hideMsg, setHideMsg] = useState(true)\r\n  const [startDate, setStartDate] = useState(new Date())\r\n  const [endDate, setEndDate] = useState(new Date())\r\n  const dispatch = useDispatch()\r\n  const loading = useSelector((state) => state.examPaper.loading)\r\n  const successMsg = useSelector((state) => state.examPaper.success)\r\n  const errorMsg = useSelector((state) => state.examPaper.error)\r\n  const initialValues = {\r\n    title: editExamSpec ? editExamSpec.title : '',\r\n    type: editExamSpec ? editExamSpec.type.toString() : '0',\r\n    description: editExamSpec ? editExamSpec.description : '',\r\n    categoryType: editExamSpec ? editExamSpec.categoryIds : [],\r\n    courseType: editExamSpec ? editExamSpec.courseIds : [],\r\n    singleQuestionMark: editExamSpec\r\n      ? editExamSpec.singleQuestionMark.toString()\r\n      : '1',\r\n    questionStemLength: editExamSpec\r\n      ? editExamSpec.questionStemLength.toString()\r\n      : '5',\r\n    penaltyMark: editExamSpec ? editExamSpec.penaltyMark.toString() : '0',\r\n    timeLimit: editExamSpec ? editExamSpec.timeLimit.toString() : '40'\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (editExamSpec) {\r\n      setStartDate(new Date(editExamSpec.startDate))\r\n      setEndDate(new Date(editExamSpec.endDate))\r\n    }\r\n  }, [editExamSpec])\r\n\r\n  return (\r\n    <>\r\n      {loading && (\r\n        <Spinner\r\n          animation='border'\r\n          role='status'\r\n          variant='dark'\r\n          className='content-center'\r\n        ></Spinner>\r\n      )}\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validate={validate}\r\n        onSubmit={onSubmitHandler(\r\n          startDate,\r\n          endDate,\r\n          selectedQuestionIds,\r\n          dispatch,\r\n          setHideMsg,\r\n          editExamSpec && editExamSpec.id\r\n        )}\r\n        enableReinitialize\r\n      >\r\n        {({ errors, handleChange, handleSubmit, values }) => (\r\n          <ExamCard header='Exam Specification' showHeader={true}>\r\n            {hideMsg && successMsg && (\r\n              <Alert //\r\n                variant={'success'}\r\n                className='text-center'\r\n                style={centeredStyle}\r\n                onClose={() => setHideMsg(false)}\r\n                dismissible\r\n              >\r\n                {successMsg.title +\r\n                  ' --->  ' +\r\n                  successMsg.description +\r\n                  ' --->  ' +\r\n                  successMsg.questions.length +\r\n                  ' questions'}\r\n              </Alert>\r\n            )}\r\n            {hideMsg && errorMsg && (\r\n              <Alert //\r\n                variant={'success'}\r\n                className='text-center'\r\n                style={centeredStyle}\r\n                onClose={() => setHideMsg(false)}\r\n                dismissible\r\n              >\r\n                {JSON.stringify(errorMsg)}\r\n              </Alert>\r\n            )}\r\n            <Form>\r\n              <Form.Group controlId='title'>\r\n                <Form.Label>Title</Form.Label>\r\n                <Form.Control\r\n                  type='text'\r\n                  placeholder='Enter title'\r\n                  name='title'\r\n                  onChange={handleChange}\r\n                  value={values.title}\r\n                />\r\n              </Form.Group>\r\n              {errors.title ? (\r\n                <div className='alert alert-danger'>{errors.title}</div>\r\n              ) : null}\r\n              <Form.Group controlId='type'>\r\n                <Form.Label>Exam Type</Form.Label>\r\n                <Form.Control\r\n                  as='select'\r\n                  name='type'\r\n                  value={values.type}\r\n                  onChange={handleChange}\r\n                >\r\n                  <option value='0'>Assignment</option>\r\n                  <option value='1'>Weekly</option>\r\n                  <option value='2'>Monthly</option>\r\n                  <option value='3'>Assesment</option>\r\n                  <option value='4'>Term</option>\r\n                  <option value='5'>Test</option>\r\n                  <option value='6'>Final</option>\r\n                </Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId='categoryType'>\r\n                <Form.Label>Category Type</Form.Label>\r\n                <Form.Control\r\n                  as='select'\r\n                  multiple\r\n                  name='categoryType'\r\n                  onChange={handleChange}\r\n                  value={values.categoryType}\r\n                  //value={categories[0] && categories[0].id}\r\n                  // eslint-disable-next-line react/jsx-no-comment-textnodes\r\n                >\r\n                  // eslint-disable-next-line react/prop-types //\r\n                  eslint-disable-next-line react/prop-types\r\n                  {categories.map((value) => {\r\n                    //console.log(categories[0].id);\r\n                    let categorySlug = value.slug.replace(/_/g, ' / ')\r\n                    if (value.name !== 'Uncategorized')\r\n                      return <option value={value.id}>{categorySlug}</option>\r\n                  })}\r\n                </Form.Control>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId='courseType'>\r\n                <Form.Label>Course Type</Form.Label>\r\n                <Form.Control\r\n                  as='select'\r\n                  multiple\r\n                  name='courseType'\r\n                  onChange={handleChange}\r\n                  value={values.courseType}\r\n                  //value={categories[0] && categories[0].id}\r\n                  // eslint-disable-next-line react/jsx-no-comment-textnodes\r\n                >\r\n                  // eslint-disable-next-line react/prop-types //\r\n                  eslint-disable-next-line react/prop-types\r\n                  {courses.map((value) => (\r\n                    <option value={value.id}>{value.title}</option>\r\n                  ))}\r\n                </Form.Control>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId='description'>\r\n                <Form.Label>Description</Form.Label>\r\n                <Form.Control\r\n                  type='textarea'\r\n                  placeholder='description'\r\n                  name='description'\r\n                  onChange={handleChange}\r\n                  value={values.description}\r\n                />\r\n              </Form.Group>\r\n              {errors.description ? (\r\n                <div className='alert alert-danger'>{errors.description}</div>\r\n              ) : null}\r\n              <div>\r\n                <div className='my-3'>\r\n                  <p>Start Date</p>\r\n                  <DatePicker\r\n                    selected={startDate}\r\n                    onChange={(date) => setStartDate(date)}\r\n                    showTimeSelect\r\n                    minDate={!editExamSpec && new Date()}\r\n                    dateFormat='Pp'\r\n                  />\r\n                  <FaRegCalendarAlt size='1.7rem' />\r\n                </div>\r\n                <div className='my-3'>\r\n                  <p>End Date</p>\r\n                  <DatePicker\r\n                    selected={endDate}\r\n                    onChange={(date) => setEndDate(date)}\r\n                    showTimeSelect\r\n                    minDate={new Date()}\r\n                    dateFormat='Pp'\r\n                  />\r\n                  <FaRegCalendarAlt size='1.7rem' />\r\n                </div>\r\n              </div>\r\n              <Form.Group controlId='singleQuestionMark'>\r\n                <Form.Label>Single Question Mark</Form.Label>\r\n                <Form.Control\r\n                  type='text'\r\n                  placeholder='1'\r\n                  name='singleQuestionMark'\r\n                  onChange={handleChange}\r\n                  value={values.singleQuestionMark}\r\n                />\r\n                <Form.Text className='text-muted'>\r\n                  ** It is value for the question, not for the single stem.\r\n                </Form.Text>\r\n              </Form.Group>\r\n              {errors.singleQuestionMark ? (\r\n                <div className='alert alert-danger'>\r\n                  {errors.singleQuestionMark}\r\n                </div>\r\n              ) : null}\r\n              <Form.Group controlId='questionStemLength'>\r\n                <Form.Label>Question Stem Length</Form.Label>\r\n                <Form.Control\r\n                  type='text'\r\n                  placeholder='5'\r\n                  name='questionStemLength'\r\n                  onChange={handleChange}\r\n                  value={values.questionStemLength}\r\n                />\r\n              </Form.Group>\r\n              {errors.questionStemLength ? (\r\n                <div className='alert alert-danger'>\r\n                  {errors.questionStemLength}\r\n                </div>\r\n              ) : null}\r\n              <Form.Group controlId='penaltyMark'>\r\n                <Form.Label>Penalty Mark</Form.Label>\r\n                <Form.Control\r\n                  type='text'\r\n                  placeholder='0'\r\n                  name='penaltyMark'\r\n                  onChange={handleChange}\r\n                  value={values.penaltyMark}\r\n                />\r\n                <Form.Text className='text-muted'>\r\n                  ** It is value for single stem, not for the question.\r\n                </Form.Text>\r\n              </Form.Group>\r\n              {errors.penaltyMark ? (\r\n                <div className='alert alert-danger'>{errors.penaltyMark}</div>\r\n              ) : null}\r\n              <Form.Group controlId='timeLimit'>\r\n                <Form.Label>Time Limit(Minutes)</Form.Label>\r\n                <Form.Control\r\n                  type='text'\r\n                  placeholder='40'\r\n                  name='timeLimit'\r\n                  value={values.timeLimit}\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Group>\r\n              {errors.timeLimit ? (\r\n                <div className='alert alert-danger'>{errors.timeLimit}</div>\r\n              ) : null}\r\n            </Form>\r\n            <Button onClick={handleSubmit}>Submit</Button>\r\n          </ExamCard>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ExamSpec\r\n\r\nfunction onSubmitHandler(\r\n  startDate,\r\n  endDate,\r\n  selectedQuestionIds,\r\n  dispatch,\r\n  setHideMsg,\r\n  editExamId\r\n) {\r\n  return (values) => {\r\n    if (selectedQuestionIds.length > 0) {\r\n      values.startDate = startDate\r\n      values.endDate = endDate\r\n      dispatch(onLoadingLoader())\r\n      setHideMsg(true)\r\n      dispatch(postExamProfile(values, selectedQuestionIds, editExamId))\r\n    } else {\r\n      alert('Their is no selected Question')\r\n    }\r\n  }\r\n}\r\n\r\nconst validate = (values) => {\r\n  const errors = {}\r\n  if (!values.title) {\r\n    errors.title = 'Required'\r\n  } else if (!validator.isLength(values.title, { min: 5, max: 50 })) {\r\n    errors.title = 'Title should be between 5-50 characters'\r\n  }\r\n  if (!values.description) {\r\n    errors.description = 'Required'\r\n  } else if (!validator.isLength(values.description, { min: 15, max: 255 })) {\r\n    errors.description = 'Description should be between 15-255 characters'\r\n  }\r\n  if (!values.singleQuestionMark) {\r\n    errors.singleQuestionMark = 'Required'\r\n  } else if (!validator.isInt(values.singleQuestionMark)) {\r\n    errors.singleQuestionMark = 'Single Question Mark should be Integer value'\r\n  }\r\n  if (!values.questionStemLength) {\r\n    errors.questionStemLength = 'Required'\r\n  } else if (!validator.isNumeric(values.questionStemLength)) {\r\n    errors.questionStemLength = 'Question stem length should be Numeric value'\r\n  }\r\n  if (!values.penaltyMark) {\r\n    errors.penaltyMark = 'Required'\r\n  } else if (!validator.isNumeric(values.penaltyMark)) {\r\n    errors.penaltyMark = 'penalty Mark should be Numeric value'\r\n  }\r\n  if (!values.timeLimit) {\r\n    errors.timeLimit = 'Required'\r\n  } else if (!validator.isInt(values.timeLimit)) {\r\n    errors.timeLimit = 'Timelimit Mark should be Interger Value'\r\n  }\r\n  return errors\r\n}\r\n","import React from 'react'\r\nimport { Form } from 'react-bootstrap'\r\nimport ExamCard from './card/card'\r\n\r\nconst filter = ({ handleChange, handleSwitch, categories, qTypeState }) => {\r\n  return (\r\n    <ExamCard header='Filter' showHeader={true}>\r\n      <Form.Group controlId='formGridParent'>\r\n        <Form.Label>Category</Form.Label>\r\n        <Form.Control\r\n          as='select'\r\n          defaultValue='top'\r\n          name='categoryId'\r\n          onChange={handleChange}\r\n        >\r\n          <option disabled value='top'>\r\n            Top...\r\n          </option>\r\n          {categories.map((value) => {\r\n            let categorySlug = value.slug.replace(/_/g, ' / ')\r\n            return <option value={value.id}>{categorySlug}</option>\r\n          })}\r\n        </Form.Control>\r\n      </Form.Group>\r\n      <Form.Check\r\n        name='sbaOnly'\r\n        type='switch'\r\n        id='sba-only-switch'\r\n        label='Only SBA'\r\n        onChange={handleSwitch}\r\n        disabled={qTypeState === 'matrix'}\r\n      />\r\n      <Form.Check\r\n        name='matrixOnly'\r\n        type='switch'\r\n        id='matrix-only-switch'\r\n        label='Only Matrix'\r\n        onChange={handleSwitch}\r\n        disabled={qTypeState === 'sba'}\r\n      />\r\n    </ExamCard>\r\n  )\r\n}\r\n\r\nexport default filter\r\n","import React from 'react'\r\nimport { Badge, ListGroup } from 'react-bootstrap'\r\nimport { FaTimes } from 'react-icons/fa'\r\nimport ExamCard from './card/card'\r\n\r\nconst SelectedQuestionsPreview = ({\r\n  selectedQuestions,\r\n  selectedQuestionsHandler\r\n}) => {\r\n  return (\r\n    <ExamCard header='Selected Questions Preview' showHeader={false}>\r\n      {\r\n        <ListGroup className='my-2'>\r\n          {selectedQuestions.map((question, index) => (\r\n            <ListGroup.Item key={index} variant={'success'}>\r\n              {`${index + 1}. ${question.title} --> ${question.qText}`}\r\n              <Badge\r\n                variant='danger ml-2'\r\n                onClick={() => {\r\n                  selectedQuestionsHandler(question.id)\r\n                }}\r\n                style={{ cursor: 'pointer' }}\r\n              >\r\n                <FaTimes />\r\n              </Badge>\r\n            </ListGroup.Item>\r\n          ))}\r\n        </ListGroup>\r\n      }\r\n    </ExamCard>\r\n  )\r\n}\r\n\r\nexport default SelectedQuestionsPreview\r\n","import React, { Component } from 'react'\r\nimport {\r\n  Alert,\r\n  Badge,\r\n  Button,\r\n  Col,\r\n  Form,\r\n  FormCheck,\r\n  ListGroup,\r\n  Modal,\r\n  Row\r\n} from 'react-bootstrap'\r\nimport { FaShoppingBasket } from 'react-icons/fa'\r\nimport { connect } from 'react-redux'\r\nimport ExamSpec from '../../components/examBuilder/examSpec'\r\nimport Filter from '../../components/examBuilder/filter'\r\nimport SelectedQuestionsPreview from '../../components/examBuilder/selectedQuestionsPreview'\r\nimport Pagination from '../../components/pagination/pagination'\r\nimport MetaInfo from '../../components/seo/metainfo'\r\nimport { RoutesConfig } from '../../config/routes.config'\r\nimport { fetchCategory } from '../../store/category'\r\nimport { fetchCourseLoader } from '../../store/courses'\r\nimport {\r\n  getQuestionByCategoryLoader,\r\n  getQuestionLoader\r\n} from '../../store/question'\r\nimport { paginate } from '../../utils/paginate'\r\n\r\nclass ExamPaper extends Component {\r\n  state = {\r\n    show: false,\r\n    selectedQuestions: [],\r\n    pageSize: 10,\r\n    currentPage: 1,\r\n    qTypeState: 'all'\r\n  }\r\n  componentDidMount() {\r\n    this.props.onFetchCategoryLoader()\r\n    this.props.onFetchCoursesLoader()\r\n    this.props.onGetQuestionLoader()\r\n  }\r\n\r\n  componentDidUpdate(preProps) {\r\n    if (preProps.editExam !== this.props.editExam) {\r\n      // a very bad and resource consuming computing\r\n      const editQuestions = this.props.editExam.questions.map((e) => {\r\n        const [question] = this.props.question.questions.filter((q) => {\r\n          return q.id.toString() === e\r\n        })\r\n\r\n        this.setState({\r\n          [e]: {\r\n            checked: true,\r\n            id: +e,\r\n            title: question && question.title,\r\n            qText: question && question.qText\r\n          }\r\n        })\r\n\r\n        return {\r\n          checked: true,\r\n          id: +e,\r\n          title: question && question.title,\r\n          qText: question && question.qText\r\n        }\r\n      })\r\n\r\n      this.setState({\r\n        selectedQuestions: editQuestions\r\n      })\r\n    }\r\n  }\r\n\r\n  handleShow = () => {\r\n    //control modal show state\r\n    this.setState({ show: true })\r\n  }\r\n  handleClose = () => {\r\n    //control modal show state\r\n    this.setState({ show: false })\r\n  }\r\n\r\n  checkHandleChange = (e, question) => {\r\n    const isChecked = e.target.checked\r\n    const value = e.target.value\r\n\r\n    if (isChecked) {\r\n      this.setState({\r\n        [value]: {\r\n          checked: true,\r\n          id: question.id,\r\n          title: question.title,\r\n          qText: question.qText\r\n        }\r\n      })\r\n    } else {\r\n      this.setState({\r\n        [value]: {\r\n          checked: false\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  actionHandleChange = (e) => {\r\n    e = e.target\r\n    const v = e.value\r\n\r\n    switch (v) {\r\n      case 'mAll':\r\n        this.props.question.questions.forEach((e) => {\r\n          this.setState({\r\n            [e.id]: { checked: true, id: e.id, title: e.title, qText: e.qText }\r\n          })\r\n        })\r\n        break\r\n      case 'uAll':\r\n        this.props.question.questions.forEach((e) => {\r\n          this.setState({ [e.id]: { checked: false } })\r\n        })\r\n        break\r\n      case 'mPQ':\r\n        paginate(\r\n          this.props.question.questions,\r\n          this.state.currentPage,\r\n          this.state.pageSize\r\n        ).forEach((e) => {\r\n          this.setState({\r\n            [e.id]: { checked: true, id: e.id, title: e.title, qText: e.qText }\r\n          })\r\n        })\r\n        break\r\n      case 'uPQ':\r\n        paginate(\r\n          this.props.question.questions,\r\n          this.state.currentPage,\r\n          this.state.pageSize\r\n        ).forEach((e) => {\r\n          this.setState({\r\n            [e.id]: { checked: false }\r\n          })\r\n        })\r\n        break\r\n      default:\r\n        break\r\n    }\r\n  }\r\n\r\n  selectedQuestionsHandler = (id) => {\r\n    this.setState({\r\n      selectedQuestions: this.state.selectedQuestions.filter(\r\n        (question) => question.id != id\r\n      ),\r\n      [id]: { checked: false }\r\n    })\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    // the category controller\r\n    e = e.target\r\n    this.props.onGetQuestionByCategoryLoader(e.value)\r\n    this.setState({\r\n      id: e.value\r\n    })\r\n  }\r\n\r\n  handleSwitch = (e) => {\r\n    if (e.target.name === 'sbaOnly') {\r\n      if (e.target.checked) {\r\n        this.setState({ qTypeState: 'sba' })\r\n      } else {\r\n        this.setState({ qTypeState: 'all' })\r\n      }\r\n    } else {\r\n      if (e.target.checked) {\r\n        this.setState({ qTypeState: 'matrix' })\r\n      } else {\r\n        this.setState({ qTypeState: 'all' })\r\n      }\r\n    }\r\n  }\r\n\r\n  onPageHandler = (page) => {\r\n    // for pagination\r\n    this.setState({ currentPage: page })\r\n  }\r\n\r\n  render() {\r\n    const quesByQType =\r\n      this.state.qTypeState === 'sba'\r\n        ? this.props.question.questions.filter((ques) => ques.qType === 'sba')\r\n        : this.state.qTypeState === 'matrix'\r\n        ? this.props.question.questions.filter(\r\n            (ques) => ques.qType === 'matrix'\r\n          )\r\n        : this.props.question.questions\r\n\r\n    const questions = paginate(\r\n      quesByQType,\r\n      this.state.currentPage,\r\n      this.state.pageSize\r\n    )\r\n\r\n    const checkedQuestionIds = Object.keys(this.state).filter(\r\n      (key) => !isNaN(key) && this.state[key].checked\r\n    )\r\n\r\n    return (\r\n      <>\r\n        <MetaInfo {...RoutesConfig.ExamBuilder.metaInfo} />\r\n        <Modal show={this.state.show} onHide={this.handleClose}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Selected Questions Preview</Modal.Title>\r\n          </Modal.Header>\r\n\r\n          <Modal.Body>\r\n            <SelectedQuestionsPreview\r\n              selectedQuestions={this.state.selectedQuestions}\r\n              selectedQuestionsHandler={this.selectedQuestionsHandler}\r\n            />\r\n          </Modal.Body>\r\n\r\n          <Modal.Footer>\r\n            <Button variant='secondary' onClick={this.handleClose}>\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n\r\n        {/* Preview questions cart */}\r\n        <div\r\n          style={{\r\n            position: 'fixed',\r\n            bottom: '50px',\r\n            right: '20px',\r\n            width: '50px',\r\n            height: '35px',\r\n            zIndex: '99'\r\n          }}\r\n        >\r\n          <Button onClick={this.handleShow} title='Questions Busket'>\r\n            <FaShoppingBasket size={'2rem'} />\r\n          </Button>\r\n          <span\r\n            className='bg-danger text-white p-1 text-center'\r\n            style={{ position: 'absolute', top: '-15px', right: '-10px' }}\r\n          >\r\n            {this.state.selectedQuestions.length}\r\n          </span>\r\n        </div>\r\n\r\n        <Row>\r\n          <Col lg={4}>\r\n            <Alert variant={'primary'} className='text-center mt-3'>\r\n              Total number of Question is :{quesByQType.length}\r\n            </Alert>\r\n\r\n            <Filter\r\n              handleChange={this.handleChange}\r\n              categories={this.props.category.categories}\r\n              handleSwitch={this.handleSwitch}\r\n              qTypeState={this.qTypeState}\r\n            />\r\n            <ExamSpec\r\n              categories={this.props.category.categories}\r\n              courses={this.props.courses.courses}\r\n              selectedQuestionIds={this.state.selectedQuestions.map(\r\n                (q) => q.id\r\n              )}\r\n              editExamSpec={this.props.editExam}\r\n            />\r\n          </Col>\r\n          <Col lg={8}>\r\n            <FormCheck>\r\n              <ListGroup className='my-2'>\r\n                {questions.length < 1 && (\r\n                  <p className='text-danger'>No Question in this category.</p>\r\n                )}\r\n                {questions.map((question, index) => (\r\n                  <ListGroup.Item\r\n                    key={question.id}\r\n                    variant={index % 2 === 0 ? 'dark' : 'light'}\r\n                  >\r\n                    {\r\n                      <Form.Check\r\n                        //ref={this.state.input}\r\n                        inline\r\n                        type='checkbox'\r\n                        value={question.id}\r\n                        onChange={(e) => {\r\n                          this.checkHandleChange(e, question)\r\n                        }}\r\n                        checked={\r\n                          this.state[question.id] &&\r\n                          this.state[question.id].checked\r\n                        }\r\n                      />\r\n                    }\r\n                    <span>\r\n                      {`${\r\n                        index +\r\n                        1 +\r\n                        this.state.pageSize * (this.state.currentPage - 1)\r\n                      }. ${question.qText}`}\r\n                    </span>\r\n                    <Badge className='ml-2'>{question.qType}</Badge>\r\n                  </ListGroup.Item>\r\n                ))}\r\n              </ListGroup>\r\n            </FormCheck>\r\n            <p className='text-muted'>\r\n              ** Please add checked questions to{' '}\r\n              <Badge variant='info'>Preview Cart</Badge>. Otherwise no questions\r\n              will be avaiable in exam.\r\n            </p>\r\n            <Pagination\r\n              itemsCount={quesByQType.length}\r\n              pageSize={this.state.pageSize}\r\n              currentPage={this.state.currentPage}\r\n              onPageHandler={this.onPageHandler}\r\n            />\r\n\r\n            <div className='d-flex justify-content-center align-items-center'>\r\n              <Button\r\n                onClick={() => {\r\n                  this.setState({\r\n                    selectedQuestions: checkedQuestionIds.map(\r\n                      (id) => this.state[id]\r\n                    )\r\n                  })\r\n                }}\r\n                className='mr-5 mb-2 mb-sm-0'\r\n              >\r\n                Add Questions to Preview Cart\r\n              </Button>\r\n\r\n              <Form.Group controlId='formGridParent'>\r\n                <Form.Label>Actions</Form.Label>\r\n                <Form.Control\r\n                  as='select'\r\n                  name='action'\r\n                  onChange={this.actionHandleChange}\r\n                >\r\n                  <option>Select...</option>\r\n                  <option value='mAll'>Mark All</option>\r\n                  <option value='uAll'>UnMark All</option>\r\n                  <option value='mPQ'>Mark The On Page's Questiones </option>\r\n                  <option value='uPQ'>UnMark The On Page's Questiones</option>\r\n                </Form.Control>\r\n              </Form.Group>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onFetchCategoryLoader: () => dispatch(fetchCategory()),\r\n    onFetchCoursesLoader: () => dispatch(fetchCourseLoader()),\r\n    onGetQuestionLoader: () => dispatch(getQuestionLoader()),\r\n    onGetQuestionByCategoryLoader: (id) =>\r\n      dispatch(getQuestionByCategoryLoader(id))\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.auth,\r\n    question: state.question,\r\n    category: state.category,\r\n    api: state.api,\r\n    courses: state.courses\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ExamPaper)\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useMemo } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar FormGroup = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      children = _ref.children,\n      controlId = _ref.controlId,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"children\", \"controlId\", \"as\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-group');\n  var context = useMemo(function () {\n    return {\n      controlId: controlId\n    };\n  }, [controlId]);\n  return React.createElement(FormContext.Provider, {\n    value: context\n  }, React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    className: classNames(className, bsPrefix)\n  }), children));\n});\nFormGroup.displayName = 'FormGroup';\nexport default FormGroup;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport warning from 'warning';\nimport Col from './Col';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  column: false,\n  srOnly: false\n};\nvar FormLabel = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      column = _ref.column,\n      srOnly = _ref.srOnly,\n      className = _ref.className,\n      htmlFor = _ref.htmlFor,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"column\", \"srOnly\", \"className\", \"htmlFor\"]);\n\n  var _useContext = useContext(FormContext),\n      controlId = _useContext.controlId;\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-label');\n  var classes = classNames(className, bsPrefix, srOnly && 'sr-only', column && 'col-form-label');\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !htmlFor, '`controlId` is ignored on `<FormLabel>` when `htmlFor` is specified.') : void 0;\n  htmlFor = htmlFor || controlId;\n  if (column) return React.createElement(Col, _extends({\n    as: \"label\",\n    className: classes,\n    htmlFor: htmlFor\n  }, props));\n  return (// eslint-disable-next-line jsx-a11y/label-has-for, jsx-a11y/label-has-associated-control\n    React.createElement(\"label\", _extends({\n      ref: ref,\n      className: classes,\n      htmlFor: htmlFor\n    }, props))\n  );\n});\nFormLabel.displayName = 'FormLabel';\nFormLabel.defaultProps = defaultProps;\nexport default FormLabel;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar FormText = React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\nfunction (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'small' : _ref$as,\n      muted = _ref.muted,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"as\", \"muted\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-text');\n  return React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    className: classNames(className, bsPrefix, muted && 'text-muted')\n  }));\n});\nFormText.displayName = 'FormText';\nexport default FormText;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport FormCheck from './FormCheck';\nvar Switch = React.forwardRef(function (props, ref) {\n  return React.createElement(FormCheck, _extends({}, props, {\n    ref: ref,\n    type: \"switch\"\n  }));\n});\nSwitch.displayName = 'Switch';\nSwitch.Input = FormCheck.Input;\nSwitch.Label = FormCheck.Label;\nexport default Switch;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport FormCheck from './FormCheck';\nimport FormControl from './FormControl';\nimport FormGroup from './FormGroup';\nimport FormLabel from './FormLabel';\nimport FormText from './FormText';\nimport Switch from './Switch';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nvar defaultProps = {\n  inline: false\n};\nvar Form = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      inline = _ref.inline,\n      className = _ref.className,\n      validated = _ref.validated,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'form' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"inline\", \"className\", \"validated\", \"as\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form');\n  return React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    className: classNames(className, validated && 'was-validated', inline && bsPrefix + \"-inline\")\n  }));\n});\nForm.displayName = 'Form';\nForm.defaultProps = defaultProps;\nForm.Row = createWithBsPrefix('form-row');\nForm.Group = FormGroup;\nForm.Control = FormControl;\nForm.Check = FormCheck;\nForm.Switch = Switch;\nForm.Label = FormLabel;\nForm.Text = FormText;\nexport default Form;"],"sourceRoot":""}