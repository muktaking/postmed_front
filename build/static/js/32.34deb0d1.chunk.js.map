{"version":3,"sources":["components/customSpinner/circleLoader/circleLoader.js","components/socialShare/socialShare.js","components/customSpinner/circleLoader/circleLoader.module.scss","components/customSpinner/redFillLoader/redFillLoader.js","components/customSpinner/redFillLoader/redFillLoader.module.scss","container/courses/index.js"],"names":["CircleLoader","className","Styles","content","loader","iconStyle","SocialShare","title","description","url","props","process","variant","style","fontSize","quote","hashtag","size","round","body","source","module","exports","RedFillLoader","duration","require","relativeTime","moment","styles","position","top","right","zIndex","Index","landing","dispatch","useDispatch","coursesStore","useSelector","state","courses","isAuthenticated","auth","token","useState","enrollResLoader","setEnrollResLoader","res","setRes","showModalMsg","setShowModalMsg","filter","course","id","useEffect","courseResetLoader","fetchCourseLoader","handleModalClose","RoutesConfig","Course","metaInfo","show","onHide","Header","closeButton","Title","Body","remarkPlugins","remarkGfm","Footer","onClick","onClose","src","alt","loading","error","map","width","Img","imageUrl","to","fontWeight","Text","substring","price","endDate","diff","startDate","humanize","height","axios","baseURL","method","then","response","data","message","catch","fromNow","length"],"mappings":"gHAAA,wEAGe,SAASA,IACtB,OACE,yBAAKC,UAAWC,IAAOC,SACrB,0BAAMF,UAAWC,IAAOE,Y,iLCOxBC,EACE,GADFA,GAEG,EAGM,SAASC,EAAT,GAA6D,IAAtCC,EAAqC,EAArCA,MAAOC,EAA8B,EAA9BA,YAAaC,EAAiB,EAAjBA,IAAQC,EAAS,6CAGzE,OAFAD,EAAME,yBAAiCF,EAGrC,uCAAKR,UAAU,QAAWS,GACxB,kBAAC,IAAD,CACEE,QAAQ,UACRX,UAAU,WACVY,MAAO,CAAEC,SAAU,UAHrB,YAQA,kBAAC,IAAD,CACEL,IAAKA,EACLM,MAAOP,EACPQ,QAAST,EACTN,UAAU,QAEV,kBAAC,IAAD,CAAcgB,KAAMZ,EAAgBa,MAAOb,KAG7C,kBAAC,IAAD,CACEI,IAAKA,EACLF,MAAOC,EACPQ,QAAST,EACTN,UAAU,QAEV,kBAAC,IAAD,CAAagB,KAAMZ,EAAgBa,MAAOb,KAG5C,kBAAC,IAAD,CACEI,IAAKA,EACLU,KAAMX,EACND,MAAOA,EACPN,UAAU,QAEV,kBAAC,IAAD,CAAWgB,KAAMZ,EAAgBa,MAAOb,KAG1C,kBAAC,IAAD,CACEI,IAAKA,EACLW,OAAQX,EACRU,KAAMX,EACND,MAAOA,EACPN,UAAU,QAEV,kBAAC,IAAD,CAAcgB,KAAMZ,EAAgBa,MAAOb,Q,oBChEnDgB,EAAOC,QAAU,CAAC,QAAU,8BAA8B,OAAS,6BAA6B,OAAS,+B,iCCDzG,wEAGe,SAASC,IACtB,OAAO,0BAAMtB,UAAWC,IAAOE,QAAxB,kB,oBCHTiB,EAAOC,QAAU,CAAC,OAAS,8BAA8B,SAAW,kC,6RCe9DE,EAAWC,EAAQ,KACnBC,EAAeD,EAAQ,KAC7BE,SAAcD,GACdC,SAAcH,GAGd,IAAMI,EAAS,CACbC,SAAU,QACVC,IAAK,OACLC,MAAO,OACPC,OAAQ,KAQK,SAASC,EAAT,GAAoC,IAAD,IAAlBC,eAAkB,MAAR,KAAQ,EAC1CC,EAAWC,cACXC,EAAeC,aAAY,SAACC,GAAD,OAAWA,EAAMC,WAC5CC,EAAkBH,aAAY,SAACC,GAAD,OAAgC,OAArBA,EAAMG,KAAKC,SAHV,EAIFC,oBAAS,GAJP,mBAIzCC,EAJyC,KAIxBC,EAJwB,OAK1BF,mBAAS,MALiB,mBAKzCG,EALyC,KAKpCC,EALoC,OAMRJ,mBAAS,MAND,mBAMzCK,EANyC,KAM3BC,EAN2B,KAO5CV,EAAUH,EACVH,EACEG,EAAaG,QAAQW,QAAO,SAACC,EAAQC,GAAT,OAAgBA,EAAK,KACjDhB,EAAaG,QACf,GAEJc,qBAAU,WACRnB,EAASoB,eACTpB,EAASqB,iBACR,CAACrB,IAEJ,IAIMsB,EAAmB,WACvBP,EAAgB,OAGlB,OACE,8BAEIhB,GAAW,kBAAC,IAAawB,IAAaC,OAAOC,UAG/C,kBAAC,IAAD,CAAOC,KAAMZ,EAAca,OAAQL,GACjC,kBAAC,IAAMM,OAAP,CAAcC,aAAW,GACvB,kBAAC,IAAMC,MAAP,iBAEF,kBAAC,IAAMC,KAAP,KACE,kBAAC,IAAD,CAAeC,cAAe,CAACC,MAC5BnB,IAGL,kBAAC,IAAMoB,OAAP,KACE,kBAAC,IAAD,CAAQzD,QAAQ,aAAa0D,QAASb,GAAtC,WAOJ,kBAAC,IAAD,CAAOI,KAAMd,EAAKwB,QA/BF,WAClBvB,EAAO,OA8BmCnC,MAAOe,GAC7C,kBAAC,IAAMmC,OAAP,CAAc9D,UAAU,yBACtB,yBAAKuE,IAAI,2BAA2BvE,UAAU,eAAewE,IAAI,KACjE,4BAAQxE,UAAU,WAAlB,oBAEF,kBAAC,IAAMiE,KAAP,KAAanB,IAIf,wBAAI9C,UAAU,uBAAd,qBACCiC,GAAW,yBAAKjC,UAAU,sBAC1B4C,GAAmB,kBAAC,IAAD,MACnBR,EAAaqC,UACXxC,EACC,yBAAKjC,UAAU,eACb,2DACA,kBAAC,IAAD,OAGF,kBAAC,IAAD,OAEJ,yBAAKA,UAAU,2CACZoC,EAAasC,MACZ,uBAAG1E,UAAU,eACX,+DACEiC,GACA,oCACE,6BACA,kDAAwBG,EAAasC,OAAc,MAKzDnC,EAAQoC,KAAI,SAACxB,GAAD,OACV,kBAAC,IAAD,CAAMnD,UAAU,OAAOY,MAAO,CAAEgE,MAAO,UACrC,kBAAC,oBAAD,KACE,kBAAC,IAAKC,IAAN,CACElE,QAAQ,MACR4D,IACEpB,EAAO2B,SAAP,UACOpE,iCADP,YACyCyC,EAAO2B,UADhD,UAEOpE,iCAFP,gCAMN,kBAAC,IAAKuD,KAAN,KACE,kBAAC,OAAD,CAAMc,GAAE,mBAAc5B,EAAOC,KAC3B,kBAAC,IAAKY,MAAN,CAAYpD,MAAO,CAAEC,SAAU,SAAUmE,WAAY,QAClD7B,EAAO7C,QAGZ,kBAAC,IAAK2E,KAAN,KACE,kBAAC,IAAD,CAAef,cAAe,CAACC,MAC5BhB,EAAO5C,YAAY2E,UAAU,EAAG,KAAO,QAE1C,uBAAGlF,UAAU,eACX,kBAAC,IAAD,CACEW,QAAQ,kBACR0D,QAAS,WACPpB,EAAgBE,EAAO5C,eAH3B,UAUJ,kBAAC,IAAK0E,KAAN,CAAWjF,UAAU,kCACnB,6BACE,kBAAC,IAAD,CAAiBgB,KAAK,WAAY,IAClC,0BAAMhB,UAAU,gCACbmD,EAAOgC,MAAQhC,EAAOgC,MAAQ,QAAU,SAG7C,6BACE,kBAAC,IAAD,CAAenE,KAAK,WAAY,IAChC,0BAAMhB,UAAU,qCACb0B,WACWA,EAAOyB,EAAOiC,SAASC,KAAKlC,EAAOmC,YAC5CC,WAAa,YAItB,kBAAC,IAAKN,KAAN,CAAWjF,UAAU,oBACnB,kBAAC,OAAD,CAAM+E,GAAI,kBAAoB5B,EAAOC,IACnC,kBAAC,IAAD,CAAQzC,QAAQ,WAAhB,iBAMJ,6BACA,yBAAKX,UAAU,oDACZwC,EACC,kBAAC,IAAD,CACE7B,QAAQ,UAGRC,MAAO,CACLgE,MAAO,QACPY,OAAQ,OACR3E,SAAU,QAEZwD,QAAS,WAEPxB,GAAmB,GACnB4C,IAAM,CACJC,QAAShF,iCACTF,IAAK,mBAAqB2C,EAAOC,GACjCuC,OAAQ,UAEPC,MAAK,SAACC,GACLhD,GAAmB,GACnBE,EAAO8C,EAASC,KAAKC,YAEtBC,OAAM,SAACtB,GACN7B,GAAmB,GACnBE,EACE,yGAxBV,UAgCA,kBAAC,OAAD,CAAMgC,GAAI,UACR,kBAAC,IAAD,CAAOpE,QAAQ,UAAUX,UAAU,OAAnC,6BAMN,6BACA,kBAAC,IAAKiF,KAAN,CAAWjF,UAAU,0BACnB,wCAAc0B,EAAOyB,EAAOmC,WAAWW,aAG3C,kBAAC,IAAK7B,OAAN,KACE,kBAAC,IAAD,CACE9D,MAAO6C,EAAO7C,MACdC,YAAa4C,EAAO5C,YACpBC,IAAI,WAOfyB,GAAWG,EAAaG,QAAQ2D,OAAS,GACxC,yBAAKlG,UAAU,iCACb,kBAAC,OAAD,CAAM+E,GAAG,YACP,kBAAC,IAAD,CAAQpE,QAAQ,UAAUK,KAAK,KAAKhB,UAAU,cAA9C","file":"static/js/32.34deb0d1.chunk.js","sourcesContent":["import React from 'react'\r\nimport Styles from './circleLoader.module.scss'\r\n\r\nexport default function CircleLoader() {\r\n  return (\r\n    <div className={Styles.content}>\r\n      <span className={Styles.loader}></span>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Badge } from 'react-bootstrap'\r\nimport {\r\n  EmailIcon,\r\n  EmailShareButton,\r\n  FacebookIcon,\r\n  FacebookShareButton,\r\n  LinkedinIcon,\r\n  LinkedinShareButton,\r\n  TwitterIcon,\r\n  TwitterShareButton\r\n} from 'react-share'\r\n\r\nconst iconStyle = {\r\n  size: 35,\r\n  round: true\r\n}\r\n\r\nexport default function SocialShare({ title, description, url, ...props }) {\r\n  url = process.env.REACT_APP_BASE_URL + url\r\n\r\n  return (\r\n    <div className='mt-3' {...props}>\r\n      <Badge\r\n        variant='success'\r\n        className='mr-1 p-1'\r\n        style={{ fontSize: '.8rem' }}\r\n      >\r\n        Share on\r\n      </Badge>\r\n\r\n      <FacebookShareButton\r\n        url={url}\r\n        quote={description}\r\n        hashtag={title}\r\n        className='mr-1'\r\n      >\r\n        <FacebookIcon size={iconStyle.size} round={iconStyle.round} />\r\n      </FacebookShareButton>\r\n\r\n      <TwitterShareButton\r\n        url={url}\r\n        title={description}\r\n        hashtag={title}\r\n        className='mr-1'\r\n      >\r\n        <TwitterIcon size={iconStyle.size} round={iconStyle.round} />\r\n      </TwitterShareButton>\r\n\r\n      <EmailShareButton\r\n        url={url}\r\n        body={description}\r\n        title={title}\r\n        className='mr-1'\r\n      >\r\n        <EmailIcon size={iconStyle.size} round={iconStyle.round} />\r\n      </EmailShareButton>\r\n\r\n      <LinkedinShareButton\r\n        url={url}\r\n        source={url}\r\n        body={description}\r\n        title={title}\r\n        className='mr-1'\r\n      >\r\n        <LinkedinIcon size={iconStyle.size} round={iconStyle.round} />\r\n      </LinkedinShareButton>\r\n    </div>\r\n  )\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"circleLoader_content__3D3cc\",\"loader\":\"circleLoader_loader__1gZEe\",\"rotate\":\"circleLoader_rotate__u3nN8\"};","import React from 'react'\r\nimport Styles from './redFillLoader.module.scss'\r\n\r\nexport default function RedFillLoader() {\r\n  return <span className={Styles.loader}>L &nbsp; ading</span>\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"redFillLoader_loader__B8h_u\",\"rotation\":\"redFillLoader_rotation__RZUmO\"};","import axios from 'axios'\r\nimport * as moment from 'dayjs'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Badge, Button, Card, Modal, Toast } from 'react-bootstrap'\r\nimport { FaCalendarAlt, FaMoneyCheckAlt } from 'react-icons/fa'\r\nimport { LazyLoadComponent } from 'react-lazy-load-image-component'\r\nimport ReactMarkdown from 'react-markdown'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport remarkGfm from 'remark-gfm'\r\nimport CircleLoader from '../../components/customSpinner/circleLoader/circleLoader'\r\nimport RedFillLoader from '../../components/customSpinner/redFillLoader/redFillLoader'\r\nimport MetaInfo from '../../components/seo/metainfo'\r\nimport SocialShare from '../../components/socialShare/socialShare'\r\nimport { RoutesConfig } from '../../config/routes.config'\r\nimport { courseResetLoader, fetchCourseLoader } from '../../store/courses'\r\nconst duration = require('dayjs/plugin/duration')\r\nconst relativeTime = require('dayjs/plugin/relativeTime')\r\nmoment.extend(relativeTime)\r\nmoment.extend(duration)\r\n\r\n//styles to show toast message\r\nconst styles = {\r\n  position: 'fixed',\r\n  top: '70px',\r\n  right: '10px',\r\n  zIndex: 100\r\n}\r\n\r\n/**\r\n *\r\n * @param {landing} dentotes landing page is or not; boolean\r\n * @returns nothing\r\n */\r\nexport default function Index({ landing = null }) {\r\n  const dispatch = useDispatch()\r\n  const coursesStore = useSelector((state) => state.courses)\r\n  const isAuthenticated = useSelector((state) => state.auth.token !== null)\r\n  const [enrollResLoader, setEnrollResLoader] = useState(false)\r\n  const [res, setRes] = useState(null) // get server response after enrollment request by student\r\n  const [showModalMsg, setShowModalMsg] = useState(null) // show modal\r\n  let courses = coursesStore\r\n    ? landing\r\n      ? coursesStore.courses.filter((course, id) => id < 3)\r\n      : coursesStore.courses\r\n    : []\r\n\r\n  useEffect(() => {\r\n    dispatch(courseResetLoader()) // reset course error msg\r\n    dispatch(fetchCourseLoader()) // fetch courses\r\n  }, [dispatch])\r\n\r\n  const handleClose = () => {\r\n    setRes(null)\r\n  }\r\n\r\n  const handleModalClose = () => {\r\n    setShowModalMsg(null)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {/* SEO section */}\r\n      {!landing && <MetaInfo {...RoutesConfig.Course.metaInfo} />}\r\n\r\n      {/* Modal section --> shows details of a course after clicking 'More' button */}\r\n      <Modal show={showModalMsg} onHide={handleModalClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Details</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <ReactMarkdown remarkPlugins={[remarkGfm]}>\r\n            {showModalMsg}\r\n          </ReactMarkdown>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant='secondary ' onClick={handleModalClose}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n      {/* Toast section --> shows server response after enrollment request */}\r\n      <Toast show={res} onClose={handleClose} style={styles}>\r\n        <Toast.Header className='bg-warning text-white'>\r\n          <img src='holder.js/20x20?text=%20' className='rounded me-2' alt='' />\r\n          <strong className='me-auto'>Server Response</strong>\r\n        </Toast.Header>\r\n        <Toast.Body>{res}</Toast.Body>\r\n      </Toast>\r\n\r\n      {/* Main Section */}\r\n      <h3 className='text-center heading'>Available Courses</h3>\r\n      {landing && <div className='heading-underline'></div>}\r\n      {enrollResLoader && <CircleLoader />}\r\n      {coursesStore.loading &&\r\n        (landing ? ( //show different preloader based on landing page\r\n          <div className='text-center'>\r\n            <span>Please wait. Courses are </span>\r\n            <RedFillLoader />\r\n          </div>\r\n        ) : (\r\n          <CircleLoader />\r\n        ))}\r\n      <div className='d-flex justify-content-around flex-wrap'>\r\n        {coursesStore.error ? ( // show courses error messsage\r\n          <p className='text-danger'>\r\n            <span>Courses can not be retrived.</span>\r\n            {!landing && (\r\n              <>\r\n                <hr />\r\n                <span>Possible Reason: {coursesStore.error}</span>{' '}\r\n              </>\r\n            )}\r\n          </p>\r\n        ) : (\r\n          courses.map((course) => (\r\n            <Card className='my-3' style={{ width: '350px' }}>\r\n              <LazyLoadComponent>\r\n                <Card.Img\r\n                  variant='top'\r\n                  src={\r\n                    course.imageUrl\r\n                      ? `${process.env.REACT_APP_SITE_URL}/${course.imageUrl}`\r\n                      : `${process.env.REACT_APP_SITE_URL}/images/courses/index.png`\r\n                  }\r\n                />\r\n              </LazyLoadComponent>\r\n              <Card.Body>\r\n                <Link to={`/courses/${course.id}`}>\r\n                  <Card.Title style={{ fontSize: '1.4rem', fontWeight: '900' }}>\r\n                    {course.title}\r\n                  </Card.Title>\r\n                </Link>\r\n                <Card.Text>\r\n                  <ReactMarkdown remarkPlugins={[remarkGfm]}>\r\n                    {course.description.substring(0, 250) + ' ...'}\r\n                  </ReactMarkdown>\r\n                  <p className='text-center'>\r\n                    <Button\r\n                      variant='outline-primary'\r\n                      onClick={() => {\r\n                        setShowModalMsg(course.description)\r\n                      }}\r\n                    >\r\n                      More\r\n                    </Button>\r\n                  </p>\r\n                </Card.Text>\r\n                <Card.Text className='d-flex justify-content-between'>\r\n                  <div>\r\n                    <FaMoneyCheckAlt size='1.5rem' />{' '}\r\n                    <span className='bg-info text-white px-3 py-1'>\r\n                      {course.price ? course.price + ' Taka' : 'Free'}\r\n                    </span>\r\n                  </div>\r\n                  <div>\r\n                    <FaCalendarAlt size='1.5rem' />{' '}\r\n                    <span className='bg-secondary text-white px-3 py-1'>\r\n                      {moment\r\n                        .duration(moment(course.endDate).diff(course.startDate))\r\n                        .humanize() + ' long.'}\r\n                    </span>\r\n                  </div>\r\n                </Card.Text>\r\n                <Card.Text className='text-center mt-2'>\r\n                  <Link to={'/exams/courses/' + course.id}>\r\n                    <Button variant='primary'>Go to Exams</Button>\r\n                  </Link>\r\n                </Card.Text>\r\n                {/* {isAuthenticated && (\r\n                  \r\n                )} */}\r\n                <hr />\r\n                <div className='d-flex justify-content-center align-items-center'>\r\n                  {isAuthenticated ? (\r\n                    <Button\r\n                      variant='primary'\r\n                      //size='lg'\r\n                      //className='px-5'\r\n                      style={{\r\n                        width: '300px',\r\n                        height: '55px',\r\n                        fontSize: '18px'\r\n                      }}\r\n                      onClick={() => {\r\n                        //setAuthorizationToken(token);\r\n                        setEnrollResLoader(true)\r\n                        axios({\r\n                          baseURL: process.env.REACT_APP_SITE_URL,\r\n                          url: '/courses/enroll/' + course.id,\r\n                          method: 'patch'\r\n                        })\r\n                          .then((response) => {\r\n                            setEnrollResLoader(false)\r\n                            setRes(response.data.message)\r\n                          })\r\n                          .catch((error) => {\r\n                            setEnrollResLoader(false)\r\n                            setRes(\r\n                              'Sorry. Enrollment to this course is not possible due to server error. Please contact with admin.'\r\n                            )\r\n                          })\r\n                      }}\r\n                    >\r\n                      Enroll\r\n                    </Button>\r\n                  ) : (\r\n                    <Link to={'/login'}>\r\n                      <Badge variant='warning' className='p-2'>\r\n                        Please Login to Enroll.\r\n                      </Badge>\r\n                    </Link>\r\n                  )}\r\n                </div>\r\n                <hr />\r\n                <Card.Text className='text-muted text-center'>\r\n                  <span>Start: {moment(course.startDate).fromNow()}</span>\r\n                </Card.Text>\r\n              </Card.Body>\r\n              <Card.Footer>\r\n                <SocialShare\r\n                  title={course.title}\r\n                  description={course.description}\r\n                  url=''\r\n                />\r\n              </Card.Footer>\r\n            </Card>\r\n          ))\r\n        )}\r\n      </div>\r\n      {landing && coursesStore.courses.length > 3 && (\r\n        <div className='d-flex justify-content-center'>\r\n          <Link to='/courses'>\r\n            <Button variant='warning' size='xl' className='text-white'>\r\n              More Ongoing Courses...\r\n            </Button>\r\n          </Link>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n"],"sourceRoot":""}